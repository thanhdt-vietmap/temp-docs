{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"VIETMAP MAPS API AND SDK DOCUMENTATION","text":"<p>Welcome to VIETMAP's Maps API services and SDK solutions.</p>"},{"location":"map-api/FRT-TRACK-API/","title":"FRT TRACK API","text":""},{"location":"map-api/FRT-TRACK-API/#api-testing-domain","title":"API testing domain","text":"<p>Refer this link: https://maps.fastmap.vn/trackdev/swagger/index.html</p>"},{"location":"map-api/FRT-TRACK-API/#api-detailed-description","title":"API detailed description","text":""},{"location":"map-api/FRT-TRACK-API/#1-token-get-access-token","title":"1. Token: Get access token","text":"<ul> <li>URL: /track/api/auth/token</li> <li>Method:POST</li> <li>Parameter:   . username   . password</li> <li>Output: <pre><code>{\n\"access_token\": \"string\", \n\"expires_in\":86400 //validity period (second), \n\"refresh_expires_in\": 86400 //validity period (second) , \n\"refresh_token\": \"string\", \n\"token_type\": \"Bearer\",\n\"not-before-policy\": 0, \n\"session_state\": \"4959d78e-6bc6-41f9-adb3-bc12146e9740\", \n\"scope\": \"email profile\" \n} \n</code></pre></li> </ul>"},{"location":"map-api/FRT-TRACK-API/#2-objectid-check-whether-the-drivers-id-is-in-vietmaps-server-or-not","title":"2. ObjectId: Check whether the driver's ID is in Vietmap's server or not","text":"<ul> <li>URL: track/api/objects/objectId</li> <li>Method: GET</li> <li>Parameter:  . objectId: Id of FRT's driver</li> <li>Response <pre><code>//If Id exists\n{\n  \"id\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"accountId\": \"d6ae709e-4cd4-4c87-9ef0-0e4e383f2d68\",\n  \"name\": \"testAPI\",\n  \"token\": \"123456789\",\n  \"projectId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"properties\": {\n    \"additionalProp1\": \"string\",\n    \"additionalProp2\": \"string\",\n    \"additionalProp3\": \"string\"\n  },\n  \"inactive\": false,\n  \"createdDt\": \"2023-11-13T07:12:29.693081Z\",\n  \"timestamp\": \"2023-11-13T07:12:29.693082Z\"\n}\n\n//If Id does not exist\n{\n  \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.4\",\n  \"title\": \"Not Found\",\n  \"status\": 404,\n  \"traceId\": \"0HMV1NAGPLTQE:00000001\"\n}\n</code></pre></li> </ul>"},{"location":"map-api/FRT-TRACK-API/#3-object-create-objectdriver","title":"3. Object: Create object(driver)","text":"<ul> <li>URL: /track/api/object/objects</li> <li>Method: POST</li> <li>Body request: <pre><code>{ \n\"id\": \"3fa85f64-5717-4562-b3fc-2c963f66a123\", //unique id of object\n\"name\": \"testAPI\", \n\"projectId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\" //projectId can be null\n\"token\": \"123456789\", \n\"properties\": {  //object description (unlimited key value)\n\"vehicle\": \"motorbike\" \n} \n</code></pre></li> <li>Response: <pre><code>{ \n\"id\": \"3fa85f64-5717-4562-b3fc-2c963f66a123\", \n\"accountId\": \"d6ae709e-4cd4-4c87-9ef0-0e4e383f2d68\", \n\"name\": \"testAPI\", \n\"token\": \"123456789\", \n\"projectId\": null, \n\"properties\": { \n\"vehicle\": \"motorbike\" \n}, \n\"inactive\": false, \n\"createdDt\": \"2023-11-11T03:31:47.6336438Z\", \n\"timestamp\": \"2023-11-11T03:31:47.6336728Z\" \n}\n</code></pre></li> </ul>"},{"location":"map-api/FRT-TRACK-API/#4-tracks-device-use-this-api-to-post-its-location-to-server-driver-app","title":"4. Tracks: Device use this API to post its location to server (Driver App)","text":"<ul> <li>URL: /track/api/track/tracks</li> <li>Method: POST</li> <li>Parameters:    . objectId: Device's Id   . token: Device's token</li> <li>Body request <pre><code>[ \n{ \n\"time\": 1699673552000, //unix time (milisecond)\n\"lng\": 106.69742569657183, \n\"lat\": 10.784564871783019, \n\"speed\": 40, // object speed\n\"heading\": 30, // the direction in which an object is moving (degree), with 0 degerees representing true north and the heading value indicates the angle which the object is moving relative to north\n\"metaData\": {  //object description (unlimited key value)\n\"Giao hang\": \"MD01\" \n} \n} \n] \n</code></pre></li> </ul>"},{"location":"map-api/FRT-TRACK-API/#5-last_wayspoints-api-to-retrieve-the-last-known-information-of-object-sent-to-server-customer-appweb-link","title":"5. Last_wayspoints: API to retrieve the last known information of object sent to server (Customer app/web link)","text":"<ul> <li>URL: /track/api/object/last-waypoints</li> <li>Method: POST</li> <li>Parameter   . time: specific time for object's location retrieval</li> <li>Body request: <pre><code>[ \n\"3fa85f64-5717-4562-b3fc-2c963f66a123\" //object id (driver id)\n] \n</code></pre></li> <li>Response: <pre><code>{ \n\"3fa85f64-5717-4562-b3fc-2c963f66a123\": { \n\"time\": 1699673552000 // unix time (milisecond)\n\"lng\": 106.69742569657183 \n\"lat\": 10.784564871783019 \n\"speed\": 40 //speed (km/h)\n\"heading\": 30 // the direction in which an object is moving (degree), with 0 degerees representing true north and the heading value indicates the angle which the object is moving relative to north\n\"metaData\": { \n\"Giao hang\": \"MD01\" \n} \n} \n} \n</code></pre></li> </ul>"},{"location":"map-api/boundary/","title":"Boundary","text":"<p>The Boundary Maps API is a powerful tool that enables developers to incorporate boundary data into their applications and services. Boundaries, such as country borders, state or province lines, city limits, or even custom-defined areas, play a crucial role in various domains, including location-based services, geospatial analysis, demographic research, and urban planning.</p> <p>With the Boundary Maps API, developers can access an extensive collection of pre-defined boundaries from around the country, or they can create and manage their own custom boundaries. This API provides a straightforward and efficient way to retrieve boundary data, visualize it on maps, and perform various operations on boundaries, such as intersection, union, difference, or simplification.</p>"},{"location":"map-api/boundary/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/boundaries/v3/info/{Id}?apikey={your-apikey}\n</code></pre>"},{"location":"map-api/boundary/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/boundary/#parameters","title":"Parameters","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account. Id string yes User desired boundary data 1292:District 5"},{"location":"map-api/boundary/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/boundaries/v3/info/1292?apikey={your-apikey}\n</code></pre></p> <p>Response <pre><code>{\n    \"geo_wkt\": \"MULTIPOLYGON (((106.685180664 10.756476402, 106.685272217 10.75630188, 106.685508728 10.755866051, 106.685668945 10.755606651, 106.68585968 10.755377769, 106.686164856 10.754994392, 106.686332703 10.754771233, 106.686477661 10.754561424, 106.686729431 10.754096985, 106.686813354 10.753896713, 106.686912537 10.753990173, 106.686981201 10.753864288, 106.687104653 10.753728039, 106.687294006 10.753519058, 106.687034607 10.753245354, 106.686714172 10.752829552, 106.686508179 10.752357483, 106.686455178 10.751917673, 106.686408997 10.751534462, 106.68523407 10.751151085, 106.684616089 10.751041412, 106.684135911 10.751147737, 106.683815002 10.751218796, 106.682243347 10.751646996, 106.68182373 10.751814842, 106.681106567 10.751988411, 106.680778503 10.751992226, 106.680412292 10.75196743, 106.679573059 10.751813889, 106.678619385 10.751694679, 106.678153992 10.751674652, 106.67766571 10.751657486, 106.677459717 10.751585007, 106.677078247 10.751283646, 106.676841736 10.750997543, 106.676628113 10.750584602, 106.676498413 10.75012207, 106.676376343 10.749709129, 106.676223755 10.749351501, 106.675888062 10.749044418, 106.675491333 10.74883461, 106.674964905 10.748695374, 106.674377441 10.748621941, 106.673629761 10.748626709, 106.673225403 10.748713493, 106.672767639 10.748873711, 106.671829224 10.749214172, 106.671257019 10.749352455, 106.670753479 10.749417305, 106.670120239 10.749502182, 106.668731689 10.74965477, 106.667045593 10.749999046, 106.66632843 10.75018692, 106.665687561 10.750201225, 106.665084839 10.750125885, 106.664497375 10.749944687, 106.663734436 10.749605179, 106.661811829 10.749001503, 106.66053009 10.748602867, 106.659347534 10.748240471, 106.656906128 10.747274399, 106.655014038 10.746153831, 106.654918268 10.746315444, 106.654846191 10.746437073, 106.65473938 10.746638298, 106.65460968 10.746897697, 106.654579163 10.746965408, 106.654547955 10.747020021, 106.654533386 10.747045517, 106.654319763 10.747468948, 106.654121399 10.747869492, 106.654090881 10.74793148, 106.654052734 10.748042107, 106.653869629 10.748584747, 106.653836712 10.748703248, 106.653831482 10.748722076, 106.653821289 10.748761574, 106.653778076 10.748929024, 106.653625488 10.749505997, 106.65358482 10.749640993, 106.653556824 10.749733925, 106.653366089 10.750455856, 106.653343201 10.750598907, 106.653343201 10.750677109, 106.653320312 10.751091003, 106.653266907 10.751656532, 106.65259552 10.751563072, 106.652412415 10.751537323, 106.652232325 10.751513405, 106.652046204 10.751488686, 106.651908875 10.751468658, 106.651817322 10.751467705, 106.650512695 10.751481056, 106.650558472 10.75181675, 106.650611877 10.752307892, 106.650619507 10.752356529, 106.650641872 10.752538246, 106.650650024 10.752604485, 106.650657654 10.752710342, 106.650723685 10.753246019, 106.650733948 10.753329277, 106.650741577 10.753400803, 106.650787354 10.753903389, 106.650810242 10.754024506, 106.65083313 10.75423336, 106.650856018 10.754447937, 106.650866191 10.754521695, 106.650878906 10.754613876, 106.650894165 10.754770279, 106.65096283 10.755270004, 106.651016235 10.755741119, 106.651031494 10.755860329, 106.651077271 10.75613308, 106.651100159 10.756352425, 106.651435852 10.756409645, 106.651573181 10.756435394, 106.651901245 10.756505013, 106.65196991 10.756520271, 106.652389526 10.75660038, 106.652511597 10.756619453, 106.652816772 10.756678581, 106.653694153 10.756849289, 106.654548645 10.757016182, 106.65561676 10.757241249, 106.656028748 10.75732708, 106.656341553 10.75739193, 106.656440735 10.75741291, 106.65712738 10.757557869, 106.657707214 10.757680893, 106.65827179 10.757787704, 106.659515381 10.758041382, 106.660064697 10.758146286, 106.660179138 10.758167267, 106.660652161 10.75825882, 106.661529541 10.758441925, 106.661979675 10.75853157, 106.662216187 10.758579254, 106.662773132 10.758690834, 106.663795471 10.758893967, 106.664840698 10.759100914, 106.66494751 10.759121895, 106.665168762 10.759166718, 106.66557312 10.759244919, 106.665901184 10.759300232, 106.66607666 10.759329796, 106.667289734 10.759575844, 106.667892456 10.759699821, 106.668746948 10.759868622, 106.668891907 10.759854317, 106.669029236 10.759907722, 106.669761658 10.760083199, 106.67074585 10.760284424, 106.671058655 10.760347366, 106.67225647 10.7605896, 106.673141479 10.760763168, 106.674369812 10.761009216, 106.6745224 10.761011124, 106.674636841 10.761032104, 106.675033569 10.761288643, 106.675888062 10.761859894, 106.675964355 10.761907578, 106.676429749 10.762195587, 106.676902771 10.7625103, 106.677337646 10.762789726, 106.677429199 10.762848854, 106.67780304 10.763091087, 106.678009033 10.763226509, 106.678215027 10.763370514, 106.678642273 10.763667107, 106.679306028 10.764088634, 106.679779053 10.764388084, 106.681671143 10.765434265, 106.681755066 10.765202522, 106.682434082 10.76354599, 106.683128357 10.761734962, 106.683349609 10.761180878, 106.684013367 10.759461403, 106.684234619 10.758904457, 106.684249878 10.758853912, 106.684318542 10.75867939, 106.684570312 10.758029938, 106.684814453 10.757367134, 106.685096741 10.756648064, 106.685180664 10.756476402)))\",\n    \"id\": 1292,\n    \"name\": \"5\",\n    \"prefix\": \"Qu\u1eadn\",\n    \"full_name\": \"Qu\u1eadn 5\"\n}\n</code></pre></p>"},{"location":"map-api/geocode/","title":"Geocode","text":"<p>Geocode API is a feature provided by VIETMAP that allows developers to convert a street address or place name into geographic coordinates (latitude and longitude). With the Geocode API, developers can create applications that can translate an address or place name into a location on the map, and display it in a custom map.</p>"},{"location":"map-api/geocode/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;forcus.point.lat={forcus.point.lat}&amp;forcus.point.lon={forcus.point.lon}&amp;boundary.rect.min_lon={boundary.rect.min_lon}&amp;boundary.rect.max_lon={boundary.rect.max_lon}&amp;boundary.rect.min_lat={boundary.rect.min_lat}&amp;boundary.rect.max_lat={boundary.rect.max_lat}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.radius={boundary.circle.radius}&amp;layers={layers}\n</code></pre>"},{"location":"map-api/geocode/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/geocode/#parameter","title":"Parameter","text":"Parameter Type Required Default Example text string yes none Tr\u1ea7n Ph\u00fa focus.point.lat floating point number no none 10.756271 focus.point.lon floating point number no none 106.661280 boundary.rect.min_lon floating point number no none 106.3564 boundary.rect.max_lon floating point number no none 107.012794 boundary.rect.min_lat floating point number no none 11.160291 boundary.rect.max_lat floating point number no none 10.376715 boundary.circle.lat floating point number no none 10.756271 boundary.circle.lon floating point number no none 106.661280 boundary.circle.radius floating point number no 50 35 layers string no all layers: address,street,venue address,venue"},{"location":"map-api/geocode/#filter-feature-as-the-same-with-autocomplete","title":"Filter Feature (as the same with autocomplete)","text":"<p>\u2714\ufe0f Layer filtering \u2714\ufe0f Global scope, local focus \u2714\ufe0f Search within a circular region \u2714\ufe0f Search within categories</p>"},{"location":"map-api/geocode/#1-layer-filtering","title":"1. Layer filtering","text":"Layer Description venue points of interest, businesses, things with walls address places with a street address street streets, roads, highways <p>URL:  <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}\n</code></pre></p>"},{"location":"map-api/geocode/#2-global-scope-local-focus","title":"2. Global scope, local focus","text":"Parameter Description focus.point.lat latitude coordinate focus.point.lon longitude coordinate <p>URL:  <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;text={text}\n</code></pre></p>"},{"location":"map-api/geocode/#3-search-within-a-circular-region","title":"3. Search within a circular region","text":"<p>Focus on searching with pair of coordinates together with specific radius</p> Parameter Value text 193 Tr\u1ea7n Ph\u00fa boundary.circle.lat 10.756271 boundary.circle.lon 106.661280 boundary.circle.radius 0.5 <p>URL: <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}&amp;text={text}\n</code></pre></p>"},{"location":"map-api/geocode/#4-search-within-categories","title":"4. Search within categories","text":"<p>Focus on searching with poi categories | chainName categories</p> Parameter Value text 193 Tr\u1ea7n Ph\u00fa boundary.circle.lat 10.756271 boundary.circle.lon 106.661280 boundary.circle.radius 0.5 <p>URL: <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;categories={categories}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}\n</code></pre></p>"},{"location":"map-api/geocodev3/","title":"Geocodev3","text":""},{"location":"map-api/geocodev3/#geocode-version-30","title":"Geocode version 3.0","text":"<p>Updating Geocode 3.0 API is a powerful tool for developers to integrate location search functionality into their applications with optimized performance. Additionally, this latest version utilizes intelligent search algorithms and methods to provide accurate and speedy search results for users. </p>"},{"location":"map-api/geocodev3/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/search/v3?apikey={your-apikey}&amp;text={text}&amp;focus={lat,long}&amp;layers={Layers}\n</code></pre>"},{"location":"map-api/geocodev3/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/geocodev3/#parameter","title":"Parameter","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account. text string yes User desired input C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t focus string no GPS cordinates 10.759540242000032, 106.67660114000005 layers string no Represent for certain type of data such as <code>POI</code>,<code>ADDRESS</code>,<code>VILLAGE</code>,<code>WARD</code>,<code>DIST</code>,<code>CITY</code>,<code>STREET</code> POI cats string no Provide full list of POI categories. Click here POI Categories 1002-1"},{"location":"map-api/geocodev3/#example","title":"Example","text":"<p>Input: <pre><code>https://maps.vietmap.vn/api/search/v3?apikey={your-apikey}&amp;text=C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t, HCM&amp;layers=POI\n</code></pre></p> <p>Respone body: <pre><code>{\n        \"ref_id\": \":POI:420676\",\n        \"address\": \"3 \u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n Ph\u01b0\u1eddng 9 Qu\u1eadn 5 Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"name\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t Chi Nh\u00e1nh Mi\u1ec1n Nam\",\n        \"display\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t Chi Nh\u00e1nh Mi\u1ec1n Nam 3 \u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n Ph\u01b0\u1eddng 9 Qu\u1eadn 5 Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\"\n}\n</code></pre></p>"},{"location":"map-api/geocodev3/#place-version-30","title":"Place version 3.0","text":"<p>The Place API service endpoint provides detailed information about the Place found by its identifier (refid).</p>"},{"location":"map-api/geocodev3/#url_1","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/place/v3?apikey={your-apikey}&amp;refid={refid}\n</code></pre>"},{"location":"map-api/geocodev3/#method_1","title":"Method","text":"<p>GET</p>"},{"location":"map-api/geocodev3/#parameter_1","title":"Parameter","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account. refid string yes A unique <code>refid</code> identifier generated from search response :POI:420676"},{"location":"map-api/geocodev3/#example_1","title":"Example","text":"<p>Input: <pre><code> https://maps.vietmap.vn/api/place/v3?apikey={your-apikey}&amp;refid=:POI:420676\n</code></pre></p> <p>Respone body:</p> <pre><code>{\n    \"hs_num\": \"3\",\n    \"street\": \"\u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n\",\n    \"address\": \"3 \u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n\",\n    \"city_id\": 12,\n    \"city\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n    \"district_id\": 1292,\n    \"district\": \"Qu\u1eadn 5\",\n    \"ward_id\": 984332,\n    \"ward\": \"Ph\u01b0\u1eddng 9\",\n    \"lat\": 10.759540242000032,\n    \"lng\": 106.67660114000005\n}\n</code></pre>"},{"location":"map-api/geofencing/","title":"Geofencing","text":"<p>Geofencing is a location-based technology that allows developers to create virtual boundaries around real-world geographic locations. These virtual boundaries can then be used to trigger location-based events, such as notifications, alerts, or actions.</p> <p>To implement geofencing, developers typically use geofencing maps APIs (Application Programming Interfaces). These APIs provide access to maps and location data, as well as tools for defining geofences, tracking user location, and triggering events.</p>"},{"location":"map-api/geofencing/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/geofencing?apikey={your-apiKey}\n</code></pre>"},{"location":"map-api/geofencing/#method","title":"Method","text":"<p>POST</p>"},{"location":"map-api/geofencing/#parameters","title":"Parameters","text":"Parameter Type Required Default Description apikey string yes none API provided by VIETMAP for customer's account."},{"location":"map-api/geofencing/#example","title":"Example","text":"<p><pre><code>URL:\nhttps://maps.vietmap.vn/api/geofencing?apikey=\u201dYOUR APIKEY\u201d\n</code></pre> <pre><code>Body:\n{\n    \"geometryCenters\": \n    [\n        {\n            \"id\": \"1\",\n            \"long\": 105.7487405,\n            \"lat\": 9.8644254\n        },\n        {\n            \"id\": \"2\",\n            \"long\": 105.7491342,\n            \"lat\": 9.8642686\n        },\n        {\n            \"id\": \"3\",\n            \"long\": 105.7489267,\n            \"lat\": 9.8645398\n        }\n    ],\n    \"radius\": 15,\n    \"long\": 105.7488398,\n    \"lat\": 9.8643837\n}\n</code></pre></p>"},{"location":"map-api/geofencing/#request-body-description","title":"Request body description","text":"Parameter Type Description geometryCenters array An array containing information about the geometry centers of interest. Each element includes the ID, longitude (long), and latitude (lat) of a center point. geometryCenters.id string The identifier of the geometry center. geometryCenters.long number The longitude coordinate of the geometry center. geometryCenters.lat number The latitude coordinate of the geometry center. radius number The radius (in meters) used for defining the area around the central point. long number The longitude coordinate of the central point. lat number The latitude coordinate of the central point."},{"location":"map-api/geofencing/#json-output","title":"JSON Output","text":"<pre><code>{ \n    \"code\": null,\n    \"message\": null,\n    \"data\": [\n        {\n            \"id\": \"1\",\n            \"inside\": true\n        },\n        {\n            \"id\": \"2\",\n            \"inside\": false\n        },\n        {\n            \"id\": \"3\",\n            \"inside\": false\n        }\n    ]\n}\n\n//id: index of the checkpoints, areas to be inspected\n//inside: true (inside the area)/ false (outside the area)\n</code></pre>"},{"location":"map-api/geofencing/#body-response-description","title":"Body response description","text":"Field Type Description code null Indicates the status code of the response, if any. message null Any messages associated with the response, if present. data array An array containing information about each checkpoint or area. data.id string The identifier of the checkpoint or area. data.inside boolean Indicates whether the checkpoint or area is inside (<code>true</code>) or outside (<code>false</code>) the designated area."},{"location":"map-api/isochrone/","title":"Isochrone","text":"<p>The VIETMAP Isochrone API computes areas that are reachable within a specified amount of time from a location, and returns the reachable regions as contours of polygons or lines that you can display on a map.</p>"},{"location":"map-api/isochrone/#use-cases","title":"Use Cases","text":"<p>Some possible areas in which this API may be useful to you:</p> <ul> <li>real estate analysis</li> <li>realtors</li> <li>vehicle scheduling</li> <li>geomarketing</li> <li>reach of electric vehicles</li> <li>transport planning</li> <li>logistics (distribution and retail network planning)</li> </ul>"},{"location":"map-api/match-tolls/","title":"Match-tolls","text":"<p>Get a list of GPS coordinates from a mobile device or a vehicle tracking device that has moved (lat, long). This GPS list is calculated by the Match-tolls API to give the route that best matches the actual route data and the list of toll stations, the amount corresponding to the type of vehicle in the input parameters.</p>"},{"location":"map-api/match-tolls/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/match-tolls?api-version=1.1&amp;apikey={your-apikey}&amp;vehicle={vehicle}\n</code></pre>"},{"location":"map-api/match-tolls/#method","title":"Method","text":"<p>POST</p>"},{"location":"map-api/match-tolls/#parameters","title":"Parameters","text":"Parameter Type Required Default Description apikey array string yes none API provided by VIETMAP for customer's account. vehicle number no 1 <ul><li>= 1  (Applicable to passenger cars: seats &lt; <code>12</code>; trucks: gross tonnage &lt;<code>2 tons</code>) </li> <li>= 2 (Applicable to passenger cars: <code>seats &lt;= 30</code>; trucks: gross tonnage &lt; <code>4 tons</code>) <li>= 3 (Applicable to passenger cars: <code>seats &gt; 31</code>; trucks: total tonnage &lt; <code>10 tons</code>; tractors: not towing containers) <li> = 4 (Applicable to trucks: gross tonnage &lt; <code>18 tons</code>; tractor trucks: containers &lt;= <code>20 feet</code>); <li> = 5 (Applicable to trucks: gross tonnage &gt;= <code>18 tons</code>; tractors: containers &gt; <code>20 feet</code>) <p>Example</p> <p><pre><code>URL:\nhttps://maps.vietmap.vn/api/match-tolls?apikey=\u201dyour-apikey\u201d&amp;vehicle={vehicle}\n\nbody:\n[\n    [\n        106.757849,\n        10.817956\n    ],\n    [\n        106.759134,\n        10.821371\n    ],\n    [\n        106.760694,\n        10.825196\n    ]\n]\n</code></pre> cURL: <pre><code>    curl --location 'https://maps.vietmap.vn/api/match-tolls?apikey=YOUR_API_KEY_HERE&amp;vehicle=4' \\\n    --header 'Content-Type: application/json' \\\n    --data '[\n        [\n            106.757849,\n            10.817956\n        ],\n        [\n            106.759134,\n            10.821371\n        ],\n        [\n            106.760694,\n            10.825196\n        ]\n    ]'\n</code></pre> JSON Output</p> <pre><code>{\n    \"distance\": 0.9228444301945045,\n    \"tolls\": [\n        {\n            \"id\": 441,\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed Xa L\u1ed9 H\u00e0 N\u1ed9i\",\n            \"address\": \"Xa L\u1ed9 H\u00e0 N\u1ed9i\",\n            \"type\": \"\",\n            \"price\": 108000,\n            \"prices\": null\n        }\n    ],\n\n    \"path\": [\n        [\n            106.75796704230189,\n            10.817930472210803\n        ],\n        [\n            106.75817,\n            10.8188359\n        ],\n        [\n            106.758363,\n            10.8199419\n        ],\n        [\n            106.758492,\n            10.8201079\n        ],\n        [\n            106.758639,\n            10.8208459\n        ],\n        [\n            106.75879776283638,\n            10.821455484269388\n        ],\n        [\n            106.758932,\n            10.8219709\n        ],\n        [\n            106.759162,\n            10.8226259\n        ],\n        [\n            106.7593279,\n            10.823036\n        ],\n        [\n            106.7591469,\n            10.8230179\n        ],\n        [\n            106.759248,\n            10.8232789\n        ],\n        [\n            106.7593799,\n            10.8237109\n        ],\n        [\n            106.759499,\n            10.8239979\n        ],\n        [\n            106.759692,\n            10.824369\n        ],\n        [\n            106.7598349,\n            10.824291\n        ],\n        [\n            106.760204,\n            10.8249049\n        ],\n        [\n            106.76043843313977,\n            10.825331492152502\n        ]\n    ],\n}\n</code></pre>"},{"location":"map-api/match-tolls/#response-description","title":"Response description","text":"Parameter Type Description path array Array containing coordinate pairs along the route distance float Total distance of the route (in kilometers) tolls array Array containing toll booth information along the route <p>For the <code>path</code> array:</p> Sub-Parameter Type Description [longitude, latitude] array of floats Coordinate pair representing a point on the route <p>For the <code>tolls</code> array:</p> Sub-Parameter Type Description id integer Unique identifier for the toll booth name string Name of the toll booth address string Address of the toll booth type string Type of toll booth (entry, exit, etc.) price integer Toll price in local currency prices null Additional price information (if available)"},{"location":"map-api/matching/","title":"Matching","text":"<p>Welcome to Matching.</p>"},{"location":"map-api/matrix/","title":"Matrix","text":"<p>The Matrix API is part of the VIETMAP Directions API and with it you can calculate many-to-many distances and times a lot more efficient than calling the Routing API multiple times.</p> <p>In the Routing API we support multiple points, so called 'via points', which results in one route being calculated. The Matrix API results in NxM routes, or more precise NxM distances or times being calculated but is a lot faster compared to NxM single requests.</p> <p>The most simple example is a tourist trying to decide which pizza is close to her instead of using beeline distance she can calculate a 1x4 matrix. Or a delivery service often in the need of big NxN matrices to solve vehicle routing problems.</p> <p>Some other use cases for the Matrix API:</p> <ul> <li>Logistic problems often pick up many items from and deliver them to many locations.</li> <li>Calculating detours with many possible points in-between and selecting the best e.g. interesting for ridesharing or taxi applications. For this 1-to-many requests are necessary.</li> <li>Finding the best tour for a tourist in the need to visit as many points of interests as possible.</li> </ul>"},{"location":"map-api/matrix/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/matrix?api-version=1.1&amp;apikey={your-apikey}&amp;point={point}&amp;point={point}&amp;point={point}&amp;points_encoded={points_encoded}&amp;vehicle={vehicle}&amp;sources={sources}&amp;destinations={destinations}&amp;annotation={annotation}\n</code></pre>"},{"location":"map-api/matrix/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/matrix/#parameters","title":"Parameters","text":"Parameter Type Required Default Description point array string yes none The points for which the route should be calculated. Format:\u00a0[latitude,longitude]. Specify at least an origin and a destination. Via points are possible. The maximum number depends on your plan. points_encoded int or string no true Allows changing the encoding of location data in the response. The default is polyline encoding, which is compact but requires special client code to unpack. Set this parameter to false to switch the encoding to simple coordinate pairs like\u00a0[lon,lat]. See the description of the response format for more information. vehicle string no car Enum: <code>car</code>, <code>bike</code>, <code>foot</code>, <code>motorcycle</code>. The vehicle profile for which the route should be calculated. sources int or string no all Format :\u00a0[<code>{index};{index}[;{index} ...</code>] or all. Use location with given index as source. This is list of starting points. For example, having a total of 7 points, the first 2 points are called the source, the remaining <code>5 points</code> are called the destination. then the <code>index</code> of sources is <code>[0;1]</code>. If you enter 2 or more locations, separate them with a semicolon \";\" destinations int or string no all Format:\u00a0[<code>{index};{index}[;{index} ...</code>] or all. Use location with given index as destination. This is list index of destinations. For example, having a total of 7 points, the first 2 points are called the source, the remaining <code>5 points</code> are called the destination. then the <code>index</code> of destinations is <code>[2;3;4;5]</code>. If you enter 2 or more locations, separate them with a semicolon <code>\";\"</code> annotation string no duration Enum:\u00a0duration, distance"},{"location":"map-api/matrix/#example","title":"Example","text":""},{"location":"map-api/matrix/#url-parameters","title":"URL (Parameters)","text":"<p><pre><code>https://maps.vietmap.vn/api/matrix?api-version=1.1&amp;apikey={your-apikey}&amp;point=10.768897,106.678505&amp;point=10.765496,106.67626&amp;point=10.7627936,106.6750729&amp;point=10.7616745,106.6792425&amp;point=10.765605,106.685383&amp;point=10.766843,106.674029&amp;sources=0;1&amp;destinations=2;3;4;5\n</code></pre> Query param description: </p> Param Value Description point 10.768897,106.678505 <code>Point 0</code>, format in <code>lat,lng</code> point 10.765496,106.67626 <code>Point 1</code>, format in <code>lat,lng</code> point 10.7627936,106.6750729 <code>Point 2</code>, format in <code>lat,lng</code> point 10.7616745,106.6792429 <code>Point 3</code>, format in <code>lat,lng</code> point 10.765605,106.685383 <code>Point 4</code>, format in <code>lat,lng</code> point 10.766843,106.674029 <code>Point 5</code>, format in <code>lat,lng</code> sources 0;1 Index of the start point. In this example, API will receive <code>Point 0</code> and <code>Point 1</code> as source points destinations 2;3;4;5 Index of the end point. In this example, API will receive <code>Point 2</code>, <code>Point 3</code>, <code>Point 4</code> and <code>Point 5</code> as the destination points"},{"location":"map-api/matrix/#response","title":"Response","text":"<pre><code>{\n    \"code\": \"OK\",\n    \"messages\": null,\n    \"durations\": [\n        [\n            230,\n            201,\n            386,\n            193\n        ],\n        [\n            126,\n            188,\n            435,\n            108\n        ]\n    ],\n    \"distances\": [\n        [\n            1766.3,\n            1374.3,\n            1952.2,\n            1113.5\n        ],\n        [\n            507.5,\n            1152.4,\n            2101.8,\n            399.4\n        ]\n    ]\n}\n</code></pre>"},{"location":"map-api/matrix/#response-description","title":"Response description","text":"Field Type Value Description code string <code>'OK'</code> A code indicating the status of the response. messages string <code>null</code> Messages associated with the response, if any. durations array <code>[[230, 201, 386, 193 ], [ 126, 188, 435, 108 ]],</code> An array containing duration information (seconds).          distances array <code>[[1766.3, 1374.3, 1952.2, 1113.5], [507.5, 1152.4, 2101.8, 399.4]]</code> An array containing distance information (meters)."},{"location":"map-api/overview/","title":"Overview","text":"<p>VIETMAP has more than 18 years of experience in GIS and transportation in particular Digital data of VIETMAP including traffic, rivers, administrative boundaries throughout the country. The data is updated monthly In parallel with digital map data, VIETMAP also provides VIETMAP Map APIs:</p> <p>VIETMAP Tilemap</p> <p>VIETMAP Routing</p> <p>VIETMAP Geocoder</p>"},{"location":"map-api/overview/#api-key-contact-information","title":"API Key Contact information","text":"<ul> <li>Please send an email: maps-api.support@vietmap.vn</li> <li>More information: https://vietmap.vn/maps-api</li> </ul>"},{"location":"map-api/overview/#api-format-common","title":"API Format Common","text":""},{"location":"map-api/place/","title":"Place","text":""},{"location":"map-api/place/#place-version-30","title":"Place version 3.0","text":"<p>The Place API service endpoint provides detailed information about the Place found by its identifier (refid).</p>"},{"location":"map-api/place/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/place/v3?apikey={your-apikey}&amp;refid={refid}\n</code></pre>"},{"location":"map-api/place/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/place/#parameter","title":"Parameter","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account. refid string yes A unique <code>refid</code> identifier generated from search response vm:ADDRESS:8D92EB120DDE9996"},{"location":"map-api/place/#example","title":"Example","text":"<p>Input: <pre><code> https://maps.vietmap.vn/api/place/v3?apikey={your-apikey}&amp;refid=vm:ADDRESS:8D92EB120DDE9996\n</code></pre></p> <p>Respone body:</p> <pre><code>{\n    \"display\": \"3 \u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n Ph\u01b0\u1eddng 9,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n    \"name\": \"3 \u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n\",\n    \"hs_num\": \"3\",\n    \"street\": \"\u0110\u01b0\u1eddng Tr\u1ea7n Nh\u00e2n T\u00f4n\",\n    \"address\": \"\",\n    \"city_id\": 12,\n    \"city\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n    \"district_id\": 1292,\n    \"district\": \"Qu\u1eadn 5\",\n    \"ward_id\": 984332,\n    \"ward\": \"Ph\u01b0\u1eddng 9\",\n    \"lat\": 10.759011645000044,\n    \"lng\": 106.67545328800009\n}\n</code></pre>"},{"location":"map-api/place/#response-description","title":"Response description","text":"Parameter Type Description display string Display name containing detailed information of the address name string Name of the street or location hs_num string House number or building number street string Name of the street address string Additional address information (if available) city_id int Unique identifier for the city city string Name of the city district_id int Unique identifier for the district district string Name of the district ward_id int Unique identifier for the ward ward string Name of the ward lat number Latitude coordinate of the address lng number Longitude coordinate of the address"},{"location":"map-api/reverse-batch/","title":"Reverse Batch","text":"<p>REVERSE - BATCH API provides the feature to convert a list of coordinates into the corresponding addresses for each point in that list of coordinates. </p>"},{"location":"map-api/reverse-batch/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/geocode-fleet/reverse-batch?apikey={your-apikey}\n</code></pre>"},{"location":"map-api/reverse-batch/#method","title":"Method","text":"<p>POST</p>"},{"location":"map-api/reverse-batch/#parameter-description","title":"Parameter description","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account."},{"location":"map-api/reverse-batch/#body","title":"Body","text":"<pre><code>[\n    {\n        \"lon\": 107.42193008289291,\n        \"lat\": 10.91527176296465,\n        \"vehicleType\": 4,\n        \"ton\": 10,\n        \"seat\": 0,\n        \"heading\": 0\n    },\n    {\n        \"lon\": 107.4267435202076,\n        \"lat\": 10.889979077535088,\n        \"vehicleType\": 4,\n        \"ton\": 0,\n        \"seat\": 0,\n        \"heading\": 0\n    }\n]\n</code></pre>"},{"location":"map-api/reverse-batch/#body-parameters-description","title":"Body parameters description","text":"Parameter Type Required Description Example lon number yes Longitude of the desired place 106.675461 lat number yes Latitude of the desired place 10.758970 vehicleType number no Type of vehicle (<code>1=Car</code>, <code>2=Taxi</code>, <code>3=Bus</code>, <code>4=Coach</code>, <code>5=Truck</code>, <code>6=Truck trailer</code>, <code>7=Motorcycle</code>) 4 ton number no Capacity of the vehicle <code>(Truck/Truck trailer)</code> in tons 0 seat number no Seating capacity of the vehicle <code>(bus/coach)</code> 19 heading number no Angle in degrees compared to the Northern line <code>(0-359)</code> 270"},{"location":"map-api/reverse-batch/#example","title":"Example","text":"<p>URL:</p> <pre><code>https://maps.vietmap.vn/api/geocode-fleet/reverse-batch?apikey={your-apikey}\n</code></pre> <p>Body: <pre><code>[\n    {\n        \"lon\": 107.42193008289291,\n        \"lat\": 10.91527176296465,\n        \"vehicleType\": 4,\n        \"ton\": 10,\n        \"seat\": 0,\n        \"heading\": 0\n    },\n    {\n        \"lon\": 107.4267435202076,\n        \"lat\": 10.889979077535088,\n        \"vehicleType\": 4,\n        \"ton\": 0,\n        \"seat\": 0,\n        \"heading\": 0\n    }\n]\n</code></pre></p>"},{"location":"map-api/reverse-batch/#json-output","title":"JSON Output","text":"<pre><code>[\n    {\n        \"admin\": {\n            \"id\": 199456,\n            \"names\": [\"T. \u0110\u1ed3ng Nai\", \"H. Xu\u00e2n L\u1ed9c\", \"TT. Gia Ray\"],\n            \"inside\": true\n        },\n        \"address\": {\n            \"address\": \"6 Qu\u1ed1c L\u1ed9 1A\",\n            \"admins\": [\"T. \u0110\u1ed3ng Nai\", \"H. Xu\u00e2n L\u1ed9c\", \"TT. Gia Ray\"],\n            \"distance\": 0.00022955630504154108\n        },\n        \"network\": {\n            \"id\": 61657,\n            \"name\": \"Qu\u1ed1c L\u1ed9 1A\",\n            \"speed\": null,\n            \"distance\": 1.1586102614531273E-05\n        }\n    },\n    {\n        \"admin\": {\n            \"id\": 920352,\n            \"names\": [\"T. \u0110\u1ed3ng Nai\", \"H. Xu\u00e2n L\u1ed9c\", \"X. Xu\u00e2n T\u00e2m\"],\n            \"inside\": true\n        },\n        \"address\": null,\n        \"network\": {\n            \"id\": 61185,\n            \"name\": \"Qu\u1ed1c L\u1ed9 1A\",\n            \"speed\": null,\n            \"distance\": 2.3453771497588975E-06\n        }\n    }\n]\n</code></pre>"},{"location":"map-api/reverse-batch/#response-description","title":"Response Description","text":"<p>The response from the API is structured into a list objects which contains three main objects: admin, address, and network. Each object contains specific details as described in the tables below:</p>"},{"location":"map-api/reverse-batch/#admin-object","title":"Admin Object","text":"Parameter Type Description id number VietMap unique identifier of the ward administrative region names array List of names representing the hierarchical administrative levels inside boolean Indicates whether the location is inside the given administrative region"},{"location":"map-api/reverse-batch/#address-object","title":"Address Object","text":"Parameter Type Description address string Name of the location admins array List of administrative regions associated with the address distance number Distance from provided lat, lng to the address"},{"location":"map-api/reverse-batch/#network-object","title":"Network Object","text":"Parameter Type Description id number VietMap unique identifier for the network name string Name of the network speed null Speed of the network, currently it not available for public distance number Distance to the network"},{"location":"map-api/reverse/","title":"Reverse","text":"<p>Reverse geocoding is the process of converting geographic coordinates (latitude and longitude) into a human-readable address or place name. A Reverse API is a feature provided by VIETMAP that allows developers to perform reverse geocoding in their custom mapping applications. With a Reverse API, developers can take a set of coordinates as input and retrieve information such as the nearest address, city, or place name. This information can be used to provide context for the location on the map, or to perform further actions such as search and navigation.</p>"},{"location":"map-api/reverse/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/reverse?api-version=1.1&amp;apikey={your-apikey}&amp;point.lat={point.lat}&amp;point.lon={point.lon}&amp;boundary.circle.radius={boundary.circle.radius}&amp;size={size}&amp;layers={layers}\n</code></pre>"},{"location":"map-api/reverse/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/reverse/#parameters","title":"Parameters","text":"Parameter Type Option Default Description Example point.lat floating point number yes none 10.758584896812293 point.lon floating point number yes none 106.67527198791505 boundary.circle.radius floating point number no 1 0.5 size integer no 10 3 layers use comma to seperate multi layer types no none (all layers) the kind of place you want to find address,street,venue"},{"location":"map-api/reverse/#filter-feature","title":"Filter Feature","text":"<p>Focus on categories of records responed</p> <p>URL:</p> <pre><code>https://maps.vietmap.vn/api/reverse?api-version=1.1&amp;apikey={your-apikey}&amp;point.lat={point.lat}&amp;point.lon={point.lon}&amp;layers={layers}\n</code></pre> Layer Description venue points of interest, businesses, things with walls address places with a street address street streets, roads, highways <p>Distance and Confidence score returned</p> <p>The records which is responed by request will be verified with distance and confidence score</p> <p>\u2714\ufe0f Distance is directly distance form output point to the center (input point) \u2714\ufe0f Confident score is accuracy of results based on distance</p> Distance from\u00a0point.lat/point.lon Confidence score &lt;\u00a01m 1.0 &lt;\u00a010m 0.9 &lt;\u00a0100m 0.8 &lt;\u00a0250m 0.7 &lt;\u00a01km 0.6 &gt;= 1km 0.5"},{"location":"map-api/route-tolls/","title":"Route-tolls","text":"<p>Input the list of GPS coordinates (lat, long). This GPS list is calculated by the Route-tolls API to give the route that best matches the actual route data and the list of toll stations, the amount corresponding to the type of vehicle in the input parameters.</p> <p></p>"},{"location":"map-api/route-tolls/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/route-tolls?api-version=1.1&amp;apikey={your-apikey}&amp;vehicle={vehicle}\n</code></pre>"},{"location":"map-api/route-tolls/#method","title":"Method","text":"<p>POST</p>"},{"location":"map-api/route-tolls/#parameters","title":"Parameters","text":"Parameter Type Required Default Description apikey array string yes none API provided by VIETMAP for customer's account. vehicle number no 1 <ul><li>= 1  (Applicable to passenger cars: seats &lt; <code>12</code>; trucks: gross tonnage &lt;<code>2 tons</code>) </li> <li>= 2 (Applicable to passenger cars: <code>seats &lt;= 30</code>; trucks: gross tonnage &lt; <code>4 tons</code>) <li>= 3 (Applicable to passenger cars: <code>seats &gt; 31</code>; trucks: total tonnage &lt; <code>10 tons</code>; tractors: not towing containers) <li> = 4 (Applicable to trucks: gross tonnage &lt; <code>18 tons</code>; tractor trucks: containers &lt;= <code>20 feet</code>); <li> = 5 (Applicable to trucks: gross tonnage &gt;= <code>18 tons</code>; tractors: containers &gt; <code>20 feet</code>)"},{"location":"map-api/route-tolls/#example","title":"Example","text":"<p>Input <pre><code>URL:\nhttps://maps.vietmap.vn/api/route-tolls?apikey=\u201dYOUR APIKEY\u201d&amp;vehicle=5\n\n\nbody:\n[\n    [106.765137, 10.477009],[108.363304,11.398591]\n]\n</code></pre> JSON Output</p> <pre><code>{\n    \"path\": [\n        [\n            106.765375,\n            10.477203\n        ],\n        /// More LngLat to present the route here\n        [\n            106.76586,\n            10.478109\n        ]\n    ],\n    \"tolls\": [\n        {\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed C\u1ea7u Ph\u00fa M\u1ef9\",\n            \"address\": \"\u0110\u01b0\u1eddng V\u00f5 Ch\u00ed C\u00f4ng\",\n            \"type\": \"\",\n            \"amount\": 77000\n        },\n        {\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed Long Ph\u01b0\u1edbc\",\n            \"address\": \"Cao T\u1ed1c H\u1ed3 Ch\u00ed Minh Long Th\u00e0nh D\u1ea7u Gi\u00e2y\",\n            \"type\": \"entry\",\n            \"amount\": 0\n        },\n        {\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed D\u1ea7u Gi\u00e2y\",\n            \"address\": \"Cao T\u1ed1c H\u1ed3 Ch\u00ed Minh Long Th\u00e0nh D\u1ea7u Gi\u00e2y\",\n            \"type\": \"exit\",\n            \"amount\": 373000\n        },\n        {\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed S\u00f4ng Phan\",\n            \"address\": \"Km 1725+252 Qu\u1ed1c L\u1ed9 1A\",\n            \"type\": \"\",\n            \"amount\": 177000\n        },\n        {\n            \"name\": \"Tr\u1ea1m Thu Ph\u00ed Km 1661+600\",\n            \"address\": \"Km 1661+600 Qu\u1ed1c L\u1ed9 1A\",\n            \"type\": \"\",\n            \"amount\": 177000\n        }\n    ] \n}\n</code></pre>"},{"location":"map-api/route-tolls/#response-description","title":"Response description","text":"Parameter Type Description path array Array containing coordinate pairs along the route tolls array Array containing toll booth information along the route <p>For the <code>path</code> array:</p> Sub-Parameter Type Description [longitude, latitude] array of floats Coordinate pair representing a point on the route <p>For the <code>tolls</code> array:</p> Sub-Parameter Type Description name string Name of the toll booth address string Address of the toll booth type string Type of toll booth (entry, exit, etc.) amount int Toll amount in local currency"},{"location":"map-api/route/","title":"Route","text":"<p>A Route Maps API is a feature provided by VIETMAP that allows developers to calculate and display the optimal route between two or more locations on a map. With a Route Maps API, developers can specify the start and end points of a journey, along with any additional constraints such as preferred mode of transportation, and retrieve a detailed route that can be displayed on a map. The API may also provide information such as the total distance, estimated travel time, and turn-by-turn directions. Developers can use Route Maps APIs to create applications that help with navigation, transportation planning, and logistics management.</p>"},{"location":"map-api/route/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/route?api-version=1.1&amp;apikey={your-apikey}&amp;point={point}&amp;point={point}&amp;points_encoded={points_encoded}&amp;vehicle={vehicle}\n</code></pre>"},{"location":"map-api/route/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/route/#parameters","title":"Parameters","text":"Parameter Type Required Default Description point array string yes none The points for which the route should be calculated. Format: [latitude,longitude]. Specify at least an origin and a destination. Via points are possible. The maximum number depends on your plan. Example query: <code>&amp;point=lat,lng</code> points_encoded boolean no true Allows changing the encoding of location data in the response. The default is polyline encoding, which is compact but requires special client code to unpack. Set this parameter to false to switch the encoding to simple coordinate pairs like [lon,lat]. See the description of the response format for more information.  We suggest this query should receive <code>true</code> value to decrease the size of the response JSON. vehicle string no car Enum: <code>car</code>, <code>bike</code>, <code>foot</code>, <code>motorcycle</code>. Config the vehicle profiles for which the route should be calculated. optimize string no false Execute TSP if the value = true"},{"location":"map-api/route/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/route?api-version=1.1&amp;apikey={your-apikey}&amp;point=10.79628438955497,106.70592293472612&amp;point=10.801891047584164,106.70660958023404&amp;vehicle=motorcycle\n</code></pre> Response</p> <pre><code>{\n    \"license\": \"vietmap\",\n    \"code\": \"OK\",\n    \"messages\": null,\n    \"paths\": [\n        {\n            \"distance\": 2194.4,\n            \"weight\": 351.4,\n            \"time\": 351400,\n            \"transfers\": 0,\n            \"points_encoded\": true,\n            \"bbox\": [\n                106.70594,\n                10.79479,\n                106.71154,\n                10.80325\n            ],\n            \"points\": \"}s{`Ac_hjSjAkCFQRu@Lu@F_@D]Ng@ZaALa@JY~AoDDEmBiBe@[WMg@M_@KmA]uA_@a@KkA]qA[[Gs@MUE_AKu@Co@Ew@CYAmAGeBKaAEsAKCQMQUGM?KBIFGHCJoBO{@Ck@AQ@MZAJAjAG|ACz@MnCEnAGlBCx@EjA?\\\\EvAEjBE~@Cr@F?HqBv@DBSDIBAl@HFADAVSD@JLB@h@BDADEDAJ@\",\n            \"instructions\": [\n                {\n                    \"distance\": 403.4,\n                    \"heading\": 0,\n                    \"sign\": 0,\n                    \"interval\": [\n                        0,\n                        11\n                    ],\n                    \"text\": \"Ti\u1ebfp t\u1ee5c theo Nguy\u1ec5n C\u1eedu V\u00e2n\",\n                    \"time\": 54800,\n                    \"street_name\": \"Nguy\u1ec5n C\u1eedu V\u00e2n\",\n                    \"last_heading\": null\n                },\n                /// More guide direction here\n                {\n                    \"distance\": 58.7,\n                    \"heading\": 0,\n                    \"sign\": 0,\n                    \"interval\": [\n                        71,\n                        79\n                    ],\n                    \"text\": \"Ti\u1ebfp t\u1ee5c theo \u0110\u01b0\u1eddng Kh\u00f4ng T\u00ean\",\n                    \"time\": 26300,\n                    \"street_name\": \"\u0110\u01b0\u1eddng Kh\u00f4ng T\u00ean\",\n                    \"last_heading\": null\n                },\n                {\n                    \"distance\": 0,\n                    \"heading\": 0,\n                    \"sign\": 4,\n                    \"interval\": [\n                        79,\n                        79\n                    ],\n                    \"text\": \"\u0110\u00edch \u0111\u1ebfn\",\n                    \"time\": 0,\n                    \"street_name\": \"\u0110\u01b0\u1eddng Kh\u00f4ng T\u00ean\",\n                    \"last_heading\": null\n                }\n            ],\n            \"snapped_waypoints\": \"c_hjS}s{`AeDab@\"\n        }\n    ]\n}\n</code></pre>"},{"location":"map-api/route/#response-description","title":"Response description","text":"Parameter Type Description license string License type associated with the routing data code string Status code indicating the success or failure of the request messages string Additional messages related to the request (if any) paths array Array containing route information including distance, time, etc. <p>For each route in the <code>paths</code> array:</p> Sub-Parameter Type Description distance number Total distance of the route (in meters) weight number Weight assigned to the route time int Total time required for the route (in milliseconds) transfers int Number of transfers required for the route points_encoded boolean Whether the <code>points</code> and <code>snapped_waypoints</code> fields are polyline-encoded strings rather than JSON arrays of coordinates bbox array The bounding box of the route geometry. Format: [<code>minLon</code>, <code>minLat</code>, <code>maxLon</code>, <code>maxLat</code>] points string Encoded points representing the route using <code>google polyline 5</code> format. If the <code>points_encoded</code> is <code>false</code>, points will response a list of <code>[lat,lng]</code> format. instructions array Array containing turn-by-turn navigation instructions snapped_waypoints string Snapped waypoints representing the route (if available) <p>For each navigation instruction in the <code>instructions</code> array:</p> Sub-Parameter Type Description distance double Distance until the next instruction (in meters) heading int Heading direction of the instruction (if available) sign int Direction sign of the instruction, sign description here interval array Two indices into points, referring to the beginning and the end of the segment of the route this instruction refers to. text string A description what the user has to do in order to follow the route. time int The duration for this instruction, in milliseconds. street_name string The name of the street to turn onto in order to follow the route. last_heading null Last heading direction of the instruction (if available)"},{"location":"map-api/tilemap/","title":"Tilemap","text":"<p>The VIETMAP Tilemap serves raster, vector tiles generated from VIETMAP styles. Raster tiles can be used in traditional web mapping libraries like Mapbox.js, Leaflet, OpenLayers, and others to create interactive slippy maps. The VIETMAP Tilemap is well-suited for maps with limited interactivity or use on devices that do not support WebGL. Using a tilemap approach to rendering maps provides several benefits, including: </p> <ul> <li>Improved performance (since only the visible tiles need to be loaded)</li> <li>Reduced data usage (since tiles can be cached for offline use)</li> <li>Better scalability (since the number of tiles can be adjusted based on the level of zoom)</li> </ul> <p>VIETMAP now provides 2 types of custom maps</p> Name Description Raster The map data is typically stored as raster images, which are then divided into a grid of small tiles, each containing a specific portion of the map. Vector Vector tiles are small packages of vector data that can be downloaded and rendered on a client device, such as a web browser or mobile app. The vector data can include information such as street names, building footprints, and topographic features."},{"location":"map-api/tilemap/#raster","title":"Raster","text":""},{"location":"map-api/tilemap/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/tm/{z}/{x}/{y}@2x.png?apikey={your-apikey}\n</code></pre> <p>There are 2 different themes of Raster Tilemap's display. This is: </p> Light Dark <p>Dark mode <pre><code>https://maps.vietmap.vn/api/dm/{z}/{x}/{y}@2x.png?apikey={your-apikey}\n</code></pre> Light mode</p> <pre><code>https://maps.vietmap.vn/api/lm/{z}/{x}/{y}@2x.png?apikey={your-apikey}\n</code></pre>"},{"location":"map-api/tilemap/#parameters","title":"Parameters","text":"Parameters Type Option Default Example Description x int yes none 1 Tilemap x axis y int yes none 1 Tilemap y axis z int yes none 1 Tilemap z axis"},{"location":"map-api/tilemap/#vector","title":"Vector","text":"<p>Vector tilemap APIs offer more flexibility in terms of customizing the appearance of the map. Developers can use the API to control the rendering of map features such as colors, labels, and icons, making it easier to create maps that match their specific branding or design requirements. </p> <p>To display vector tilemap, you need to use an SDK WEB GL. For mobile, we provide Flutter SDK, React Native SDK, Android SDK, iOS SDK</p> <p> </p>    Street map"},{"location":"map-api/tilemap/#url_1","title":"URL","text":"<p>Web GL SDK <pre><code>https://maps.vietmap.vn/mt/tm/style.json?apikey={your-apikey}\n</code></pre></p> <p>There are 2 different themes of Vector Tilemap's display. This is: </p> Light Dark <p>Dark mode <pre><code>https://maps.vietmap.vn/mt/dm/style.json?apikey={your-apikey}\n</code></pre> Light mode <pre><code>https://maps.vietmap.vn/mt/lm/style.json?apikey={your-apikey}\n</code></pre></p>"},{"location":"map-api/tilemap/#mobile-sdk","title":"Mobile SDK","text":"<p>Raster tile <pre><code>https://maps.vietmap.vn/api/maps/raster/styles.json?apikey={your-apikey}\n</code></pre> Vector tile <pre><code>https://maps.vietmap.vn/api/maps/light/styles.json?apikey={your-apikey}\n</code></pre></p>"},{"location":"map-api/traffic/","title":"Traffic","text":"<p>A traffic maps API provides real-time traffic information and displays it on a map. These APIs typically collect traffic data from a variety of sources, including traffic sensors, GPS data from vehicles, and traffic cameras.</p> <p>With a traffic maps API, developers can integrate traffic data into their own web or mobile applications, allowing users to view traffic conditions in real-time. This can be useful for a range of applications, such as navigation, logistics, and transportation planning.</p>"},{"location":"map-api/traffic/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/traffic/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/tf/{z}/{x}/{y}.png?apikey={your-apikey}\n</code></pre>"},{"location":"map-api/traffic/#parameters","title":"Parameters","text":"Parameters Type Option Default Example Description x int yes none 1 Tilemap x axis y int yes none 1 Tilemap y axis z int yes none 1 Tilemap z axis"},{"location":"map-api/traffic/#response-to-traffic-map-tile-request","title":"Response to Traffic Map Tile Request","text":"<p>The response contains traffic tile for a part of Ho Chi Minh City.</p> <p></p>"},{"location":"map-api/tsp/","title":"Traveling Salesman Problem (TSP)","text":"<p>The Traveling Salesman Problem (TSP) is a well-known mathematical problem in computer science and operations research. Given a set of cities and the distances between them, the TSP requires finding the shortest possible route that visits each city exactly once and returns to the starting city. This problem can be applied to the context of maps and routing, where the cities represent locations and the distances represent travel distances or travel times.</p> <p>A Traveling Salesman Problem (TSP) Maps API refers to a set of functions or tools provided by VIETMAP that help developers to solve the TSP for a given set of locations. These APIs may provide algorithms or heuristics for finding approximate solutions to the TSP, as well as visualization tools for displaying the resulting routes on a map. Developers can use TSP Maps APIs to create applications that help optimize route planning and navigation, such as delivery optimization, logistics management, and more.</p>"},{"location":"map-api/tsp/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/tsp?api-version=1.1&amp;apikey={your-apikey}&amp;point={point}&amp;point={point}&amp;point={point}&amp;points_encoded={points_encoded}&amp;vehicle={vehicle}&amp;roundtrip={roundtrip}&amp;destinations={destinations}&amp;sources={sources}\n</code></pre>"},{"location":"map-api/tsp/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/tsp/#parameters","title":"Parameters","text":"Parameter Type Required Default Description point array string yes none The points for which the route should be calculated. Format:\u00a0[latitude,longitude]. Specify at least an origin and a destination. Via points are possible. The maximum number depends on your plan. points_encoded boolean no true Allows changing the encoding of location data in the response. The default is polyline encoding, which is compact but requires special client code to unpack. Set this parameter to false to switch the encoding to simple coordinate pairs like\u00a0[lon,lat]. See the description of the response format for more information. vehicle string no car Enum:\u00a0car,bike,foot,motorcycle. The vehicle profile for which the route should be calculated. roundtrip boolean no all Values :\u00a0true\u00a0(default),\u00a0false. Returned route is a roundtrip (route returns to first location) sources string no none Values:\u00a0any\u00a0(default),\u00a0first. Returned route start at any or first coordinate destinations string no none Values:\u00a0any\u00a0(default),\u00a0last. Returned route ends at any or last coordinate"},{"location":"map-api/tsp/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/tsp?api-version=1.1&amp;apikey={your-apikey}&amp;point=10.79628438955497,106.70592293472612&amp;point=10.801891047584164,106.70660958023404&amp;point=10.801595962927763,106.6898296806408&amp;points_encoded=true&amp;vehicle=motorcycle&amp;roundtrip=true\n</code></pre> Response <pre><code>{\n    \"license\": \"vietmap\",\n    \"code\": \"OK\",\n    \"messages\": null,\n    \"paths\": [\n        {\n            \"distance\": 7720.5,\n            \"weight\": 1022.8,\n            \"time\": 1022800,\n            \"transfers\": 0,\n            \"points_encoded\": true,\n            \"bbox\": [\n                106.68973,\n                10.79352,\n                106.71098,\n                10.80307\n            ],\n            \"points\": \"}s{`Ac_hjSIP[r@KTuAxCOb@QVuAoAi@g@w@u@oCmC_BgBm@}@QUcB{C}@qBMYs@{B]}A_@kBSkCIo@oABFbAHtAPtAPpAbApDXv@Rj@dAzBT^dAdBqA^e@Jo@F{BLCcAAEICq@@p@AHB@DBbAzBMn@Gd@KpA_@LRZh@dAvAv@z@pI`I[t@u@vA|@h@LJDLa@jL?`AF^gBVeF~@GZuAb@sARgDr@uHfBa@PGBd@xAF\\\\?RGz@WnEk@~HSzCUlDH?bB?TnAJbAH|@?VBz@?j@?JGJGXGf@?n@Db@H~BjCn@?B?JAFI?}BCAcAI_CEc@?o@Fg@FYFK?K?k@C{@?WI}@KcAUoAdAAz@CP?`A?b@?z@CbAI\\\\E^GHAJ?VClAGbBGPA`ACLAv@CH?~BOj@C~@Al@Ar@C@kADKbDJ~@Bh@LGk@Bo@H[T[TOPGNCNA`AFlA@REVSFIFQBYGkA@{@Ig@[_AA}B@y@Hq@BO@g@EmAAWCg@Ac@BwAX_DHs@H{@DUP_@No@Be@?KEMGd@GJIDE?k@i@Q?WJGG}AqA?a@mAoAeDcDQQUUyEmEPWNc@tAyCJUZs@HQ\",\n            \"instructions\": [\n                {\n                    \"distance\": 192,\n                    \"heading\": 0,\n                    \"sign\": 0,\n                    \"interval\": [\n                        0,\n                        6\n                    ],\n                    \"text\": \"Ti\u1ebfp t\u1ee5c theo \u0110\u01b0\u1eddng Nguy\u1ec5n C\u1eedu V\u00e2n\",\n                    \"time\": 25900,\n                    \"street_name\": \"\u0110\u01b0\u1eddng Nguy\u1ec5n C\u1eedu V\u00e2n\",\n                    \"last_heading\": null\n                },\n                /// More instruction objects will response here\n                {\n                    \"distance\": 0,\n                    \"heading\": 0,\n                    \"sign\": 4,\n                    \"interval\": [\n                        201,\n                        201\n                    ],\n                    \"text\": \"\u0110\u00edch \u0111\u1ebfn\",\n                    \"time\": 0,\n                    \"street_name\": \"\u0110\u01b0\u1eddng Nguy\u1ec5n C\u1eedu V\u00e2n\",\n                    \"last_heading\": null\n                }\n            ],\n            \"snapped_waypoints\": \"}s{`Ac_hjS}`@{CVphB\"\n        }\n    ]\n}\n</code></pre></p>"},{"location":"map-api/tsp/#response-description","title":"Response description","text":"Field Type Description license string The type of license for the map data. code string A code indicating the status of the response, e.g., \"OK\" for success. messages null Messages associated with the response, if any. paths array An array containing route information, such as distance, time, and instructions. <p>Each object in the <code>paths</code> array contains the following fields:</p> Field Type Description distance float The total distance of the route. weight float The weight of the route. time integer The total time required to travel the route. transfers integer The number of transfers during the route. points_encoded boolean Indicates whether the points are encoded. bbox array The bounding box of the route. points string Encoded points along the route. instructions array An array containing step-by-step instructions for navigating the route. snapped_waypoints string Snapped waypoints along the route. <p>Each object in the <code>instructions</code> array contains the following fields:</p> Field Type Description distance float The distance of the instruction. heading integer The heading direction of the instruction. sign integer The sign indicating the action to take (e.g., turn left). interval array The time interval for the instruction. text string The textual instruction for navigating. time integer The time required to complete the instruction. street_name string The name of the street for the instruction. last_heading null The last heading direction for the instruction."},{"location":"map-api/vrp/","title":"Vehicle Routing Problem (VRP)","text":"<p>The Vehicle Routing Problem (VRP) is a type of optimization problem that involves finding the most efficient routes for a fleet of vehicles to travel to a set of destinations and return to their starting point while satisfying a number of constraints, such as capacity and time windows. The VRP is commonly used in transportation, logistics, and delivery applications.</p> <p>A Vehicle Routing Problem (VRP) Maps API refers to a set of functions or tools provided by VIETMAP that help developers to solve the VRP for a given set of locations and constraints. These APIs may provide algorithms or heuristics for finding optimal or near-optimal solutions to the VRP, as well as visualization tools for displaying the resulting routes on a map. Developers can use VRP Maps APIs to create applications that help optimize fleet operations and delivery management, such as route planning, fleet tracking, and more.</p>"},{"location":"map-api/vrp/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/vrp?api-version=1.1&amp;apikey={your-apikey}\n</code></pre>"},{"location":"map-api/vrp/#method","title":"Method","text":"<p>POST</p>"},{"location":"map-api/vrp/#parameters","title":"Parameters","text":"Key Type Required Default Example Description jobs array yes none array of job objects describing the places to visit vehicles array yes none array of vehicle objects describing the available vehicles"},{"location":"map-api/vrp/#job-object-accept-goods-release-goods","title":"Job Object (accept goods | release goods)","text":"Key Type Required Default Example Description id integer yes none 1 an integer used as unique identifier location array, double yes none [106.112456,10.684922] coordinates array service integer no none 1 job service duration (defaults to 0) delivery array no none [1,2] an array of integers describing multidimensional quantities for delivery pickup array no none [1,2] an array of integers describing multidimensional quantities for pickup skills array no none [1] an array of integers defining mandatory skills priority integer no none 1 Values:\u00a0[0,10]. Range describing priority level time_windows array no none [0,1400] an array of time_window objects describing valid slots for job service start"},{"location":"map-api/vrp/#vehicle-object-type-of-the-vehicle","title":"Vehicle Object (type of the vehicle)","text":"Key Type Required Default Example Description id integer yes none 1 an integer used as unique identifier start array, double yes none [106.112456,10.684922] coordinates array end array yes none [106.112456,10.684922] coordinates array capacity array no none [0,3] an array of integers describing multidimensional quantities skills array no none [1] an array of integers defining skills time_windows array no none [0,14400] a time_window object describing working hours"},{"location":"map-api/vrp/#note","title":"Note","text":"<ul> <li>Key start and end are optional for a vehicle, as long as at least one of them is present.</li> <li>If end is omitted, the resulting route will stop at the last visited job, whose choice is determined by the optimization process.</li> <li>If start is omitted, the resulting route will start at the first visited job, whose choice is determined by the optimization process.</li> <li>To request a round trip, just specify both start and end with the same coordinates.</li> <li>Use amounts (capacity for vehicles, delivery and pickup for jobs) to describe a problem with capacity restrictions. Those arrays can be used to model custom restrictions for several metrics at once, e.g. number of items, weight, volume etc. A vehicle is only allowed to serve a set of jobs if the resulting load at each route step is lower than the matching value in capacity for each metric. When using multiple components for amounts, it is recommended to put the most important/limiting metrics first.</li> <li>It is assumed that all delivery-related amounts for jobs are loaded at vehicle start, while all pickup-related amounts for jobs are brought back at vehicle end.</li> <li>Use skills to describe a problem where not all jobs can be served by all vehicles. Job skills are mandatory, i.e. a job can only be served by a vehicle that has all its required skills. In other words: job j is eligible to vehicle v iff j.skills is included in v.skills.</li> <li>In order to ease modeling problems with no skills required, it is assumed that there is no restriction at all if no skills keys are provided.</li> <li>Useful in situations where not all jobs can be performed, to gain some control on which jobs are unassigned.</li> <li>Setting a high priority value for some jobs will tend as much as possible to have them included in the solution over lower-priority jobs.</li> </ul> <p>It is up to users to decide how to describe time windows:</p> <ul> <li>Relative values, e.g. [0, 14400] for a 4 hours time window starting at the beginning of the planning horizon. In that case all times reported in output with the arrival key are relative to the start of the planning horizon;</li> <li>Absolute values, \"real\" timestamps. In that case all times reported in output with the arrival key can be interpreted as timestamps. The absence of a time window in input means no timing constraint applies.</li> <li>In particular, a vehicle with no time_window key will be able to serve any number of jobs, and a job with no time_windows key might be included at any time in any route, to the extent permitted by other constraints such as skills, capacity and other vehicles/jobs time windows.</li> </ul>"},{"location":"map-api/vrp/#example","title":"Example","text":"<p>Body <pre><code>{\n    \"vehicles\": [\n        {\n            \"id\": 1,\n            \"start\": [\n                106.5983012,\n                10.8879148\n            ],\n            \"end\": [\n                106.5983012,\n                10.8879148\n            ],\n            \"profile\": \"bike\",\n            \"time_window\": [\n                1685953800,\n                1686418200\n            ],\n            \"skills\": [\n                1,\n                1000\n            ],\n            \"breaks\": [\n                {\n                    \"id\": 1000,\n                    \"time_windows\": [\n                        [\n                            1685966400,\n                            1685970000\n                        ]\n                    ],\n                    \"service\": 3600\n                },\n                {\n                    \"id\": 1,\n                    \"time_windows\": [\n                        [\n                            1685986200,\n                            1685988000\n                        ]\n                    ],\n                    \"service\": 54000.0\n                },\n                {\n                    \"id\": 2000,\n                    \"time_windows\": [\n                        [\n                            1686052800,\n                            1686056400\n                        ]\n                    ],\n                    \"service\": 3600\n                },\n                {\n                    \"id\": 2,\n                    \"time_windows\": [\n                        [\n                            1686072600,\n                            1686074400\n                        ]\n                    ],\n                    \"service\": 54000.0\n                },\n\n                {\n                    \"id\": 6000,\n                    \"time_windows\": [\n                        [\n                            1686398400,\n                            1686402000\n                        ]\n                    ],\n                    \"service\": 3600\n                }\n            ],\n            \"speed_factor\": 0.6\n        }, \n        /// More objects should be add to here\n        {\n            \"id\": 7,\n            \"start\": [\n                106.7086064,\n                10.814915\n            ],\n            \"end\": [\n                106.7086064,\n                10.814915\n            ],\n            \"profile\": \"bike\",\n            \"time_window\": [\n                1685953800,\n                1686418200\n            ],\n            \"skills\": [\n                1,\n                7000\n            ],\n            \"breaks\": [\n                {\n                    \"id\": 1000,\n                    \"time_windows\": [\n                        [\n                            1685966400,\n                            1685970000\n                        ]\n                    ],\n                    \"service\": 3600\n                },\n                {\n                    \"id\": 5,\n                    \"time_windows\": [\n                        [\n                            1686331800,\n                            1686333600\n                        ]\n                    ],\n                    \"service\": 54000.0\n                },\n                {\n                    \"id\": 6000,\n                    \"time_windows\": [\n                        [\n                            1686398400,\n                            1686402000\n                        ]\n                    ],\n                    \"service\": 3600\n                }\n            ],\n            \"speed_factor\": 0.6\n        }\n    ],\n    \"jobs\": [\n        {\n            \"id\": 1001,\n            \"description\": \"HOME\",\n            \"location\": [\n                106.5983012,\n                10.8879148\n            ],\n            \"service\": 0,\n            \"priority\": 3,\n            \"time_windows\": [\n                [\n                    1685986200,\n                    1685988000\n                ]\n            ],\n            \"skills\": [\n                1000\n            ]\n        },\n        {\n            \"id\": 304,\n            \"description\": \"CO.OP FOOD NGUY\u1ec4N V\u0102N QU\u00c1\",\n            \"location\": [\n                106.6287481,\n                10.8362058\n            ],\n            \"service\": 1800,\n            \"time_windows\": [\n                [\n                    1685948400,\n                    1685980800\n                ],\n                [\n                    1686034800,\n                    1686067200\n                ],\n                [\n                    1686121200,\n                    1686153600\n                ],\n                [\n                    1686207600,\n                    1686240000\n                ],\n                [\n                    1686294000,\n                    1686326400\n                ],\n                [\n                    1686380400,\n                    1686412800\n                ]\n            ],\n            \"skills\": [\n                1\n            ]\n        },\n        /// More objects should be add to here\n        {\n            \"id\": 337,\n            \"description\": \"CO.OP FOOD T\u1ec8NH L\u1ed8 15-1031\",\n            \"location\": [\n                106.513876765966,\n                11.0885457429547\n            ],\n            \"service\": 1800,\n            \"time_windows\": [\n                [\n                    1685948400,\n                    1685980800\n                ],\n                [\n                    1686034800,\n                    1686067200\n                ],\n                [\n                    1686121200,\n                    1686153600\n                ],\n                [\n                    1686207600,\n                    1686240000\n                ],\n                [\n                    1686294000,\n                    1686326400\n                ],\n                [\n                    1686380400,\n                    1686412800\n                ]\n            ],\n            \"skills\": [\n                1\n            ]\n        }\n    ]\n}\n</code></pre></p>"},{"location":"map-api/vrp/#request-body-description","title":"Request body description","text":""},{"location":"map-api/vrp/#vehicles","title":"Vehicles","text":"Parameter Type Description id number The ID of the vehicle. start array The starting location of the vehicle (longitude, latitude). end array The ending location of the vehicle (longitude, latitude). profile string The profile of the vehicle (e.g., \"bike\"). time_window array The time window during which the vehicle is available for service. skills array An array of skills required for the vehicle to perform a job. breaks array An array containing information about breaks for the vehicle. speed_factor number The speed factor of the vehicle."},{"location":"map-api/vrp/#jobs","title":"Jobs","text":"Parameter Type Description id number The ID of the job. description string A description of the job. location array The location of the job (longitude, latitude). service number The duration of the service at the job location in seconds. priority number The priority of the job. time_windows array An array of time windows during which the job can be serviced. skills array An array of skills required for the job to be performed. <p>Response <pre><code>{\n    \"code\": 0,\n    \"summary\": {\n        \"cost\": 12400,\n        \"unassigned\": 0,\n        \"service\": 196200,\n        \"duration\": 12400,\n        \"waiting_time\": 237145,\n        \"priority\": 3,\n        \"distance\": 109272,\n        \"computing_times\": {\n            \"loading\": 37,\n            \"solving\": 61,\n            \"routing\": 11\n        }\n    },\n    \"unassigned\": [],\n    \"routes\": [\n        {\n            \"vehicle\": 1,\n            \"cost\": 12400,\n            \"service\": 196200,\n            \"duration\": 12400,\n            \"waiting_time\": 237145,\n            \"priority\": 3,\n            \"distance\": 109272,\n            \"steps\": [\n                {\n                    \"type\": \"start\",\n                    \"location\": [\n                        106.5983012,\n                        10.8879148\n                    ],\n                    \"arrival\": 1685956255,\n                    \"duration\": 0,\n                    \"distance\": 0\n                }, \n                /// More object will response here\n                {\n                    \"type\": \"break\",\n                    \"id\": 6000,\n                    \"service\": 3600,\n                    \"waiting_time\": 177741,\n                    \"arrival\": 1686220659,\n                    \"duration\": 12400,\n                    \"distance\": 109272\n                },\n                {\n                    \"type\": \"end\",\n                    \"location\": [\n                        106.5983012,\n                        10.8879148\n                    ],\n                    \"arrival\": 1686402000,\n                    \"duration\": 12400,\n                    \"distance\": 109272\n                }\n            ],\n            \"geometry\": \"ipmaA}|riSsAHGpB?\\\\ExC?l@CnBC`@OrAENK?EBCJ@FcBtBm@x@{B|CY^U`@GPG\\\\e@nCSp@uAlCWd@{C|F_AjBcAfB{AvCS^w@|A[j@Ub@INo@nAm@jAk@fAq@tAwBfEy@zAyAvCqAfCe@~@[j@c@z@mDxGs@vAOVw@dBw@xAi@fAOXs@rAKPyApCGLwA~CMXcUrNi@\\\\iHnEyBtAg[vRsCdBo[~RsCfB_CzA}BvAiC`BqBnAgEhCoMdIuAx@kNxIqAx@gAr@cDjBwDbCaF|CoBpA{@n@oAdAsCfCaDrC_FfEy@v@qApAc@f@i@t@g@r@w@~AQf@uGrP}IxUqFxNcBrEmB~EgCrGiCpGsAhDmDbJ{BpGwBtFkFhNgDzImC`H{@bBeCbE_BpCcAbBwDlG{FnJsDjGqH~LwFfJaC`EgDtFaEnHoAvCyBlFk@tAmAvCi@nA]v@eBfEeH~PwBxEgBpDgAzBaBhDqBbEmBzDkCzF_BbEwAbFoAfE{GnUSt@I`@w@fDOLKVoAfEc@lAM?MBQLELgAPaAg@eAk@eE_Cc@WqAu@uDsB_GcDaDeBuEkCwAu@}@i@kDkBkBeAy@e@aDcBcAk@uD{BgA`EgAfEfAgEfAaE_CsAqBgAcGeDQKmGkD}CcBtBuBTUlBkDfBcDbB{C`AcBl@}@NOVQ|BkAfDeBfD_B|C}AlDeBd@~@LIiB_EoEgJMYe@aAUc@{FsLqAcCoCyFwAaD[aAQy@WuAs@eE_@}Bc@iCc@mC]wBy@}E_@cC[oBi@_DMs@AKk@kDu@yEyA}IIk@CYAy@BSXmBXgBuBi@mAY{@QcAGkADyCReCNy@?}@IkAWs@GeD[iB]WSIMa@s@sAsCqAsCWc@KIUO[I_F{@qCiAgCgA{Ae@s@M_Eq@IGY]MSeAkCKSc@c@i@]{@m@kGwEgAs@c@W[MqLcDuA[cASwFi@oASyC]gC_@KEoBaAy@KkAAkILoE?]@wOLk@BQDkGhCyD|AyB|@mAj@_DpAkS~HcAh@_E~AoGjCqDxAgXzKsElB_G~BiMfFcEdBmAf@cCbA[LWHcKdEcBp@YLoHxCgFxBq`@~OwDxAgDvAwThJk@T[LqCjAsFrBiAd@}EtBkN~FcBp@qAj@c@Vo@`@kCnBqCpBuB\\\\u@NgA{AeE_HcBwBm@m@aFcE_DuCeFwFqA}AiKuPg@k@aCaC{D{DoCiCk@t@cA~@[VULmFfBw@Xo@TgBl@yBt@yMlEsGlB_Ct@uBl@kCh@cCl@eCj@m@LiEz@{Ev@q@JqG`AeDj@oDn@kDl@iAR^\\\\_@]hASjDm@nDo@dDk@pGaAp@KzEw@hE{@l@MdCk@bCm@jCi@tBm@~Bu@rGmBxMmExBu@fBm@n@Uv@YxDmAr@YTMZWbA_Aj@u@Xo@Va@hAaBlBeClHiJ`BmBtCsDnBiCb@g@d@_@bE{BxHmElBaAzB_AvIaDbAa@jHoCnE{AjJmDpCsAf@[d@a@jA_BpAqBfBgDtBqE|@gCn@cBr@aBv@cB|@kBlBqDfBcD~AsClE}HZg@zBoDNWxDkG|AkCj@gApB{DhAoBt@oAlBuDp@sAhAqB`C{DrB_DpCcEbBwCpAsBz@yAx@sApByCx@yAbCoDjAmB`EiGLS~CeFv@kAd@k@v@q@p@i@LOV_@x@wAFSFUD]Ac@]{DOmB?e@L{ALu@FOLQh@OlAQ`@GXKXOnCyCVSXITCT?d@Jp@\\\\bBpAXL`@N\\\\Df@@t@CrADvFP`@B~@HlEXhET`BJtCJf@BbFXv@Hx@JxIrAXDbFv@hANlFJ`IXrBFnBBrAHrAPpCb@dAHp@AnDSxAIzAKlAMl@M`LmEhH{CtCmA~@a@hBu@`EeBn@WbSiInCkAlEgBpAi@bCaA`Bk@|Bs@fCu@jBo@`H{BNGfA[vDgAjDiAlBm@zIoCfKcDpH_CxAc@dHyBdBi@pAa@pAa@xBw@`A]h@ObA[rAa@rAa@`Cy@bAa@~BsBvOwNfBaBvGgG~@_A~AwAlDcDdIkHzKgKdC}Bf@c@hC_Cn@m@RQnAgAd@e@`A_A`EsDvAsAzAwAhAeApCeCLMr@o@`B{AxCsCd@a@rF_FtBcB|E{DrAcArEuDnCwBhDkCt@c@jBy@p@[|@c@|CgBl@]pBgA|CgBrC_BdCuAz@i@@ArL_H~BsA|BsAhDuBLEb@?`AFTD`BXjBd@rA^fEhAl@Rz@^x@\\\\PJhAr@ZVRLPDZDZ@~@ClDc@fCGdE@rBB^BzE^`BNxIp@dE`@zFr@zCd@tIhApGv@pGz@hXrDpDh@lEh@~Ex@pANX@tEJpBBzLP`ABdBDtEJV@fCDpADhAFhBNhBRRBlALt@HxBTzAN^Dt@@rD@l@?|L@dVAl@ErCc@ZEfAOfBUp@ChAB~ATj@LdEhAtA^|Cx@b@LjDfAfGnBf@N`Bf@hA^NFjCx@t@VrBn@v@VfAZTD\\\\@|ABvED|A@nA@~@BDyC?]FqBrAInAIhDW~AMxAKrDYtBKz@FxANn@Dx@@VCVEb@Qn@U`DsA`@MdB_@NAl@?jE?rMB^F|Bl@La@b@{@r@mAJUh@{AVq@Jm@Hy@DiAFa@Pm@P_@vByDr@yA\\\\o@s@Ur@T]n@s@xAwBxDQ^Ql@G`@EhAIx@Kl@Wp@i@zAKTs@lAc@z@M`@dG|Ap@PzA^bHjB|@X\\\\J~DtAx@V~Ah@x@XJPzAaAFH`A`Bb@hAXvANnANzAJrA@f@EXKJc@Nn@fDT|AJzAHdBBX`@nA@JEP[r@CR@XRv@?TEx@Mz@qESS@IHGJ]zAMRGDWAwAYERDSvAXV@FELS\\\\{AFKHIRApER`ENV@xBDbBD`CHpDNrDLjFLj@?hAGfDQ`AUvAi@b@I`AMtF_@nBK`CKxAIfG_@v@AT?h@BvB^xAP`@BdBH`@Fj@N^Jv@VfBp@jBt@hA^XHhBf@fDtAl@\\\\}ApB]d@\\\\e@|AqBV[~@gA`AqA|BaDx@kAdAyARWlGwIf@u@r@aAj@s@zCsEfAyAVWjBgBdAaArEuEbA_AbAaA`@g@pAaCJOhAgBr@y@~AuBxAkB|AqBl@w@~@kAl@u@LOxAkB^e@tAgBp@_Aq@~@uAfB_@d@yAjBMNm@t@_AjAm@v@}ApByAjBsCnDgBkB_@[WOg@Se@QwAY}@EuCAmBL_A?gACy@Gy@IoBQa@IkAYsBi@OIeL~@c@FyALg@?kFu@yB]}AUs@KsBWsJyAUEWCuHmAmAQToALm@@Y?Q_@oAmAqBo@eAg@y@MSq@eAs@kAGIb@WrBqApCgBxBsAdEaCzJqFFH^t@GX@JdAfBLBLCr@a@fC{AhB}@VQ`Am@hCyALGZODCj@Y`DgBc@u@_@s@e@u@Sa@GIdMaHdE_CvAe@RM~EoC^SfBaArCyAbAe@NDP?REFENMFQBMC[IQMMQGYAy@w@]_@oC_DyAaBnBuA|DgCtDaC|CqBdAo@i@WF[GOYg@KO]aArA_@]mBBQmAwBVOf@_@dAq@TSRKP_@w@eAxBoApFmCJKP[F[`@mEH{@h@iGjADZ@~BJx@D@w@Ds@D]VuA^kBXFl@Jm@KYGk@KaBWs@MaAQq@Mk@IaBYsDo@KC_AMqAOq@Gm@G}C_A_AYkA_@iBk@yAe@iA]]Ue@c@c@_@aFeEk@e@q@m@USm@y@s@aAQSaAsA{@eAU_@]YQKm@_@iAm@}@g@}@g@|@f@|@f@hAl@l@^eIdMiAhBy@hA[b@o@nAYt@i@dBOt@QvAGf@cAlJE`@KZWr@SZe@b@g@XsAj@sDxAi@XkAp@aAv@_A|@_AhAa@l@{@~A_@~@c@Lm@Bs@g@a@P`@QkCeBeCeBK[IcBEyAG}B[_HCu@Y{DGCw@Im@O[Q_Au@uAmAw@q@YWw@s@wAoAyBkB{GyDkAzAjA{AkCqAi@Yo@[{@e@KEaB{@wAo@q@[SK[MqAi@w@Y_Bk@kC{@sAo@WIw@[qAe@cA_@UASGRFNNdA^BMNg@@[CuBKmBKmAm@oEAU@KH[T_@Zg@d@u@dAcBT_@zBeEYI{Aq@]OeAg@m@YCAc@UcCsAiAk@UK_@S}C}A{GgDyDoB{CqAcDsAgBq@}@]{@a@e@Wa@a@g@Oj@eIVmCoDFwFJkDHbACfBEOkEAq@MgDEuACyBAgAA_@Aw@AMM_@OWa@s@m@mAMo@EyAASq@_OMeDEcAEeBA}@SuP?OO{IKg@a@gBEYIeCBa@J{@V{ALa@X_@HMZaB?a@OsAa@uAIc@GcCEk@G]h@Ij@Il@Il@INAp@KNAjAOjBYT?Ra@H[?KC_@@YJyAC]EOGMMe@E_AE}@CmAT}ABU?QI[NMh@e@`@a@hAkApAuAFON[z@cAOMsAiAWUaAw@eDoCk@e@gAo@q@_@[Oi@YN]FG|Aw@zBcAhB}@r@_@BKGWg@qAaA}BWk@aAyBQ]QWOQGKc@cAkAcDOi@Me@q@}BcA{BOY_@yA??Ka@]L\\\\Mj@zBNXd@l@\\\\lAp@|BLd@Nh@jAbDb@bAFJNPPVP\\\\`AxBVj@`A|Bf@pAFVCJs@^iB|@{BbA}Av@GFO\\\\o@x@kAXaDl@{Bb@KFEH@TXl@FXH|@BfA?|CBxBJlCJfDZ`FB\\\\HbCBRTx@|@|BDRF\\\\Dj@FbCHb@`@tANrA?`@Ir@Ql@ILY^M`@WzAKz@C`@@fAF|@DX`@fBJf@Dh@HpH?NRtP@|@DdBDbALdDZlHTpEkH\\\\e@Hi@LmCz@mAb@sBp@DRHx@ZbCNn@j@fBX`BN`B{@@u@Cy@Mk@Mc@Kb@Jj@Lx@Lt@Bz@Al@AD|CJ~EAz@Kx@Cx@CTQz@Uj@GPKj@Gj@@JFJ?NCd@Kv@E\\\\rATJDVPb@\\\\LPTZRLjBf@BHCf@@FFHJBp@DETCv@Kx@?d@N@HBlAr@rAv@bAj@xChBdBdAXPb@ZfAf@IxAGbATF??VJnLhG~HvE|FdDrChBzBfANF{@~Ae@|@a@t@m@z@k@v@]|AWv@Yl@w@|Au@dBe@v@]j@[h@i@~@MRqAtBeBnDUlBIr@Kr@WzACNY~Ai@zCe@tCG~@s@Zq@^i@Z}BhA[PQTSd@cAbCmBaBL]M\\\\gByAq@k@_C{Ao@a@gCaBuAy@wA}@a@W{@g@_@Uk@]sBqAmCcBo@c@mCkBgC}AoA{@\\\\gA]fAUMeBoAKKi@i@e@_@e@]sA_AOMk@_@u@g@e@[OKo@e@oDcCm@_@OK}@o@gAu@oKiHm@_@GEcAs@wA_Aa@Ys@e@cH}EcDZmBZUDuAl@wAb@o@XqBjAWNy@b@Ua@Ya@YGu@CoAH{@Ro@J{@Jk@Js@RyCx@yCx@yCb@]Jq@PmAd@MWgBqD]u@\\\\t@fBpDLVLVvCrGl@rAh@jA^v@lDrHbD`Hn@pAd@dAzAbDrAvC`@v@t@pAl@bAj@|@lAjBFJbErGpApB`BjCrCtEl@~@n@bA`A|Az@tAXb@hAhBzBrDxA|B|BrDh@x@Vn@Hf@r@xDt@hEt@bEX|AV`Ah@vAjAjCzA`D`@`Af@rATfAt@vGBf@E~@GlCBlAFj@ThCT|ENpAL|@Tz@d@rAd@rAXl@JNa@`BGl@EXEnCAdAA`AMdCg@zDAd@Cr@rAI\"\n        }\n    ]\n}\n</code></pre></p>"},{"location":"map-api/vrp/#response-body-description","title":"Response body description","text":"Parameter Type Description code number A numeric code indicating the status of the response. summary object An object containing summary information about the routes. summary.cost number The total cost of the routes. summary.unassigned number The number of unassigned items. summary.service number The total service time for all routes. summary.duration number The total duration of the routes. summary.waiting_time number The total waiting time for all routes. summary.priority number The priority of the routes. summary.distance number The total distance covered by the routes. summary.computing_times object An object containing computing times for different operations. summary.computing_times.loading number The time taken for loading. summary.computing_times.solving number The time taken for solving. summary.computing_times.routing number The time taken for routing. unassigned array An array containing information about unassigned items. routes array An array containing information about each route. routes[].vehicle number The ID of the vehicle associated with the route. routes[].cost number The cost of the route. routes[].service number The service time for the route. routes[].duration number The duration of the route. routes[].waiting_time number The waiting time for the route. routes[].priority number The priority of the route. routes[].distance number The distance covered by the route. routes[].steps array An array containing steps of the route. routes[].steps[].type string The type of step (e.g., \"start\", \"break\", \"end\"). routes[].steps[].location array The geographical location of the step (longitude, latitude). routes[].steps[].arrival number The arrival time at the step. routes[].steps[].duration number The duration of the step. routes[].steps[].distance number The distance covered during the step. routes[].geometry string The geometry of the route."},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/","title":"Autocomplete","text":"<p>Autocomplete API refers to a feature provided by VIETMAP that suggests possible locations as a user types into the search bar, making it easier for the user to find and select the desired destination. The API provides a way for developers to access and integrate this autocomplete functionality into their own custom mapping applications.</p>"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#url","title":"URL","text":"<p><pre><code>https://maps.vietmap.vn/api/autocomplete?api-version=1.1&amp;apikey={your-apikey}?focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}&amp;text={text}\n</code></pre> Method</p> <p>GET</p>"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#parameter","title":"Parameter","text":"Parameter Type Required Default Example text string yes none Tr\u1ea7n Ph\u00fa focus.point.lat floating point number no none 10.756271 focus.point.lon floating point number no none 106.661280 boundary.rect.min_lon floating point number no none 106.3564 boundary.rect.max_lon floating point number no none 107.012794 boundary.rect.min_lat floating point number no none 11.160291 boundary.rect.max_lat floating point number no none 10.376715 boundary.circle.lat floating point number no none 10.756271 boundary.circle.lon floating point number no none 106.661280 boundary.circle.radius floating point number no 50 35 layers string no all layers: address,street,venue address,venue"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#filters-feature","title":"Filters Feature","text":"<p>\u2714\ufe0f Layer filtering \u2714\ufe0f Global scope, local focus \u2714\ufe0f Search within a circular region \u2714\ufe0f Search within categories  </p>"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#1-layer-filtering","title":"1. Layer filtering","text":"<p>Focus searching on layer categories</p> <p>URL: </p> <pre><code>&lt;https://maps.vietmap.vn/api/autocomplete?api-version=1.1&amp;apiley={your-key}&amp;layers={layers}&amp;text={text}&gt;\n</code></pre> Layer Description venue points of interest, businesses, things with walls address places with a street address street streets, roads, highways locality towns, hamlets, cities county official governmental area; usually bigger than a locality, almost always smaller than a region region provinces"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#2-global-scope-local-focus","title":"2. Global scope, local focus","text":"<p>Focus on searching narrow with pair of coordinates</p> <p>URL:  <pre><code>https://maps.vietmap.vn/api/autocomplete?api-version=1.1&amp;apiley={your-key}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;text={text}\n</code></pre></p> Parameter Description focus.point.lat latitude coordinate focus.point.lon longitude coordinate"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#3-search-within-a-circular-region","title":"3. Search within a circular region","text":"<p>Focus on searching with pair of coordinates together with specific radius</p> <p>URL:  <pre><code>https://maps.vietmap.vn/api/autocomplete?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}\n</code></pre></p> Parameter Value text 193 Tr\u1ea7n Ph\u00fa boundary.circle.lat 10.756271 boundary.circle.lon 106.661280 boundary.circle.radius 0.5"},{"location":"map-api/autocomplete-version/autocomplete-ver1.1/#4-search-within-categories","title":"4. Search within categories","text":"<p>Focus on searching with POI categories | chainName categories</p> <p>Note: If you are searching for restaurant, it means that the input parameter is 1002. The source of poi_categories</p> <p>URL: <pre><code>https://maps.vietmap.vn/api/autocomplete?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;categories={categories}\n</code></pre></p> Parameter Value text 193 Tr\u1ea7n categories 1002"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/","title":"Autocomplete","text":"<p>Updating Autocomplete 3.0 API is a valuable resources that allows developers to integrate autocomplete functionality into their applications. This API is designed to help users quickly find and select items from a large set of options by suggesting potential matches as they type.</p> <p>The API is built on a machine learning model that analyzes user input and suggests potential matches based on the context of the search. This model can be updated in real-time, allowing the API to continuously improve its suggestions as more data becomes available.</p>"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/autocomplete/v3?apikey={your-apikey}&amp;text={text}\n</code></pre>"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/#parameters","title":"Parameters","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account cityId number no Every city has a unique ID, which is used to filter search results 12 distId number no Every district has a unique ID, which is used to filter search results 1292 wardId number no Every ward has a unique ID, which is used to filter search results 984332 circle_center string no The central coordinate <code>(lat,lng)</code> position of the area to be searched 10.758867,106.6755666 circle_radius number no The radius of the search area <code>(in meters)</code> 200 cats string no Provide full list of POI categories. Click here POI Categories 1002-1 focus number no Specify the center of the search context expressed as coordinates. 10.758867,106.675566 text string yes User desired input Cong ty layers string no Represent for certain type of data such as <code>POI</code>,<code>ADDRESS</code>,<code>VILLAGE</code>,<code>WARD</code>,<code>DIST</code>,<code>CITY</code>,<code>STREET</code> POI"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/autocomplete/v3?apikey={your-apikey}&amp;text=197 tran phu&amp;focus=10.75887508,106.67538868\n</code></pre> Response</p> <p>If you need detailed information about the place, please use the  Vietmap Place API <pre><code>[\n    {\n        \"ref_id\": \"vm:ADDRESS:8AD49CFA2E0C300A\",\n        \"distance\": 0.06911172534949989,\n        \"address\": \"Ph\u01b0\u1eddng 4, Qu\u1eadn 5, Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"name\": \"197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa\",\n        \"display\": \"197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa Ph\u01b0\u1eddng 4, Qu\u1eadn 5, Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"boundaries\": [\n            {\n                \"type\": 2,\n                \"id\": 656652,\n                \"name\": \"4\",\n                \"prefix\": \"Ph\u01b0\u1eddng\",\n                \"full_name\": \"Ph\u01b0\u1eddng 4\"\n            },\n            {\n                \"type\": 1,\n                \"id\": 1292,\n                \"name\": \"5\",\n                \"prefix\": \"Qu\u1eadn\",\n                \"full_name\": \"Qu\u1eadn 5\"\n            },\n            {\n                \"type\": 0,\n                \"id\": 12,\n                \"name\": \"H\u1ed3 Ch\u00ed Minh\",\n                \"prefix\": \"Th\u00e0nh Ph\u1ed1\",\n                \"full_name\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\"\n            }\n        ],\n        \"categories\": []\n    },\n    {\n        \"ref_id\": \"vm:ADDRESS:A4DFA42575DEA254\",\n        \"distance\": 23.712993485603697,\n        \"address\": \"Ph\u01b0\u1eddng Ch\u00e1nh Ngh\u0129a, Th\u00e0nh Ph\u1ed1 Th\u1ee7 D\u1ea7u M\u1ed9t, T\u1ec9nh B\u00ecnh D\u01b0\u01a1ng\",\n        \"name\": \"197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa\",\n        \"display\": \"197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa Ph\u01b0\u1eddng Ch\u00e1nh Ngh\u0129a, Th\u00e0nh Ph\u1ed1 Th\u1ee7 D\u1ea7u M\u1ed9t, T\u1ec9nh B\u00ecnh D\u01b0\u01a1ng\",\n        \"boundaries\": [\n            {\n                \"type\": 2,\n                \"id\": 327959,\n                \"name\": \"Ch\u00e1nh Ngh\u0129a\",\n                \"prefix\": \"Ph\u01b0\u1eddng\",\n                \"full_name\": \"Ph\u01b0\u1eddng Ch\u00e1nh Ngh\u0129a\"\n            },\n            {\n                \"type\": 1,\n                \"id\": 279,\n                \"name\": \"Th\u1ee7 D\u1ea7u M\u1ed9t\",\n                \"prefix\": \"Th\u00e0nh Ph\u1ed1\",\n                \"full_name\": \"Th\u00e0nh Ph\u1ed1 Th\u1ee7 D\u1ea7u M\u1ed9t\"\n            },\n            {\n                \"type\": 0,\n                \"id\": 23,\n                \"name\": \"B\u00ecnh D\u01b0\u01a1ng\",\n                \"prefix\": \"T\u1ec9nh\",\n                \"full_name\": \"T\u1ec9nh B\u00ecnh D\u01b0\u01a1ng\"\n            }\n        ],\n        \"categories\": []\n    }\n]\n</code></pre></p>"},{"location":"map-api/autocomplete-version/autocomplete-ver3.0/#response-description","title":"Response description","text":"<p>Autocomplete API will respond to a <code>list</code> that contains <code>up to 10 places</code>.</p> Parameter Type Description ref_id string Reference ID for the Point of Interest (POI), using for get detail info from Vietmap Place API address string Full address including <code>street</code>, <code>ward</code>, <code>district</code>, and <code>city</code> name string Name of the Point of Interest (POI) display string Display name containing detailed information of the POI address boundaries array Array containing boundary information (ward, district, city) categories array Array containing categories associated with the POI <p>For the <code>boundaries</code> array:</p> Sub-Parameter Type Description type int Type of boundary (0 for <code>city</code>, 1 for <code>district</code>, 2 for <code>ward</code>) id int Unique identifier for the boundary name string Name of the boundary prefix string Prefix of the boundary (e.g., \"Ph\u01b0\u1eddng\" for ward) full_name string Full name of the boundary (e.g., \"Ph\u01b0\u1eddng 9\" for ward)"},{"location":"map-api/geocode-version/geocode-ver1.1/","title":"Geocode","text":"<p>Geocode API is a feature provided by VIETMAP that allows developers to convert a street address or place name into geographic coordinates (latitude and longitude). With the Geocode API, developers can create applications that can translate an address or place name into a location on the map, and display it in a custom map.</p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;forcus.point.lat={forcus.point.lat}&amp;forcus.point.lon={forcus.point.lon}&amp;boundary.rect.min_lon={boundary.rect.min_lon}&amp;boundary.rect.max_lon={boundary.rect.max_lon}&amp;boundary.rect.min_lat={boundary.rect.min_lat}&amp;boundary.rect.max_lat={boundary.rect.max_lat}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.radius={boundary.circle.radius}&amp;layers={layers}\n</code></pre>"},{"location":"map-api/geocode-version/geocode-ver1.1/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#parameter","title":"Parameter","text":"Parameter Type Required Default Example text string yes none Tr\u1ea7n Ph\u00fa focus.point.lat floating point number no none 10.756271 focus.point.lon floating point number no none 106.661280 boundary.rect.min_lon floating point number no none 106.3564 boundary.rect.max_lon floating point number no none 107.012794 boundary.rect.min_lat floating point number no none 11.160291 boundary.rect.max_lat floating point number no none 10.376715 boundary.circle.lat floating point number no none 10.756271 boundary.circle.lon floating point number no none 106.661280 boundary.circle.radius floating point number no 50 35 layers string no all layers: address,street,venue address,venue"},{"location":"map-api/geocode-version/geocode-ver1.1/#filter-feature-as-the-same-with-autocomplete","title":"Filter Feature (as the same with autocomplete)","text":"<p>\u2714\ufe0f Layer filtering \u2714\ufe0f Global scope, local focus \u2714\ufe0f Search within a circular region \u2714\ufe0f Search within categories</p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#1-layer-filtering","title":"1. Layer filtering","text":"Layer Description venue points of interest, businesses, things with walls address places with a street address street streets, roads, highways <p>URL:  <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}\n</code></pre></p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#2-global-scope-local-focus","title":"2. Global scope, local focus","text":"Parameter Description focus.point.lat latitude coordinate focus.point.lon longitude coordinate <p>URL:  <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;text={text}\n</code></pre></p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#3-search-within-a-circular-region","title":"3. Search within a circular region","text":"<p>Focus on searching with pair of coordinates together with specific radius</p> Parameter Value text 193 Tr\u1ea7n Ph\u00fa boundary.circle.lat 10.756271 boundary.circle.lon 106.661280 boundary.circle.radius 0.5 <p>URL: <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;focus.point.lat={focus.point.lat}&amp;focus.point.lon={focus.point.lon}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}&amp;text={text}\n</code></pre></p>"},{"location":"map-api/geocode-version/geocode-ver1.1/#4-search-within-categories","title":"4. Search within categories","text":"<p>Focus on searching with poi categories | chainName categories</p> Parameter Value text 193 Tr\u1ea7n Ph\u00fa boundary.circle.lat 10.756271 boundary.circle.lon 106.661280 boundary.circle.radius 0.5 <p>URL: <pre><code>https://maps.vietmap.vn/api/search?api-version=1.1&amp;apikey={your-apikey}&amp;text={text}&amp;categories={categories}&amp;boundary.circle.lon={boundary.circle.lon}&amp;boundary.circle.lat={boundary.circle.lat}&amp;boundary.circle.radius={boundary.circle.radius}\n</code></pre></p>"},{"location":"map-api/geocode-version/geocode-ver3.0/","title":"Geocode","text":""},{"location":"map-api/geocode-version/geocode-ver3.0/#geocode-version-30","title":"Geocode version 3.0","text":"<p>Updating Geocode 3.0 API is a powerful tool for developers to integrate location search functionality into their applications with optimized performance. Additionally, this latest version utilizes intelligent search algorithms and methods to provide accurate and speedy search results for users. </p>"},{"location":"map-api/geocode-version/geocode-ver3.0/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/search/v3?apikey={your-apikey}&amp;text={text}&amp;focus={lat,long}\n</code></pre>"},{"location":"map-api/geocode-version/geocode-ver3.0/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/geocode-version/geocode-ver3.0/#parameter","title":"Parameter","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account. text string yes User desired input C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t focus string no GPS cordinates 10.759540242000032, 106.67660114000005 layers string no Represent for certain type of data such as <code>POI</code>,<code>ADDRESS</code>,<code>VILLAGE</code>,<code>WARD</code>,<code>DIST</code>,<code>CITY</code>,<code>STREET</code> POI circle_center number no The central coordinate(lat/lng) position of the area to be searched 10.758867051669924,106.6755666901197 circle_radius number no The radius of the search area (in meters) 200 cats string no Provide full list of POI categories. Click here POI Categories 1002-1 cityId number no Every city has a unique ID, which is used to filter search results 12 distId number no Every district has a unique ID, which is used to filter search results 1292 wardId number no Every ward has a unique ID, which is used to filter search results 984332"},{"location":"map-api/geocode-version/geocode-ver3.0/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/search/v3?apikey={your-apikey}&amp;focus=10.75887508,106.67538868&amp;text=C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t,HCM\n</code></pre></p> <p>Respone</p> <p>If you need detailed information about the place, please use the Vietmap Place API <pre><code>[\n    {\n        \"ref_id\": \"vm:POI:7057AB748BFD685B\",\n        \"distance\": 0.069199492010845,\n        \"address\": \"197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa,Ph\u01b0\u1eddng 4,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"name\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t\",\n        \"display\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t 197 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa,Ph\u01b0\u1eddng 4,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"boundaries\": [\n            {\n                \"type\": 2,\n                \"id\": 656652,\n                \"name\": \"4\",\n                \"prefix\": \"Ph\u01b0\u1eddng\",\n                \"full_name\": \"Ph\u01b0\u1eddng 4\"\n            },\n            {\n                \"type\": 1,\n                \"id\": 1292,\n                \"name\": \"5\",\n                \"prefix\": \"Qu\u1eadn\",\n                \"full_name\": \"Qu\u1eadn 5\"\n            },\n            {\n                \"type\": 0,\n                \"id\": 12,\n                \"name\": \"H\u1ed3 Ch\u00ed Minh\",\n                \"prefix\": \"Th\u00e0nh Ph\u1ed1\",\n                \"full_name\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\"\n            }\n        ],\n        \"categories\": [\n            \"6001\"\n        ]\n    },\n    {\n        \"ref_id\": \"vm:POI:37B6A20D8D9190CD\",\n        \"distance\": 0.06445065459645513,\n        \"address\": \"199 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa,Ph\u01b0\u1eddng 4,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"name\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t Trung T\u00e2m B\u1ea3o H\u00e0nh\",\n        \"display\": \"C\u00f4ng Ty C\u1ed5 Ph\u1ea7n \u1ee8ng D\u1ee5ng B\u1ea3n \u0110\u1ed3 Vi\u1ec7t Trung T\u00e2m B\u1ea3o H\u00e0nh 199 \u0110\u01b0\u1eddng Tr\u1ea7n Ph\u00fa,Ph\u01b0\u1eddng 4,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"boundaries\": [\n            {\n                \"type\": 2,\n                \"id\": 656652,\n                \"name\": \"4\",\n                \"prefix\": \"Ph\u01b0\u1eddng\",\n                \"full_name\": \"Ph\u01b0\u1eddng 4\"\n            },\n            {\n                \"type\": 1,\n                \"id\": 1292,\n                \"name\": \"5\",\n                \"prefix\": \"Qu\u1eadn\",\n                \"full_name\": \"Qu\u1eadn 5\"\n            },\n            {\n                \"type\": 0,\n                \"id\": 12,\n                \"name\": \"H\u1ed3 Ch\u00ed Minh\",\n                \"prefix\": \"Th\u00e0nh Ph\u1ed1\",\n                \"full_name\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\"\n            }\n        ],\n        \"categories\": [\n            \"6001\"\n        ]\n    }\n]\n</code></pre></p>"},{"location":"map-api/geocode-version/geocode-ver3.0/#response-description","title":"Response description","text":"<p>Geocode API will respond to a <code>list</code> that contains <code>up to 10 places</code>.</p> Parameter Type Description ref_id string Reference ID for the Point of Interest (POI), using for get detail info from Vietmap Place API address string Full address including <code>street</code>, <code>ward</code>, <code>district</code>, and <code>city</code> name string Name of the Point of Interest (POI) display string Display name containing detailed information of the POI address boundaries array Array containing boundary information (<code>ward</code>, <code>district</code>, <code>city</code>) categories array Array containing categories associated with the POI <p>For the <code>boundaries</code> array:</p> Sub-Parameter Type Description type integer Type of boundary (0 for <code>city</code>, 1 for <code>district</code>, 2 for <code>ward</code>) id integer Unique identifier for the boundary name string Name of the boundary prefix string Prefix of the boundary (e.g., \"Ph\u01b0\u1eddng\" for ward) full_name string Full name of the boundary (e.g., \"Ph\u01b0\u1eddng 9\" for ward)"},{"location":"map-api/reverse-version/reverse-ver1.1/","title":"Reverse","text":"<p>Reverse geocoding is the process of converting geographic coordinates (latitude and longitude) into a human-readable address or place name. A Reverse API is a feature provided by VIETMAP that allows developers to perform reverse geocoding in their custom mapping applications. With a Reverse API, developers can take a set of coordinates as input and retrieve information such as the nearest address, city, or place name. This information can be used to provide context for the location on the map, or to perform further actions such as search and navigation.</p>"},{"location":"map-api/reverse-version/reverse-ver1.1/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/reverse?api-version=1.1&amp;apikey={your-apikey}&amp;point.lat={point.lat}&amp;point.lon={point.lon}&amp;boundary.circle.radius={boundary.circle.radius}&amp;size={size}&amp;layers={layers}\n</code></pre>"},{"location":"map-api/reverse-version/reverse-ver1.1/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/reverse-version/reverse-ver1.1/#parameters","title":"Parameters","text":"Parameter Type Option Default Description Example point.lat floating point number yes none 10.758584896812293 point.lon floating point number yes none 106.67527198791505 boundary.circle.radius floating point number no 1 0.5 size integer no 10 3 layers use comma to seperate multi layer types no none (all layers) the kind of place you want to find address,street,venue"},{"location":"map-api/reverse-version/reverse-ver1.1/#filter-feature","title":"Filter Feature","text":"<p>Focus on categories of records responed</p> <p>URL:</p> <pre><code>https://maps.vietmap.vn/api/reverse?api-version=1.1&amp;apikey={your-apikey}&amp;point.lat={point.lat}&amp;point.lon={point.lon}&amp;layers={layers}\n</code></pre> Layer Description venue points of interest, businesses, things with walls address places with a street address street streets, roads, highways <p>Distance and Confidence score returned</p> <p>The records which is responed by request will be verified with distance and confidence score</p> <p>\u2714\ufe0f Distance is directly distance form output point to the center (input point) \u2714\ufe0f Confident score is accuracy of results based on distance</p> Distance from\u00a0point.lat/point.lon Confidence score &lt;\u00a01m 1.0 &lt;\u00a010m 0.9 &lt;\u00a0100m 0.8 &lt;\u00a0250m 0.7 &lt;\u00a01km 0.6 &gt;= 1km 0.5"},{"location":"map-api/reverse-version/reverse-ver3.0/","title":"Reverse","text":"<p>Updating Reverse 3.0 API is a valuable resource for developers who want to incorporate location search features into their applications while achieving optimal performance. With its intelligent search algorithms and techniques, this latest version can swiftly deliver precise search results for users. This API is a powerful tool that can help enhance the user experience of location-based applications.</p>"},{"location":"map-api/reverse-version/reverse-ver3.0/#url","title":"URL","text":"<pre><code>https://maps.vietmap.vn/api/reverse/v3?apikey={your-apikey}&amp;lng={longitude}&amp;lat={latitude}\n</code></pre>"},{"location":"map-api/reverse-version/reverse-ver3.0/#method","title":"Method","text":"<p>GET</p>"},{"location":"map-api/reverse-version/reverse-ver3.0/#parameters","title":"Parameters","text":"Parameter Type Required Description Example apikey string yes API provided by VIETMAP for customer's account lng number yes Longitude of desired place 106.675461 lat number yes Latitude of desired place 10.758970 cats string no Provide full list of POI categories. Click here POI Categories 1002-1"},{"location":"map-api/reverse-version/reverse-ver3.0/#example","title":"Example","text":"<p>Input <pre><code>https://maps.vietmap.vn/api/reverse/v3?apikey={your-apikey}&amp;lng=106.67546114000004&amp;lat=10.758970242000032\n</code></pre> Response <pre><code>[\n    {\n        \"lat\": 10.758970242000032,\n        \"lng\": 106.67546114000004,\n        \"ref_id\": \"vm:ADDRESS:MM03541B04565A0C051D540650021D04050651165351004C1B060551045704520055080652065F06133710D4888A08122C5AEE965B1537EED60F\",\n        \"distance\": 4.214098139843284E-05,\n        \"address\": \"Ph\u01b0\u1eddng 9,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"name\": \"3 Tr\u1ea7n Nh\u00e2n T\u00f4n\",\n        \"display\": \"3 Tr\u1ea7n Nh\u00e2n T\u00f4n Ph\u01b0\u1eddng 9,Qu\u1eadn 5,Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\",\n        \"boundaries\": [\n            {\n                \"type\": 2,\n                \"id\": 984332,\n                \"name\": \"9\",\n                \"prefix\": \"Ph\u01b0\u1eddng\",\n                \"full_name\": \"Ph\u01b0\u1eddng 9\"\n            },\n            {\n                \"type\": 1,\n                \"id\": 1292,\n                \"name\": \"5\",\n                \"prefix\": \"Qu\u1eadn\",\n                \"full_name\": \"Qu\u1eadn 5\"\n            },\n            {\n                \"type\": 0,\n                \"id\": 12,\n                \"name\": \"H\u1ed3 Ch\u00ed Minh\",\n                \"prefix\": \"Th\u00e0nh Ph\u1ed1\",\n                \"full_name\": \"Th\u00e0nh Ph\u1ed1 H\u1ed3 Ch\u00ed Minh\"\n            }\n        ],\n        \"categories\": []\n    }\n]\n</code></pre></p>"},{"location":"map-api/reverse-version/reverse-ver3.0/#response-description","title":"Response description","text":"<p>Reverse API will respond to a <code>list</code> that contains <code>up to 10 places</code>.</p> Parameter Type Description lat double Latitude coordinate of the POI lng double Longitude coordinate of the POI ref_id string Reference ID for the POI distance int Distance of the POI from a reference point (if applicable), value response in <code>kilometer</code> address string Full address including <code>street</code>, <code>ward</code>, <code>district</code>, and <code>city</code> name string Name of the POI display string Display name containing detailed information of the POI address boundaries array Array containing boundary information (<code>ward</code>, <code>district</code>, <code>city</code>) categories array Array containing categories associated with the POI <p>For the <code>boundaries</code> array:</p> Sub-Parameter Type Description type int Type of boundary (0 for <code>city</code>, 1 for <code>district</code>, 2 for <code>ward</code>) id int Unique identifier for the boundary name string Name of the boundary prefix string Prefix of the boundary (e.g., \"Ph\u01b0\u1eddng\" for ward) full_name string Full name of the boundary (e.g., \"Ph\u01b0\u1eddng 9\" for ward)"},{"location":"sdk-mobile/overview/","title":"Vietmap Map and Navigation SDK documentation","text":""},{"location":"sdk-mobile/overview/#introduction","title":"Introduction","text":"<p>Vietmap Map and Navigation SDK for mobile is a list of libraries that help developers easily integrate map and navigation features into their mobile applications.</p>"},{"location":"sdk-mobile/overview/#features","title":"Features","text":"<ul> <li> <p>Display map with 2D/3D mode (Web SDK, Android, iOS, Flutter, React Native).</p> </li> <li> <p>Navigation with voice guidance and turn-by-turn instruction (Android, iOS, Flutter).</p> </li> <li> <p>Search for places, addresses, autocomplete, geocode and POIs,... sorted by nearby location (Autocomplete).</p> </li> <li> <p>Search for routes between two locations (Routing).</p> </li> <li> <p>Search location by latitude and longitude (Reverse).</p> </li> </ul> <p>More info at Vietmap maps APIs services and price.</p> <p>Vietmap API documentation.</p>"},{"location":"sdk-mobile/overview/#demo-app","title":"Demo app","text":"<ul> <li> <p>Download the demo app android, iOS</p> </li> <li> <p>Demo app source code for Flutter here</p> </li> <li> <p>Demo app source code for React Native here</p> </li> <li> <p>Demo app source code for Expo - React Native here</p> </li> </ul> <p></p>"},{"location":"sdk-mobile/overview/#requirements","title":"Requirements","text":"<p>You must register an apikey to use the SDK. You can get an apikey here.</p> <p>Contact us to get a free apikey for testing.</p>"},{"location":"sdk-mobile/sdk-android/","title":"SDK Android","text":""},{"location":"sdk-mobile/sdk-android/#configure-gradle-and-androidmanifest","title":"Configure gradle and AndroidManifest","text":"<p><pre><code>    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\n    implementation \"androidx.cardview:cardview:1,0,0\"\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\n    implementation \"com.google.android.gms:play-services-location:21.0.1\"\n    implementation \"com.jakewharton:butterknife:10.2.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'com.github.vietmap-company:maps-sdk-android:1.0.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-ui-android:1.1.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-android:1.1.0'\n    implementation 'com.github.vietmap-company:vietmap-services-core:1.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-directions-models:1.0.1'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.github.vietmap-company:vietmap-services-android:1.1.1'\n    implementation 'com.squareup.picasso:picasso:2.8'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.2.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.google.code.gson:gson:2.10.1'\n    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'\n    implementation 'com.google.android.material:material:1.7.0'\n</code></pre> Configure the JitPack repository in the settings.gradle file. <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // add the following two lines to the repositories (at file setting.gradle)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre> For older projects, add the following code to the build.gradle file in the project module: <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre></p> <p>Change the compileSdkVersion and targetSdkVersion to version 33. <pre><code>compileSdk 33\ntargetSdk 33\n</code></pre></p> <p>Add the following permissions to the AndroidManifest.xml file: <pre><code>    &lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#configure-project","title":"Configure project","text":"<p>Add the following color codes to the res/values/colors.xml file: <pre><code>    &lt;color name=\"colorPrimary\"&gt;#8D64F9&lt;/color&gt;\n    &lt;color name=\"colorPrimaryDark\"&gt;#7845F3&lt;/color&gt;\n    &lt;color name=\"colorAccent\"&gt;#F56FA3&lt;/color&gt;\n    &lt;color name=\"red\"&gt;#FF0000&lt;/color&gt;\n</code></pre></p> <p>Create styles.xml at res/values  <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n&lt;style name=\"CustomNavigationMapRoute\" parent=\"NavigationMapRoute\"&gt;\n    &lt;item name=\"upcomingManeuverArrowBorderColor\"&gt;@color/red&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"CustomNavigationView\" parent=\"NavigationViewLight\"&gt;\n    &lt;item name=\"navigationViewRouteStyle\"&gt;@style/CustomNavigationMapRoute&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"customInstructionView\"&gt;\n    &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/NavigationLocationLayerStyle&lt;/item&gt;\n    &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"CustomInstructionView\" parent=\"Theme.AppCompat.Light.NoActionBar\"&gt;\n    &lt;item name=\"navigationViewPrimary\"&gt;@color/mapbox_navigation_view_color_primary&lt;/item&gt;\n    &lt;item name=\"navigationViewSecondary\"&gt;@color/mapbox_navigation_view_color_secondary&lt;/item&gt;\n    &lt;item name=\"navigationViewAccent\"&gt;@color/mapbox_navigation_view_color_accent&lt;/item&gt;\n    &lt;item name=\"navigationViewPrimaryText\"&gt;@color/mapbox_navigation_view_color_secondary&lt;/item&gt;\n    &lt;item name=\"navigationViewSecondaryText\"&gt;@color/mapbox_navigation_view_color_accent_text&lt;/item&gt;\n    &lt;item name=\"navigationViewDivider\"&gt;@color/mapbox_navigation_view_color_divider&lt;/item&gt;\n\n    &lt;item name=\"navigationViewListBackground\"&gt;@color/mapbox_navigation_view_color_list_background&lt;/item&gt;\n\n    &lt;item name=\"navigationViewBannerBackground\"&gt;@color/mapbox_navigation_view_color_banner_background&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerPrimaryText\"&gt;@color/mapbox_navigation_view_color_banner_primary_text&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerSecondaryText\"&gt;@color/mapbox_navigation_view_color_banner_secondary_text&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerManeuverPrimary\"&gt;@color/mapbox_navigation_view_color_banner_maneuver_primary&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerManeuverSecondary\"&gt;@color/mapbox_navigation_view_color_banner_maneuver_secondary&lt;/item&gt;\n\n    &lt;item name=\"navigationViewProgress\"&gt;@color/mapbox_navigation_view_color_progress&lt;/item&gt;\n    &lt;item name=\"navigationViewProgressBackground\"&gt;@color/mapbox_navigation_view_color_progress_background&lt;/item&gt;\n\n    &lt;item name=\"navigationViewRouteStyle\"&gt;@style/NavigationMapRoute&lt;/item&gt;\n\n    &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/mapbox_LocationLayer&lt;/item&gt;\n\n    &lt;item name=\"navigationViewDestinationMarker\"&gt;@drawable/map_marker_light&lt;/item&gt;\n\n    &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n\n    &lt;item name=\"navigationViewMapStyle\"&gt;@string/navigation_guidance_day&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;!-- Base application theme. --&gt;\n&lt;style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\"&gt;\n    &lt;!-- Customize your theme here. --&gt;\n    &lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt;\n    &lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/colorAccent&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"TestNavigationViewDark\" parent=\"NavigationViewDark\"&gt;\n    &lt;!-- Map style URL --&gt;\n    &lt;item name=\"navigationViewMapStyle\"&gt;\n        YOUR STYLE URL HERE\n    &lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"TestNavigationViewLight\" parent=\"NavigationViewLight\"&gt;\n    &lt;!-- Map style URL --&gt;\n    &lt;item name=\"navigationViewMapStyle\"&gt;\n        YOUR STYLE URL HERE\n    &lt;/item&gt;\n&lt;/style&gt;\n&lt;/resources&gt;\n</code></pre></p> <p>Add these following code into string.xml file <pre><code>    &lt;string name=\"title_mock_navigation\"&gt;Gi\u1ea3 b\u1ed9 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_mock_navigation\"&gt;Gi\u1ea3 b\u1ed9 phi\u00ean \u0111i\u1ec1u h\u01b0\u1edbng d\u00f9ng m\u00e1y \u0111\u1ecbnh v\u1ecb gi\u1ea3.&lt;/string&gt;\n\n    &lt;string name=\"title_off_route_detection\"&gt;Nh\u1eadn ra L\u1ea1c \u0111\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"description_off_route_detection\"&gt;S\u1eed d\u1ee5ng l\u1edbp RouteUtils \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh ng\u01b0\u1eddi d\u00f9ng b\u1ecb l\u1ea1c \u0111\u01b0\u1eddng.&lt;/string&gt;\n\n    &lt;string name=\"title_reroute\"&gt;T\u00ecm \u0110\u01b0\u1eddng \u0111i M\u1edbi&lt;/string&gt;\n    &lt;string name=\"description_reroute\"&gt;Th\u1eed ch\u1ee9c n\u0103ng t\u00ecm \u0111\u01b0\u1eddng \u0111i m\u1edbi trong SDK \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_route_ui\"&gt;Tuy\u1ebfn \u0111\u01b0\u1eddng tr\u00ean B\u1ea3n \u0111\u1ed3 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_navigation_route_ui\"&gt;V\u1ebd tuy\u1ebfn \u0111\u01b0\u1eddng tr\u00ean b\u1ea3n \u0111\u1ed3&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_launcher\"&gt;Tr\u00ecnh kh\u1edfi \u0111\u1ed9ng \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_navigation_launcher\"&gt;Tr\u1ea3i nghi\u1ec7m giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 xen v\u00e0o&lt;/string&gt;\n\n    &lt;string name=\"title_end_navigation\"&gt;K\u1ebft th\u00fac \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_end_navigation\"&gt;Cho bi\u1ebft c\u00e1ch k\u1ebft th\u00fac \u0111i\u1ec1u h\u01b0\u1edbng d\u00f9ng NavigationView&lt;/string&gt;\n\n    &lt;string name=\"title_dual_navigation_map\"&gt;\u0110\u00f4i B\u1ea3n \u0111\u1ed3 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_dual_navigation_map\"&gt;Ch\u1ec9 c\u00e1ch th\u00eam NavigationView v\u00e0 MapView v\u00e0o c\u00f9ng b\u1ed1 c\u1ee5c&lt;/string&gt;\n\n    &lt;string name=\"title_waypoint_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng gi\u1eefa c\u00e1c T\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n    &lt;string name=\"description_waypoint_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng gi\u1eefa c\u00e1c t\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n\n    &lt;string name=\"title_embedded_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng \u0111\u01b0\u1ee3c Nh\u00fang&lt;/string&gt;\n    &lt;string name=\"description_embedded_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng trong khung nh\u00ecn ch\u1ee9a c\u00e1c khung nh\u00ecn kh\u00e1c&lt;/string&gt;\n\n    &lt;string name=\"title_fragment_navigation\"&gt;NavigationView th\u1ef1c hi\u1ec7n b\u1eb1ng Fragment&lt;/string&gt;\n    &lt;string name=\"description_fragment_navigation\"&gt;NavigationView th\u1ef1c hi\u1ec7n b\u1eb1ng Fragment&lt;/string&gt;\n\n    &lt;string name=\"settings\"&gt;Thi\u1ebft l\u1eadp&lt;/string&gt;\n    &lt;string name=\"simulate_route\"&gt;M\u00f4 ph\u1ecfng Tuy\u1ebfn \u0111\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"language\"&gt;Ng\u00f4n ng\u1eef&lt;/string&gt;\n    &lt;string name=\"unit_type\"&gt;H\u1ec7 \u0110o l\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"route_profile\"&gt;Ch\u1ebf \u0111\u1ed9&lt;/string&gt;\n\n    &lt;string name=\"error_route_not_available\"&gt;Tuy\u1ebfn \u0111\u01b0\u1eddng hi\u1ec7n t\u1ea1i kh\u00f4ng c\u00f3 s\u1eb5n&lt;/string&gt;\n    &lt;string name=\"error_select_longer_route\"&gt;Vui l\u00f2ng ch\u1ecdn m\u1ed9t tuy\u1ebfn \u0111\u01b0\u1eddng d\u00e0i h\u01a1n&lt;/string&gt;\n    &lt;string name=\"error_valid_route_not_found\"&gt;Kh\u00f4ng t\u00ecm th\u1ea5y tuy\u1ebfn \u0111i \u0111\u01b0\u1ee3c.&lt;/string&gt;\n    &lt;string name=\"explanation_long_press_waypoint\"&gt;Ch\u1ea1m l\u00e2u v\u00e0o b\u1ea3n \u0111\u1ed3 \u0111\u1ec3 th\u1ea3 ghim t\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_ui\"&gt;Navigation UI&lt;/string&gt;\n    &lt;string name=\"description_navigation_ui\"&gt;Showcase a Navigation UI session. Optional with simulation.&lt;/string&gt;\n\n\n    &lt;string name=\"title_component_navigation\"&gt;MapboxNavigation with UI components&lt;/string&gt;\n    &lt;string name=\"description_component_navigation\"&gt;MapboxNavigation with UI components&lt;/string&gt;\n\n    &lt;string name=\"unit_type_key\" translatable=\"false\"&gt;unit_type&lt;/string&gt;\n    &lt;string name=\"simulate_route_key\" translatable=\"false\"&gt;simulate_route&lt;/string&gt;\n    &lt;string name=\"language_key\" translatable=\"false\"&gt;language&lt;/string&gt;\n    &lt;string name=\"route_profile_key\" translatable=\"false\"&gt;route_profile&lt;/string&gt;\n    &lt;string name=\"default_locale\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n    &lt;string name=\"default_unit_type\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n    &lt;string name=\"current_night_mode\" translatable=\"false\"&gt;current_night_mode&lt;/string&gt;\n\n    &lt;string name=\"new_location\"&gt;V\u0129 \u0111\u1ed9: %1$s Kinh \u0111\u1ed9: %2$s&lt;/string&gt;\n    &lt;string name=\"map_view_style_url\" translatable=\"false\"&gt;YOUR_STYLE_URL_HERE&lt;/string&gt;\n\n    &lt;string name=\"user_location_permission_explanation\"&gt;\u1ee8ng d\u1ee5ng n\u00e0y c\u1ea7n s\u1eed d\u1ee5ng quy\u1ec1n v\u1ecb tr\u00ed \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng ch\u00ednh x\u00e1c.&lt;/string&gt;\n    &lt;string name=\"user_location_permission_not_granted\"&gt;B\u1ea1n ch\u01b0a cung c\u1ea5p quy\u1ec1n v\u1ecb tr\u00ed.&lt;/string&gt;\n</code></pre></p> <p>Note: add the styleUrl at the location \"YOUR_STYLE_URL_HERE\" for the map_view_style_url key to run navigation.</p>"},{"location":"sdk-mobile/sdk-android/#create-a-navigationactivity-to-utilize-the-sdk","title":"Create a NavigationActivity to utilize the SDK","text":"<p>Create a new activity named <code>VietMapNavigationActivity</code>.</p> <p>To create a new activity named <code>VietMapNavigationActivity</code> in your Android project, follow these steps: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/vietmapNavigation\"&gt;\n\n    &lt;com.mapbox.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"invisible\"\n        app:maplibre_cameraZoom=\"16\"\n        app:layout_constraintHeight_percent=\"0.5\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n\n    &lt;com.mapbox.mapboxsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:maplibre_cameraZoom=\"16\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"invisible\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"invisible\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre> <code>VietMapNavigationActivity</code> needs to implement several listener classes below to capture events and handle them during the SDK navigation process. <pre><code>public class VietMapNavigationMapActivity extends AppCompatActivity implements \n        OnNavigationReadyCallback,\n        ProgressChangeListener,\n        NavigationListener,\n        Callback&lt;DirectionsResponse&gt;,\n        OnMapReadyCallback,\n        MapboxMap.OnMapClickListener,\n        MapboxMap.OnMapLongClickListener,\n        MapboxMap.OnMoveListener,\n        OnRouteSelectionChangeListener,\n        OffRouteListener, \n        RouteListener, NavigationEventListener \n{\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        //H\u00e0m Mapbox.getInstance c\u1ea7n \u0111\u01b0\u1ee3c g\u1ecdi ngay khi kh\u1edfi t\u1ea1o activity\n        Mapbox.getInstance(this);\n        super.onCreate(savedInstanceState);\n    }\n}\n</code></pre> Note <pre><code>* OnNavigationReadyCallback: Listens when the SDK starts navigation.\n* ProgressChangeListener(location, routeProgress): Continuously listens to the user's current location, current route information, next route, and remaining distance that the user needs to travel.\n* NavigationListener: Includes three functions:\n - onCancelNavigation: Listens when the user cancels the navigation.\n - onNavigationFinished: Listens when the user completes the journey.\n* onNavigationRunning: Listens when the user is actively navigating.\n* Callback(DirectionsResponse): Returns the result when the getRoute operation is completed.\n* OnMapReadyCallback: Listens when the map initialization is completed and applies the style to the map.\n* MapboxMap.OnMapClickListener, MapboxMap.OnMapLongClickListener, MapboxMap.OnMoveListener: Listen to map events such as click, long click, and move.\n* OnRouteSelectionChangeListener(DirectionsRoute newRouteSelected):\n* onNewPrimaryRouteSelected: Listens when the user selects a different route from the current route and returns the newly selected route.\n* OffRouteListener: Listens when the user deviates from the intended route and needs to find an alternative route based on the user's current location.\n* userOffRoute(Location currentLocation): Called when the user deviates from the intended route, providing the current location to find a new route.\n* RouteListener: Listens when the user arrives at the destination.\n* onArrival(): Called when the user reaches the destination.\n</code></pre></p> <p>Declare the necessary variables: <pre><code>    private static final int DEFAULT_CAMERA_ZOOM = 20;\n    private ConstraintLayout customUINavigation;\n    private NavigationView navigationView;\n    private MapView mapView;\n    private ProgressBar loading;\n    private FloatingActionButton launchNavigationFab;\n    private Point origin = Point.fromLngLat(106.675789, 10.759050);\n    private Point destination = Point.fromLngLat(106.686777, 10.775056);\n    private DirectionsRoute route;\n    private boolean isNavigationRunning;\n    private MapboxNavigation mapboxNavigation;\n    private LocationEngine locationEngine;\n    private NavigationMapRoute mapRoute;\n    private MapboxMap mapboxMap;\n    private ConstraintSet navigationMapConstraint;\n    private ConstraintSet navigationMapExpandedConstraint;\n    private boolean[] constraintChanged;\n    private LocationComponent locationComponent;\n    private ReplayRouteLocationEngine mockLocationEngine;\n    private FusedLocationProviderClient fusedLocationClient;\n    private int BEGIN_ROUTE_MILESTONE = 1001;\n    private boolean reRoute = false;\n    private boolean isArrived = false;\n    private NavigationViewOptions.Builder mapviewNavigationOptions;\n</code></pre> <code>onCreate</code>, initializing the navigation screen <pre><code>    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        // Th\u00eam \u0111o\u1ea1n code sau v\u00e0o h\u00e0m onCreate\n        CustomNavigationNotification customNotification = new CustomNavigationNotification(this);\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n            customNotification.createNotificationChannel(this);\n        }\n        MapboxNavigationOptions options = MapboxNavigationOptions.builder()\n                .navigationNotification(customNotification)\n                .build();\n        mapboxNavigation = new MapboxNavigation(this, options);\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\n        initializeViews(savedInstanceState);\n        navigationView.initialize(this);\n        navigationMapConstraint = new ConstraintSet();\n        navigationMapConstraint.clone(customUINavigation);\n        navigationMapExpandedConstraint = new ConstraintSet();\n        navigationMapExpandedConstraint.clone(this, R.layout.vietmap_navigation_expand);\n        constraintChanged = new boolean[]{false};\n    }\n</code></pre> <code>initializeViews</code> <pre><code>    private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n    }\n</code></pre> <code>onMapReady</code> <pre><code>    @Override\n    public void onMapReady(@NonNull MapboxMap mapboxMap) {\n        this.mapboxMap = mapboxMap;\n        mapboxMap.setStyle(new Style.Builder().fromUri(YOUR_STYLE_URL_HERE), style -&gt; {\n            initLocationEngine();\n            getCurrentLocation();\n            enableLocationComponent(style);\n            initMapRoute();\n        });\n        this.mapboxMap.addOnMapClickListener(this);\n    }\n</code></pre> <pre><code>    private void initLocationEngine() {\n        mockLocationEngine = new ReplayRouteLocationEngine();\n        locationEngine = LocationEngineProvider.getBestLocationEngine(this);\n        long DEFAULT_INTERVAL_IN_MILLISECONDS = 5000;\n        long DEFAULT_MAX_WAIT_TIME = 30000;\n        LocationEngineRequest request = new LocationEngineRequest.Builder(DEFAULT_INTERVAL_IN_MILLISECONDS)\n                .setPriority(LocationEngineRequest.PRIORITY_HIGH_ACCURACY)\n                .setMaxWaitTime(DEFAULT_MAX_WAIT_TIME)\n                .build();\n\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            mockLocationEngine.assignLastLocation(origin);\n            return;\n        }\n    }\n\n    private void initMapRoute() {\n\n        mapRoute = new NavigationMapRoute(mapView, mapboxMap);\n        mapRoute.setOnRouteSelectionChangeListener(this);\n        mapRoute.addProgressChangeListener(new MapboxNavigation(this));\n    }\n\n\n    private void getCurrentLocation() {\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            fusedLocationClient.getLastLocation()\n                    .addOnSuccessListener(this, location -&gt; {\n                        if (location != null) {\n                            origin = Point.fromLngLat(location.getLongitude(), location.getLatitude());\n                        }\n                    });\n            return;\n        }\n    }\n    private void enableLocationComponent(Style style) {\n        locationComponent = mapboxMap.getLocationComponent();\n\n        if (locationComponent != null) {\n            locationComponent.activateLocationComponent(\n                    LocationComponentActivationOptions.builder(this, style).build()\n            );\n            if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                return;\n            }\n            locationComponent.setLocationComponentEnabled(true);\n            locationComponent.setCameraMode(CameraMode.TRACKING_GPS_NORTH);\n            locationComponent.zoomWhileTracking(DEFAULT_CAMERA_ZOOM);\n            locationComponent.setRenderMode(RenderMode.GPS);\n            locationComponent.setLocationEngine(locationEngine);\n        }\n    }\n</code></pre> Create <code>layout xml vietmap_navigation_expand</code> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/vietmapNavigationExpand\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"&gt;\n\n    &lt;com.mapbox.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"visible\"\n        app:maplibre_cameraZoom=\"15\"\n        app:layout_constraintHeight_percent=\"1\"\n        app:layout_constraintTop_toTopOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n\n    &lt;com.mapbox.mapboxsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:maplibre_cameraZoom=\"15\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintHeight_percent=\"0\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"gone\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre> expandCollapse <pre><code>    private void expandCollapse() {\n        TransitionManager.beginDelayedTransition(customUINavigation);\n        ConstraintSet constraint;\n        if (constraintChanged[0]) {\n            constraint = navigationMapConstraint;\n        } else {\n            constraint = navigationMapExpandedConstraint;\n        }\n        constraint.applyTo(customUINavigation);\n        constraintChanged[0] = !constraintChanged[0];\n    }\n</code></pre> stopNavigationFunction <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        launchNavigationFab.show();\n    }\n</code></pre> onCancelNavigation(): Listening function when the user stops navigation <pre><code>    @Override\n    public void onCancelNavigation() {\n        isNavigationRunning=false;\n        expandCollapse();\n        stopNavigationFunction();\n    }\n</code></pre> onRunning and onNavigationReady(): Listening for changes in the navigation state <pre><code>    @Override\n    public void onRunning(boolean b) {\n        isNavigationRunning = b;\n    }\n\n\n    @Override\n    public void onNavigationReady(boolean b) {\n\n        isNavigationRunning = b;\n    }\n</code></pre>  onNewPrimaryRouteSelected(): Listening for changes when user chooses alternative route <pre><code>     @Override\n    public void onNewPrimaryRouteSelected(DirectionsRoute directionsRoute) {\n        route=directionsRoute;\n    }\n</code></pre></p> <p>Create <code>CustomNavigationNotification</code> - Sending notifications to the user along each route: <pre><code>public class CustomNavigationNotification implements NavigationNotification {\n\n    private static final int CUSTOM_NOTIFICATION_ID = 91234821;\n    private static final String STOP_NAVIGATION_ACTION = \"stop_navigation_action\";\n    private final Notification customNotification;\n    private final NotificationCompat.Builder customNotificationBuilder;\n    private final NotificationManager notificationManager;\n    private BroadcastReceiver stopNavigationReceiver;\n    private int numberOfUpdates;\n\n    public CustomNavigationNotification(Context applicationContext) {\n        notificationManager = (NotificationManager) applicationContext.getSystemService(Context.NOTIFICATION_SERVICE);\n        customNotificationBuilder = new NotificationCompat.Builder(applicationContext, NAVIGATION_NOTIFICATION_CHANNEL)\n                .setSmallIcon(R.drawable.ic_launcher_foreground)\n                .setContentTitle(\"Custom Navigation Notification\")\n                .setContentText(\"Display your own content here!\")\n                .setContentIntent(createPendingStopIntent(applicationContext));\n        customNotification = customNotificationBuilder.build();\n    }\n\n    @Override\n    public Notification getNotification() {\n        return customNotification;\n    }\n\n    @Override\n    public int getNotificationId() {\n        return CUSTOM_NOTIFICATION_ID;\n    }\n\n    @Override\n    public void updateNotification(RouteProgress routeProgress) {\n        // Update the builder with a new number of updates\n        customNotificationBuilder.setContentText(\"Number of updates: \" + numberOfUpdates++);\n        notificationManager.notify(CUSTOM_NOTIFICATION_ID, customNotificationBuilder.build());\n    }\n\n    @Override\n    public void onNavigationStopped(Context context) {\n        try {\n            context.unregisterReceiver(stopNavigationReceiver);\n        }catch(Exception e){}\n        notificationManager.cancel(CUSTOM_NOTIFICATION_ID);\n    }\n\n    public void register(BroadcastReceiver stopNavigationReceiver, Context applicationContext) {\n        this.stopNavigationReceiver = stopNavigationReceiver;\n        applicationContext.registerReceiver(stopNavigationReceiver, new IntentFilter(STOP_NAVIGATION_ACTION));\n    }\n\n    private PendingIntent createPendingStopIntent(Context context) {\n        Intent stopNavigationIntent = new Intent(STOP_NAVIGATION_ACTION);\n        return PendingIntent.getBroadcast(context, 0, stopNavigationIntent, PendingIntent.FLAG_IMMUTABLE);\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    public void createNotificationChannel(Context context) {\n        NotificationChannel chan = new NotificationChannel(NAVIGATION_NOTIFICATION_CHANNEL, \"CustomNavigationNotification\", NotificationManager.IMPORTANCE_NONE);\n        chan.setLightColor(Color.BLUE);\n        chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);\n        NotificationManager service = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n        if (service != null) {\n            service.createNotificationChannel(chan);\n        }\n    }\n}\n</code></pre></p> <p>After calling the fetchRoute function, you will receive the result in the listener as follows: <pre><code>    @Override\n    public void onResponse(Call&lt;DirectionsResponse&gt; call, Response&lt;DirectionsResponse&gt; response) {\n        if (validRouteResponse(response)) {\n            if (reRoute) {\n                route = response.body().routes().get(0);\n                initNavigationOptions();\n                navigationView.updateCameraRouteOverview();\n                mapboxNavigation.addNavigationEventListener(this);\n                mapboxNavigation.startNavigation(route);\n                navigationView.startNavigation(this.mapviewNavigationOptions.build());\n                reRoute = false;\n                isArrived=false;\n            } else {\n                launchNavigationFab.show();\n                route = response.body().routes().get(0);\n                mapRoute.addRoutes(response.body().routes());\n                if (isNavigationRunning) {\n                    launchNavigation();\n                }\n            }\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#start-navigation","title":"Start navigation","text":"<p>After successfully fetching the route, the next step is to configure some options to start the navigation <pre><code>void initNavigationOptions(){\n        MapboxNavigationOptions navigationOptions = MapboxNavigationOptions.builder()\n                .build();\n        mapviewNavigationOptions =NavigationViewOptions.builder()\n                .navigationListener(this)\n                .routeListener(this)\n                .navigationOptions(navigationOptions)\n                .locationEngine(locationEngine)\n                .shouldSimulateRoute(false)\n                .progressChangeListener(progressChangeListener)\n                .directionsRoute(route)\n                .onMoveListener(this);\n    }\n</code></pre></p> <p>The <code>progressChangeListener</code> function returns two pieces of information: location (the current location of the user) and <code>routeProgress</code> (information about the current route the user is traversing, including the next maneuver, remaining distance, etc.).  <pre><code>    private ProgressChangeListener progressChangeListener = (location, routeProgress) -&gt; {\n        System.out.println(\"Progress Changing\");\n    };\n</code></pre> <pre><code>    private boolean validRouteResponse(Response&lt;DirectionsResponse&gt; response) {\n        return response.body() != null &amp;&amp; !response.body().routes().isEmpty();\n    }\n</code></pre></p> <p><code>initNavigationOptions</code> will be called before starting the navigation. <pre><code>    private void launchNavigation() {\n        launchNavigationFab.hide();\n        navigationView.setVisibility(View.VISIBLE);\n        mapboxNavigation.addOffRouteListener(this);\n        initNavigationOptions();\n        mapboxNavigation.startNavigation(route);\n        navigationView.startNavigation(this.mapviewNavigationOptions.build());\n        isArrived=false;\n    }\n</code></pre></p> <ul> <li> <p>The <code>launchNavigation</code>function is called on a button click event, as specified by the user.</p> </li> <li> <p>In the <code>launchNavigation</code> function, there are two startNavigation methods being invoked:</p> </li> <li>The <code>startNavigation</code> method of the <code>mapboxNavigation</code> instance is called. This method serves as a controller to listen to the navigation state and provides access to all the information about the ongoing trip.</li> <li>The <code>startNavigation</code> method of the <code>navigationView</code> is called to begin displaying the navigation UI on the screen. <pre><code>    @Override\n    public void userOffRoute(Location location) {\n        if(isArrived) return;\n            reRoute = true;\n            fetchRoute(Point.fromLngLat(location.getLongitude(), location.getLatitude()), destination);\n    }  \n</code></pre> <code>userOffRoute</code> function listens for when the user deviates from the returned route and then finds a more suitable alternative route based on the current user's direction of travel.  <pre><code>    @Override\n    public void onProgressChange(Location location, RouteProgress routeProgress) {\n\n    }\n</code></pre> <code>onProgressChange</code> function listens for the user's movement and continuously updates information about the route the user is traveling on, remaining distance, etc.  <pre><code>    @Override\n    public void onArrival() {\n        if(isArrived) return;\n        //X\u1eed l\u00fd th\u00f4ng b\u00e1o v\u00e0 k\u1ebft th\u00fac d\u1eabn \u0111\u01b0\u1eddng t\u1ea1i \u0111\u00e2y\n        isArrived=true;\n    }\n</code></pre> <code>onArrival</code> function listens for when the user has arrived at the destination and allows you to create custom notifications or alerts for the user. <pre><code>    @Override\n    public boolean onMapClick(@NonNull LatLng latLng) {\n        getCurrentLocation();\n        destination = Point.fromLngLat(latLng.getLongitude(), latLng.getLatitude());\n        if (origin != null) {\n            fetchRoute(origin, destination);\n        }\n        return false;\n    }\n</code></pre></li> </ul> <p><code>onMapClick</code> function receives the current location and retrieves the route from the current location to the location selected by the user.</p> <p>Add the following callback functions to ensure proper initialization and memory management, as well as handling user actions. The <code>NavigationView</code> component should be linked to the activity's lifecycle using the provided callbacks. This allows the <code>NavigationView</code> to correctly handle the activity's lifecycle and provide corresponding responses. <pre><code>    @Override\n    public void onStart() {\n        super.onStart();\n        navigationView.onStart();\n        mapView.onStart();\n    }\n\n    @Override\n        public void onResume() {\n        super.onResume();\n        navigationView.onResume();\n        mapView.onResume();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onLowMemory() {\n        super.onLowMemory();\n        navigationView.onLowMemory();\n        mapView.onLowMemory();\n    }\n\n    @Override\n    public void onBackPressed() {\n        stopNavigationFunction();\n\n        if (!navigationView.onBackPressed()) {\n            super.onBackPressed();\n        }\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        navigationView.onSaveInstanceState(outState);\n        mapView.onSaveInstanceState(outState);\n        super.onSaveInstanceState(outState);\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n        navigationView.onRestoreInstanceState(savedInstanceState);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        navigationView.onPause();\n        mapView.onPause();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        navigationView.onStop();\n        mapView.onStop();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        navigationView.onDestroy();\n        mapView.onDestroy();\n        if (locationEngine != null) {\n        }\n    }\n</code></pre></p> <p>In MainActivity, add a function to check location permissions and a button to navigate to the navigation screen <pre><code>public class MainActivity extends AppCompatActivity implements PermissionsListener {\n\n    private PermissionsManager permissionsManager;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button button =  findViewById(R.id.pushToNavigationScreen);\n        Intent it = new Intent(this, VietMapNavigationActivity.class);\n        button.setOnClickListener(view -&gt; startActivity(it));\n        permissionsManager = new PermissionsManager(this);\n        if (!PermissionsManager.areLocationPermissionsGranted(this)) {\n            permissionsManager.requestLocationPermissions(this);\n        }\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n                                           @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        permissionsManager.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n\n    @Override\n    public void onExplanationNeeded(List&lt;String&gt; permissionsToExplain) {\n        Toast.makeText(this, \"This app needs location permissions in order to show its functionality.\",\n                Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onPermissionResult(boolean granted) {\n        if (granted) {\n        } else {\n            Toast.makeText(this, \"You didn't grant location permissions.\",\n                    Toast.LENGTH_LONG).show();\n        }\n    }\n}\n</code></pre></p> <p>In the <code>activity_main.xml</code> file, add a layout for the button above <pre><code>    &lt;Button\n        android:id=\"@+id/pushToNavigationScreen\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start to VietMapNavigationScreen\"\n        tools:ignore=\"MissingConstraints\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#customise-ui","title":"Customise UI","text":"<p><pre><code>    navigationView.initViewConfig(true);\n</code></pre> <code>onCreate</code> function, add the following code snippet above to hide the default UI elements, leaving only the map and navigation components. The provided information for the trip will be displayed in full. Add this code into layout xml file in <code>VietmapNavigationActivity</code> <pre><code>    &lt;androidx.appcompat.widget.LinearLayoutCompat\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:id=\"@+id/navigationAction\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"&gt;\n        &lt;Button\n            android:id=\"@+id/overViewRouteButton\"\n            android:layout_width=\"wrap_content\"\n            app:layout_constraintStart_toEndOf=\"@+id/stopNavigation\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintTop_toBottomOf=\"@id/stopNavigation\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Over View\"\n            app:layout_anchorGravity=\"top|left\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/recenterBtnCustom\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Recenter\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/stopNavigation\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintTop_toBottomOf=\"@id/overViewRouteButton\"\n            android:visibility=\"gone\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Stop\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n    &lt;/androidx.appcompat.widget.LinearLayoutCompat&gt;\n</code></pre> Declare three buttons for performing actions like zooming to the midpoint, viewing the entire route, and canceling navigation <pre><code>    private Button recenterButton;\n    private Button overViewRouteButton;\n    private Button stopNavigation;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#listener-and-execution-functions-in-the-custom-ui-screen","title":"Listener and execution functions in the custom UI screen","text":"<p>Initialize the <code>NavigationPresenter</code> variable in the <code>onCreate</code> <pre><code>NavigationPresenter navigationPresenter = navigationView.getNavigationPresenter();\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#create-controller-for-manage-functions","title":"Create controller for manage functions","text":"<p>recenterFunction <pre><code>    recenterButton.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            navigationPresenter.onRecenterClick();\n            changeNavigationActionState(true);\n        }\n    });\n</code></pre> routeOverViewButton(): Overview of the route <pre><code>    overViewRouteButton.setOnClickListener(view -&gt; {\n        navigationPresenter.onRouteOverviewClick();\n        changeNavigationActionState(false);\n    });\n</code></pre> stopNavigation(): In order to end navigation <pre><code>    stopNavigation.setOnClickListener(view -&gt; {\n        changeNavigationActionState(false);\n        expandCollapse();\n        stopNavigationFunction();\n    });\n</code></pre> Adjust <code>stopNavigation</code> by using this: <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        launchNavigationFab.show();\n        //Th\u00eam 3 d\u00f2ng code d\u01b0\u1edbi \u0111\u00e2y \n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n    }\n</code></pre></p> <p>recenterButton(): To listen to map movement events and display a button to return to the route when the user moves the map <pre><code>    @Override\n    public void onMoveBegin(@NonNull MoveGestureDetector moveGestureDetector) {\n        changeNavigationActionState(false);\n    }\n</code></pre></p> <p>changeNavigationActionState(): To change the state of buttons <pre><code>    void changeNavigationActionState(boolean isNavigationRunning) {\n        if (!isNavigationRunning) {\n            overViewRouteButton.setVisibility(View.GONE);\n            recenterButton.setVisibility(View.VISIBLE);\n            stopNavigation.setVisibility(View.GONE);\n        } else {\n            overViewRouteButton.setVisibility(View.VISIBLE);\n            recenterButton.setVisibility(View.GONE);\n            stopNavigation.setVisibility(View.VISIBLE);\n        }\n    }\n</code></pre></p> <p>initializeViews() <pre><code>private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n        /// Th\u00eam 3 d\u00f2ng d\u01b0\u1edbi \u0111\u00e2y\n        overViewRouteButton = findViewById(R.id.overViewRouteButton);\n        stopNavigation = findViewById(R.id.stopNavigation);\n        recenterButton = findViewById(R.id.recenterBtnCustom);\n    }\n</code></pre> Add this code into <code>launchNavigation</code> <pre><code>    private void launchNavigation() {\n    ...\n        changeNavigationActionState(true);\n    ...\n    }\n</code></pre> Adjust <code>stopNavigation</code> <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n        launchNavigationFab.show();\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/#api-key-and-styleurl","title":"API key and styleURL","text":"<p>To ensure that the application doesn't crash when running, you need to add the styleUrl and apiKey provided by VietMap at the following locations:</p> <ul> <li> <p>Add styleUrl in the <code>src/values/strings.xml</code> file</p> </li> <li> <p>Add styleUrl in the <code>onMapReady</code> method</p> </li> <li> <p>Add apiKey in the <code>fetchRoute</code> method</p> </li> </ul>"},{"location":"sdk-mobile/sdk-ios/","title":"SDK iOS","text":""},{"location":"sdk-mobile/sdk-ios/#setup-environment","title":"Setup environment","text":"<p>Install <code>Hombrew</code> First, check if <code>brew</code> is available If <code>Homebrew</code> is not installed, you will see  <pre><code>$ zsh: command not found: brew\n</code></pre> For <code>Homebrew</code> installation <pre><code>$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> Install <code>Carthage</code> <pre><code>$ brew install carthage\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/#create-a-navigation-project-with-xcode","title":"Create a Navigation project with Xcode","text":"<p>Create a new project using Swift and Storyboard File &gt; New &gt; Project</p> <p></p> <p>If run successfully </p>"},{"location":"sdk-mobile/sdk-ios/#import-libraries","title":"Import libraries","text":"<p>Create Cartfile  <pre><code>$ cd ~/path/to/NavigationSample\n$ touch Cartfile\n</code></pre> In order to ensure that Cartfile has the necessary permissions to build the library, use the following command <pre><code>$ chmod +x Cartfile\n</code></pre> Then <pre><code>$ carthage bootstrap --platform iOS --use-xcframeworks\n</code></pre> Finally, new file will be created <pre><code>Cartfile.resolve: The specified framework will be fetched/built.\nCarthage: Contain all the built frameworks.\n</code></pre> </p> <p>Pay attention </p> <p>Add Package Dependencies and these libraries: <code>https://github.com/vietmap-company/maps-sdk-ios.git</code></p> <p></p> <p>Select Dependency Rule &gt; Branch &gt; Main in order to use latest libraries </p> <p>Finally,   </p>"},{"location":"sdk-mobile/sdk-ios/#events","title":"Events","text":"<p>addGestureRecognizer: Register Gesture Recognizer for map view</p> <p>Directions: Request API to find directions</p> <p>NavigationViewController: Start navigation</p> <p>Register listening to events of route manager</p> <p>routeControllerProgressDidChange</p> <p>routeControllerDidReroute</p> <p>Register listening to events of map manager NavigationMapViewDelegate</p> <p>didSelect: WayPoint</p> <p>didSelect: Route</p> <p>Register listening to events of navigation manager <code>NavigationViewControllerDelegate</code></p> <p>didArriveAt</p> <p>byCanceling: Canceling</p>"},{"location":"sdk-mobile/sdk-ios/#create-project","title":"Create project","text":"<p>Info.plist configuration Request for device location <pre><code>&lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;UIBackgroundModes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;audio&lt;/string&gt;\n    &lt;string&gt;location&lt;/string&gt;\n&lt;/array&gt;\n</code></pre></p> <p>Add config Style URL, server URL, and API_KEY</p> <p><pre><code>&lt;key&gt;VietMapURL&lt;/key&gt;\n&lt;string&gt;YOUR_STYLE_HERE&lt;/string&gt;\n&lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n&lt;string&gt;YOUR_SERVER_URL&lt;/string&gt;\n&lt;key&gt;VietMapAccessToken&lt;/key&gt;\n&lt;string&gt;YOUR_API_KEY&lt;/string&gt;\n</code></pre> Create a layout with:</p> <p>UIView: mapView &gt; display mapView</p> <p>UIButton: clearMarker &gt; delete destination marker </p> <p>UIButton: startButton &gt; start navigation</p> <p></p>"},{"location":"sdk-mobile/sdk-ios/#create-mapview","title":"Create mapview","text":"<pre><code>var mapView: NavigationMapView? {\n    didSet {\n        oldValue?.removeFromSuperview()\n        if let mapView = mapView {\n            configureMapView(mapView)\n            view.insertSubview(mapView, belowSubview: longPressHintView)\n        }\n    }\n}\n\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    startMapView()\n}\n\nfunc startMapView() {\n    self.routes = nil\n    self.waypoints = []\n    self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n    // Reset the navigation styling to the defaults if we are returning from a presentation.\n    if (presentedViewController != nil) {\n        DayStyle().apply()\n    }\n    Locale.localeVoice = \"vi\"\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/#register-gesture-recognizer-for-mapview","title":"Register Gesture Recognizer for mapView.","text":"<p>Create a <code>didLongPress</code> event to request finding a destination on the map <pre><code>let longTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\nmapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(longTap.require(toFail:))\nmapView.addGestureRecognizer(longTap)\n</code></pre> Retrieve coordinates and set a marker for the destination in the <code>didLongPress</code> event</p> <pre><code>@objc func didLongPress(tap: UILongPressGestureRecognizer) {\n    guard let mapView = mapView, tap.state == .began else { return }\n\n    if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n        mapView.removeAnnotation(annotation)\n    }\n\n    if waypoints.count &gt; 1 {\n        waypoints = Array(waypoints.suffix(1))\n    }\n\n    let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n    // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n    let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n    waypoints.append(waypoint)\n\n    requestRoute()\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/#request-an-api-to-search-for-directions","title":"Request an API to search for directions","text":"<p>Request to search for directions with the starting point as the current location and the destination as the location after longPress. <pre><code>func requestRoute() {\n    guard waypoints.count &gt; 0 else { return }\n    guard let mapView = mapView else { return }\n\n    let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n    waypoints.insert(userWaypoint, at: 0)\n\n    let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n    requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n}\n\nfileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n    let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n        if let error = potentialError, let fail = failure { return fail(error) }\n        guard let routes = potentialRoutes else { return }\n        return success(routes)\n    }\n\n    Directions.shared.calculate(options, completionHandler: handler)\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/#start-navigation","title":"Start navigation","text":"<p>Start navigation, hide the current mapView, and replace it with a <code>navigationView</code>.</p> <pre><code>func startStyledNavigation() {\n    guard let route = self.routes?.first else { return }\n    navigationViewController = NavigationViewController(\n        for: route,\n        styles: [NightStyle()],\n        locationManager: NavigationLocationManager()\n    )\n    navigationViewController.delegate = self\n    customStyleMap()\n    configureMapView()\n    addListenerMap()\n    present(navigationViewController, animated: true) {\n        self.mapView?.removeFromSuperview()\n        self.mapView = nil\n    }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/#register-the-progressdidchange-and-reroute-events","title":"Register the ProgressDidChange and ReRoute events.","text":"<p><pre><code>private func addListenerMap() {\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n}\n</code></pre> <code>progressDidChange</code> event returns route and location data during movement, which can be used to improve camera and navigation. The example below shows how to store the current location and add a directional arrow for the next turn: <pre><code>@objc func progressDidChange(_ notification: NSNotification  ) {\n    let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n    let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n    currentLocation = location\n    setCenterIsFirst(location)\n    addManeuverArrow(routeProgress)\n}\n</code></pre></p> <p><code>progressDidReroute</code> event returns new route data when the user's location deviates from the original route. Here's an example of how to handle this event: <pre><code>@objc func progressDidReroute(_ notification: Notification) {\n  if let userInfo = notification.object as? RouteController {\n      navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n      centerMap(userInfo.locationManager.location!)\n  }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/#register-for-the-didselectwaypoint-and-didselectroute-events","title":"Register for the didSelectWaypoint and didSelectRoute events","text":"<pre><code>extension ViewController: NavigationMapViewDelegate {\n  func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n      guard let routeOptions = routes?.first?.routeOptions else { return }\n      let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n      presentWaypointRemovalActionSheet { _ in\n          self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n      }\n  }\n\n  func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n      guard let routes = routes else { return }\n      guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n      self.routes!.remove(at: index)\n      self.routes!.insert(route, at: 0)\n  }\n\n  private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n      let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n      let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n      let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n      let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n      let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n      let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n      let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n      [remove, cancel].forEach(actionSheet.addAction(_:))\n\n      self.present(actionSheet, animated: true, completion: nil)\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/#register-for-didarriveat-and-bycanceling-events","title":"Register for didArriveAt and byCanceling events","text":"<p><code>didArriveAt</code> event is emitted when the user reaches the destination during navigation. On the other hand, <code>byCanceling</code> event is emitted when the user cancels the navigation <pre><code>extension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre> Here is the sample code: <pre><code>import UIKit\nimport MapboxCoreNavigation\nimport MapboxNavigation\nimport MapboxDirections\nimport UserNotifications\n\nprivate typealias RouteRequestSuccess = (([Route]) -&gt; Void)\nprivate typealias RouteRequestFailure = ((NSError) -&gt; Void)\n\nclass ViewController: UIViewController, MGLMapViewDelegate {\n\n    // MARK: - IBOutlets\n    @IBOutlet weak var longPressHintView: UIView!\n    @IBOutlet weak var startButton: UIButton!\n    @IBOutlet weak var bottomBar: UIView!\n    @IBOutlet weak var bottomBarBackground: UIView!\n    @IBOutlet weak var clearMarker: UIButton!\n\n    var navigationViewController: NavigationViewController!\n    var mapboxRouteController: RouteController?\n    var currentLocation: CLLocation!\n    var isFirstRender: Bool = false\n    var styleView = Bundle.main.object(forInfoDictionaryKey: \"VietMapURL\") as! String\n\n    // MARK: Properties\n    var mapView: NavigationMapView? {\n        didSet {\n            oldValue?.removeFromSuperview()\n            if let mapView = mapView {\n                configureMapView(mapView)\n                view.insertSubview(mapView, belowSubview: longPressHintView)\n            }\n        }\n    }\n\n    var waypoints: [Waypoint] = [] {\n        didSet {\n            waypoints.forEach {\n                $0.coordinateAccuracy = -1\n            }\n        }\n    }\n\n    var routes: [Route]? {\n        didSet {\n            startButton.isEnabled = (routes?.count ?? 0 &gt; 0)\n            guard let routes = routes,\n                  let current = routes.first else { mapView?.removeRoutes(); return }\n\n            mapView?.showRoutes(routes)\n            mapView?.showWaypoints(current)\n        }\n    }\n\n    // MARK: Directions Request Handlers\n\n    fileprivate lazy var defaultSuccess: RouteRequestSuccess = { [weak self] (routes) in\n        guard let current = routes.first else { return }\n        self?.clearMarker.isEnabled = true\n        self?.mapView?.removeWaypoints()\n        self?.routes = routes\n        self?.waypoints = current.routeOptions.waypoints\n        self?.longPressHintView.isHidden = true\n    }\n\n    fileprivate lazy var defaultFailure: RouteRequestFailure = { [weak self] (error) in\n        self?.routes = nil //clear routes from the map\n        print(error.localizedDescription)\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        startMapView()\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if #available(iOS 10.0, *) {\n            UNUserNotificationCenter.current().requestAuthorization(options: [.badge, .alert, .sound]) { _,_ in\n                DispatchQueue.main.async {\n                    CLLocationManager().requestWhenInUseAuthorization()\n                }\n            }\n        }\n    }\n\n    func startMapView() {\n        self.routes = nil\n        self.waypoints = []\n        self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n        // Reset the navigation styling to the defaults if we are returning from a presentation.\n        if (presentedViewController != nil) {\n            DayStyle().apply()\n        }\n        Locale.localeVoice = \"vi\"\n    }\n\n    func configureMapView(_ mapView: NavigationMapView) {\n        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        mapView.delegate = self\n        mapView.navigationMapDelegate = self\n        mapView.routeLineColor = UIColor.yellow\n        mapView.userTrackingMode = .follow\n        mapView.showsUserHeadingIndicator = true\n\n        let singleTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\n        mapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(singleTap.require(toFail:))\n        mapView.addGestureRecognizer(singleTap)\n    }\n\n    // MARK: Gesture Recognizer Handlers\n    @objc func didLongPress(tap: UILongPressGestureRecognizer) {\n        guard let mapView = mapView, tap.state == .began else { return }\n\n        if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n            mapView.removeAnnotation(annotation)\n        }\n\n        if waypoints.count &gt; 1 {\n            waypoints = Array(waypoints.suffix(1))\n        }\n\n        let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n        // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n        let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n        waypoints.append(waypoint)\n\n        requestRoute()\n    }\n\n    @IBAction func startButtonPressed(_ sender: Any) {\n        startStyledNavigation()\n    }\n\n    @IBAction func clearMarker(_ sender: Any) {\n        self.clearMarker.isEnabled = false\n        self.startButton.isEnabled = false\n        mapView?.removeRoutes()\n        mapView?.removeWaypoints()\n        waypoints.removeAll()\n        longPressHintView.isHidden = false\n    }\n    // MARK: - Public Methods\n    // MARK: Route Requests\n    func requestRoute() {\n        guard waypoints.count &gt; 0 else { return }\n        guard let mapView = mapView else { return }\n\n        let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n        waypoints.insert(userWaypoint, at: 0)\n\n        let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n        requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n    }\n\n    fileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n        let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n            if let error = potentialError, let fail = failure { return fail(error) }\n            guard let routes = potentialRoutes else { return }\n            return success(routes)\n        }\n\n        Directions.shared.calculate(options, completionHandler: handler)\n    }\n\n    func startStyledNavigation() {\n        guard let route = self.routes?.first else { return }\n        navigationViewController = NavigationViewController(\n            for: route,\n            styles: [NightStyle()],\n            locationManager: NavigationLocationManager()\n        )\n        navigationViewController.delegate = self\n        customStyleMap()\n        configureMapView()\n        addListenerMap()\n        present(navigationViewController, animated: true) {\n            self.mapView?.removeFromSuperview()\n            self.mapView = nil\n        }\n    }\n\n    private func customStyleMap() {\n        navigationViewController.mapView?.styleURL = URL(string: styleView);\n        navigationViewController.mapView?.routeLineColor = UIColor.yellow\n        navigationViewController.mapView?.userTrackingMode = .follow\n        navigationViewController.mapView?.showsUserHeadingIndicator = true\n    }\n\n    private func configureMapView() {\n        navigationViewController.mapView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        navigationViewController.routeController.reroutesProactively = true\n    }\n\n    @objc func progressDidReroute(_ notification: Notification) {\n        if let userInfo = notification.object as? RouteController {\n            navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n        }\n   }\n\n    @objc func progressDidChange(_ notification: NSNotification  ) {\n        let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n        let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n        currentLocation = location\n        setCenterIsFirst(location)\n        addManeuverArrow(routeProgress)\n    }\n\n    private func setCenterIsFirst(_ location: CLLocation) {\n        if !isFirstRender {\n            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {\n                let camera = MGLMapCamera(\n                    lookingAtCenter: location.coordinate,\n                    acrossDistance: 500,\n                    pitch: 75,\n                    heading: location.course\n                )\n                self.navigationViewController.mapView?.setCamera(camera, animated: true)\n            }\n            isFirstRender = true\n        }\n    }\n\n\n    private func addManeuverArrow(_ routeProgress: RouteProgress) {\n        if routeProgress.currentLegProgress.followOnStep != nil {\n            navigationViewController.mapView?.addArrow(route: routeProgress.route, legIndex: routeProgress.legIndex, stepIndex: routeProgress.currentLegProgress.stepIndex + 1)\n        } else {\n            navigationViewController.mapView?.removeArrow()\n        }\n    }\n\n    private func addListenerMap() {\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n    }\n\n    public func cancelListener() {\n        NotificationCenter.default.removeObserver(self, name: .routeControllerDidReroute, object: nil)\n        NotificationCenter.default.removeObserver(self, name: .routeControllerProgressDidChange, object: nil)\n    }\n}\n\n// MARK: - NavigationMapViewDelegate\nextension ViewController: NavigationMapViewDelegate {\n    func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n        guard let routeOptions = routes?.first?.routeOptions else { return }\n        let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n        presentWaypointRemovalActionSheet { _ in\n            self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n        }\n    }\n\n    func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n        guard let routes = routes else { return }\n        guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n        self.routes!.remove(at: index)\n        self.routes!.insert(route, at: 0)\n    }\n\n    private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n        let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n        let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n        let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n        let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n        let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n        let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n        let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n        [remove, cancel].forEach(actionSheet.addAction(_:))\n\n        self.present(actionSheet, animated: true, completion: nil)\n    }\n}\n\n// MARK: - NavigationViewControllerDelegate\nextension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/Flutter/api-plugin/","title":"Api Plugin","text":"<p>A package for using the VietMap APIs in Dart.</p>"},{"location":"sdk-mobile/Flutter/api-plugin/#vietmap-api-flutter-plugin","title":"Vietmap API Flutter plugin","text":"<p>Contact vietmap.vn to register a valid key.</p>"},{"location":"sdk-mobile/Flutter/api-plugin/#getting-started","title":"Getting started","text":"<p>Add library to pubspec.yaml file <pre><code>  vietmap_flutter_plugin: latest_version\n</code></pre></p> <p>Check the latest version at https://pub.dev/packages/vietmap_flutter_plugin</p> <p>or run this command in the terminal to add the library to the project: <pre><code>  flutter pub add vietmap_flutter_plugin\n</code></pre></p>"},{"location":"sdk-mobile/Flutter/api-plugin/#usage","title":"Usage","text":""},{"location":"sdk-mobile/Flutter/api-plugin/#init-plugin","title":"Init plugin","text":"<ul> <li>You must call <code>Vietmap.getInstance(apiKey)</code> before using any other methods. <pre><code>    Vietmap.getInstance('YOUR_API_KEY_HERE');\n</code></pre></li> <li>We provide below methods to use Vietmap APIs: <pre><code>    Vietmap.autocomplete(VietMapAutoCompleteParams(textSearch: 'H\u00e0 N\u1ed9i'));\n\n    Vietmap.geoCode(VietMapAutoCompleteParams(textSearch: 'H\u00e0 N\u1ed9i'));\n\n    Vietmap.reverse(LatLng(21.027763, 105.834160));\n\n    Vietmap.place('Place ID');\n\n    Vietmap.routing(VietMapRoutingParams(points: [\n      LatLng(21.027763, 105.834160),\n      LatLng(21.027763, 105.834160)\n    ]));\n\n    /// This function is used to get the style url of Vietmap,\n    /// which provide the style of the map for VietmapGL plugin.\n    Vietmap.getVietmapStyleUrl();\n</code></pre></li> </ul>"},{"location":"sdk-mobile/Flutter/api-plugin/#additional-information","title":"Additional information","text":"<p>This package is a part of Vietmap API project.</p>"},{"location":"sdk-mobile/Flutter/api-plugin/#troubleshooting","title":"Troubleshooting","text":"<p>Our plugin depend on dio and dartz package with latest version. If our plugin conflict with your current project, please try to use the latest version of these packages or follow the instruction below: <pre><code>dependencies:\n    dio: your_project_version\n    dartz: your_project_version\n\ndependencies_override:\n    dio: our_plugin_version\n    dartz: our_plugin_version\n</code></pre></p> <p>We use dartz package to response the api result. Please check the dartz package to know how to handle the result. <pre><code>var autocompleteData = await Vietmap.autocomplete(VietMapAutoCompleteParams(textSearch: 'H\u00e0 N\u1ed9i'));\nautocompleteData.fold(\n      (Failure left) {\n        // Handle error here\n      },\n      (List&lt;VietmapAutocompleteModel&gt; right) {\n        // Handle success here\n      },\n    );\n</code></pre></p>"},{"location":"sdk-mobile/Flutter/api-plugin/#note-replace-apikey-which-is-provided-by-vietmap-to-all-your_api_key_here-tag-to-the-application-work-normally","title":"Note: Replace apikey which is provided by VietMap to all YOUR_API_KEY_HERE tag to the application work normally","text":"<p>  Email us: maps-api.support@vietmap.vn</p> <p>Vietmap API and price here</p> <p>Contact for support</p> <p>Vietmap API document here</p> <p>Have a bug to report? Open an issue. If possible, include a full log and information which shows the issue.</p> <p>Have a feature request? Open an issue. Tell us what the feature should do and why you want the feature.</p>"},{"location":"sdk-mobile/Flutter/map/","title":"Vietmap Flutter GL - Flutter map SDK","text":"<p>Contact vietmap.vn to register a valid key.</p>"},{"location":"sdk-mobile/Flutter/map/#getting-started","title":"Getting started","text":"<p>Check the latest version at https://pub.dev/packages/vietmap_flutter_gl</p>"},{"location":"sdk-mobile/Flutter/navigation/","title":"Vietmap Flutter GL - Flutter map SDK","text":"<p>Contact vietmap.vn to register a valid key.</p>"},{"location":"sdk-mobile/Flutter/navigation/#getting-started","title":"Getting started","text":"<p>Check the latest version at https://pub.dev/packages/vietmap_flutter_navigation</p>"},{"location":"sdk-mobile/react-native/expo-map/","title":"Vietmap GL SDK for React Native - Expo","text":"<p>A React Native library for building maps with  the Vietmap GL Native SDK for iOS &amp; Android.</p>"},{"location":"sdk-mobile/react-native/expo-map/#get-started","title":"Get started","text":""},{"location":"sdk-mobile/react-native/expo-map/#important","title":"IMPORTANT","text":"<p>If you run below flow, the app will not run with the Expo Go app, you must debug with the development build. The EAS cloud build will run normally.</p>"},{"location":"sdk-mobile/react-native/expo-map/#add-the-package","title":"Add the package","text":"<pre><code>yarn add @vietmap/vietmap-gl-react-native\n</code></pre> <p>Check the latest version at https://www.npmjs.com/package/@vietmap/vietmap-gl-react-native </p>"},{"location":"sdk-mobile/react-native/expo-map/#run-prebuild-to-generate-android-ios-folder","title":"Run prebuild to generate android &amp; iOS folder","text":"<pre><code>npx expo prebuild\n</code></pre>"},{"location":"sdk-mobile/react-native/expo-map/#add-android-and-ios-folders-to-gitignore","title":"Add android and iOS folders to gitignore","text":"<p><pre><code>echo \"/android/\" &gt;&gt; .gitignore &amp;&amp; echo \"/ios/\" &gt;&gt; .gitignore\n</code></pre> Expo cloud build will auto-generate the android &amp; ios folders while run eas build. <pre><code>\"Prebuild\" just generates the native android and ios projects and \napplies any config plugins while doing so.\n\nOn the build server, if the android and ios directories are missing, \nthen the build server will automatically run prebuild to generate them.\n\nSo while prebuild is required for every Expo app, the user \nhas the choice of running it themselves and uploading it to the build servers, \nor letting the build servers generate the native projects.\n\nAlso, if you run `npx expo run` then it will first prebuild and then build using \n`gradlew/xcodebuild`.\n</code></pre></p> <p>See also: https://docs.expo.dev/workflow/continuous-native-generation/</p>"},{"location":"sdk-mobile/react-native/expo-map/#native-configuration","title":"Native configuration","text":"<ul> <li>If you need add some configuration on the native module, follow this guide You can add an object as a child of an ios object in the <code>app.json</code> like so:</li> </ul> <pre><code>\"infoPlist\": {\n  \"NSLocationWhenInUseUsageDescription\": \"When in use permissions description\"\n},\n\"android\":{\n    ...\n    \"permission\":[\"YOUR_PERMISSION_HERE\"],\n    ...\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/expo-map/#show-the-map","title":"Show the map","text":"<p>Add the below code to <code>package.json</code> file <pre><code>    \"@vietmap/vietmap-gl-react-native\": \"^0.0.6\",\n    \"@react-navigation/native\": \"5.7.3\",\n    \"@react-navigation/stack\": \"5.9.0\",\n    \"@types/geojson\": \"^7946.0.14\",\n    \"react-native-elements\": \"3.4.3\",\n    \"react-native-gesture-handler\": \"1.10.3\",\n    \"react-native-safe-area-context\": \"3.3.2\",\n    \"react-native-select-dropdown\": \"3.4.0\",\n    \"react-native-vector-icons\": \"^10.0.3\"\n</code></pre> Run <code>npm i</code> or <code>yarn install</code> to install the packages</p> <p>Add ShowMap.js and Navigation.js files to the root project </p> <p>Add the below code to <code>App.js/App.tsx</code> file <pre><code>Vietmap.setApiKey(null)\nexport default function App() {\n  return (\n    &lt;SafeAreaView style={{flex:1}}&gt;\n      &lt;Navigation /&gt;\n    &lt;/SafeAreaView&gt;\n  );\n}\n</code></pre> <code>Vietmap.setApiKey(null)</code> must be called when the app initial.</p> <p>Run the project</p> <p>For more documentation, follow guide from VietMap React Native document or this repository</p>"},{"location":"sdk-mobile/react-native/map/","title":"Vietmap GL SDK for React Native","text":"<p>A React Native library for building maps with  the Vietmap GL Native SDK for iOS &amp; Android.</p>"},{"location":"sdk-mobile/react-native/map/#get-started","title":"Get started","text":"<p>Install package:</p> <p>Using <code>npm</code>: <pre><code>    npm i @vietmap/vietmap-gl-react-native\n</code></pre> Using <code>yarn</code>: <pre><code>    yarn add @vietmap/vietmap-gl-react-native\n</code></pre> Check the latest version at https://www.npmjs.com/package/@vietmap/vietmap-gl-react-native</p>"},{"location":"sdk-mobile/react-native/map/#documentation","title":"Documentation","text":"<p>We've created a demo project for <code>Vietmap React-Native GL library</code>, which contains sample code for the main functions of the library here.</p> <p>If you're using the <code>Expo project</code>, follow the guide from Expo install document or this github project.</p>"},{"location":"sdk-mobile/react-native/map/#show-the-map","title":"Show the map","text":"<p>You must call <code>Vietmap.setApiKey(YOUR_API_KEY_HERE)</code> before using the map component. You can get an API key from the Vietmap API</p> <pre><code>    Vietmap.setApiKey(YOUR_API_KEY_HERE);\n</code></pre> <p><pre><code>    const SimpleMap = () =&gt; {\n    return (\n        &lt;View style={styles.page}&gt;\n            &lt;View style={styles.container}&gt;\n                &lt;VietmapGL.MapView styleURL={`https://maps.vietmap.vn/api/maps/light/styles.json?apikey=${YOUR_API_KEY_HERE}`} style={{flex: 1}}&gt;\n                    &lt;VietmapGL.Camera\n                        zoomLevel={10}\n                        followUserLocation={false}\n                        centerCoordinate={[106.800106, 10.704619]}\n                    /&gt;\n                &lt;/VietmapGL.MapView&gt;\n            &lt;/View&gt;\n        &lt;/View&gt;\n    );\n};\n</code></pre> The complete example code can be found here</p> <p>VIETMAP now provides many types of custom maps</p> Name Description Raster The map data is typically stored as raster images, which are then divided into a grid of small tiles, each containing a specific portion of the map. Raster url <code>https://maps.vietmap.vn/api/maps/raster/styles.json?apikey=YOUR_API_KEY_HERE</code> Vector Vector tiles are small packages of vector data that can be downloaded and rendered on a client device, such as a web browser or mobile app. The vector data can include information such as street names, building footprints, and topographic features. Vector url <code>https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE</code> Satellite Satellite imagery consists of photographs of Earth or other planets made by means of artificial satellites. Hybrid Hybrid maps are a combination of satellite imagery overlaid with vector data that provides a visual reference for locations and features. <p>Read more about Raster and Vector</p> <p>Email us to get the Satellite and Hybrid map style URL.</p>"},{"location":"sdk-mobile/react-native/map/#map-interactions","title":"Map Interactions","text":"<p>The VietmapGL Maps Flutter SDK allows you to define interactions that you can activate on the map to enable gestures and click events. The following interactions are supported</p>"},{"location":"sdk-mobile/react-native/map/#zoom-controls","title":"Zoom Controls","text":"<p>The map supports the familiar two-finger pinch and zooms to change the zoom level as well as double tap to zoom in. Set zoom to 4 for country-level display and 18 for house number display. In this SDK the camera position plays an important role</p> <p>And following operations can be performed using the CameraPosition</p>"},{"location":"sdk-mobile/react-native/map/#target","title":"Target","text":"<p>The target is a single latitude and longitude coordinate that the camera centers it on. Changing the camera's target will move the camera to the inputted coordinates. The target is a LatLng object. The target coordinate is always at the center of the viewport.</p>"},{"location":"sdk-mobile/react-native/map/#tilt","title":"Tilt","text":"<p>Tilt is the camera's angle from the nadir (directly facing the Earth) and uses unit degrees. The camera's minimum (default) tilt is 0 degrees, and the maximum tilt is 60. Tilt levels use six decimal points of precision, which enables you to restrict/set/lock a map's bearing with extreme precision.</p> <p>The map camera tilt can also adjust by placing two fingertips on the map and moving both fingers up and down in parallel at the same time or</p>"},{"location":"sdk-mobile/react-native/map/#bearing","title":"Bearing","text":"<p>Bearing represents the direction that the camera is pointing in and is measured in degrees clockwise from north.</p> <p>The camera's default bearing is 0 degrees (i.e. \"true north\") causing the map compass to hide until the camera bearing becomes a non-zero value. Bearing levels use six decimal point precision, which enables you to restrict/set/lock a map's bearing with extreme precision. In addition to programmatically adjusting the camera bearing, the user can place two fingertips on the map and rotate their fingers.</p>"},{"location":"sdk-mobile/react-native/map/#zoom","title":"Zoom","text":"<p>Zoom controls the scale of the map and consumes any value between 0 and 22. At zoom level 0, the viewport shows continents and other world features. A middle value of 11 will show city-level details. At a higher zoom level, the map will begin to show buildings and points of interest. The camera can zoom in the following ways:</p> <ul> <li>Pinch motion two fingers to zoom in and out.</li> <li>Quickly tap twice on the map with a single finger to zoom in.</li> <li>Quickly tap twice on the map with a single finger and hold your finger down on the screen after the second tap.</li> <li>Then slide the finger up to zoom out and down to zoom out.</li> </ul>"},{"location":"sdk-mobile/react-native/map/#move-camera","title":"Move camera","text":"<p>SDK allows various methods to move, and animate the camera to a particular location : - Create new location variable in state <pre><code>    this.state = {\n        location: [106.785226, 10.667552]\n    }\n</code></pre> - Add the Camera to MapView <pre><code>    &lt;Vietmap.MapView \n    tintColor={'#000'}\n    styleURL={vietmapStyle}\n    style={styles.map}&gt;\n        &lt;Vietmap.Camera\n            zoomLevel={6}\n            animationMode={\"easeTo\"} // flyTo, moveTo, linearTo, easeTo\n            animationDuration={6000}\n            centerCoordinate={this.state.location}\n        /&gt;\n        &lt;Vietmap.UserLocation /&gt;\n    &lt;/Vietmap.MapView&gt;\n</code></pre> - Create a function to move camera <pre><code>    flyToNewLocationFunction() {\n        this.setState({ location: [105.838071, 21.022425]});\n    }\n</code></pre></p>"},{"location":"sdk-mobile/react-native/map/#map-events","title":"Map Events","text":""},{"location":"sdk-mobile/react-native/map/#map-click","title":"Map Click","text":"<p>If you want to respond to a user tapping on a point on the map, you can use an onMapClick callback.</p> <p>It sets a callback that's invoked when the user clicks on the map: <pre><code>    &lt;VietmapGL.MapView\n        styleURL={vietmapStyleUrl} \n        style={{flex: 1}}\n        onPress={onPressFunctionHere}&gt;   \n            ...\n    &lt;/VietmapGL.MapView&gt;\n</code></pre></p>"},{"location":"sdk-mobile/react-native/map/#map-long-click","title":"Map Long Click","text":"<ul> <li>Sets a callback that's invoked when the user long clicks on the map view. <pre><code>    &lt;VietmapGL.MapView\n        styleURL={vietmapStyleUrl} \n        style={{flex: 1}}\n        onLongPress={onLongPressFunctionHere}&gt;\n            ...\n    &lt;/VietmapGL.MapView&gt;\n</code></pre></li> </ul>"},{"location":"sdk-mobile/react-native/map/#on-map-rendered-callback","title":"On Map Rendered callback","text":"<ul> <li>Sets a callback that's invoked when the map is completely rendered.</li> <li>Encourage this callback to call some action on the initial, after the map is completely loaded <pre><code>    &lt;VietmapGL.MapView\n        styleURL={vietmapStyleUrl} \n        style={{flex: 1}}\n        onDidFinishRenderingMap={handleOnMapFinishRenderHere}\n        onDidFinishLoadingMap={handleOnMapFinishLoadingHere } &gt;\n            ...\n    &lt;/VietmapGL.MapView&gt;\n</code></pre></li> </ul>"},{"location":"sdk-mobile/react-native/map/#map-overlays","title":"Map Overlays","text":""},{"location":"sdk-mobile/react-native/map/#add-marker-marked-a-point-in-the-map","title":"Add marker (Marked a point in the map)","text":"<p><pre><code>const vietmapLogo: string = 'YOUR_IMAGE_URL_HERE';\n</code></pre> <pre><code>    &lt;Vietmap.MapView\n        styleURL={vietmapStyle}\n        style={{flex: 1}}\n        onPress={handleOnMapClick}&gt;\n        &lt;Vietmap.Camera\n        zoomLevel={10}\n        followUserLocation={false}\n        centerCoordinate={[106.800106, 10.704619]}\n        /&gt;\n        &lt;Vietmap.ShapeSource\n        id=\"marker-source\"\n        shape={{\n            type: 'Feature',\n            geometry: {\n            type: 'Point',\n            coordinates: [106.800106, 10.704619],\n            },\n        }}&gt;\n        &lt;Vietmap.SymbolLayer\n            id=\"marker-layer\"\n            style={{\n            iconImage: vietmapLogo,\n            iconSize: 0.2,\n            }}\n        /&gt;\n        &lt;/Vietmap.ShapeSource&gt;\n    &lt;/Vietmap.MapView&gt;\n</code></pre></p>"},{"location":"sdk-mobile/react-native/map/#add-a-linepolyline-a-line-connects-2-points-on-the-map","title":"Add a Line/Polyline (A line connects 2 points on the map)","text":"<ul> <li>Define a list of coordinates to draw the line <pre><code>const geoJsonFeature = {\n  type: 'Feature',\n  properties: {},\n  geometry: {\n    type: 'LineString',\n    coordinates: [\n      [106.708654, 1.760325],\n      [107.708654, 1.760325],\n      [107.308654, 2.760325],\n      [108.708654, 3.660325],\n      [108.508654, 3.760325],\n      [109.208654, 4.560325],\n      [109.708654, 4.760325],\n      [110.508654, 5.760325],\n      [110.308654, 5.760325],\n      [111.408654, 6.760325],\n      [111.708654, 6.960325],\n      [112.508654, 7.760325],\n      [112.908654, 7.760325],\n      [113.708654, 8.160325],\n      [113.7908654, 8.760325],\n      [114.2708654, 9.760325],\n      [114.08654, 9.360325],\n      [115.408654, 10.760325],\n      [115.708654, 10.760325],\n      [116.708654, 11.260325],\n      [116.308654, 11.760325],\n      [117.508654, 12.260325],\n      [117.708654, 12.760325],\n      [118.408654, 13.860325],\n      [118.108654, 13.760325],\n    ],\n  },\n};\n</code></pre></li> <li>Draw line to the map <pre><code>    &lt;Vietmap.MapView \n    styleURL={vietmapStyle} \n    style={{flex: 1}}&gt;\n        &lt;Vietmap.Camera\n        zoomLevel={4}\n        followUserLocation={false}\n        centerCoordinate={[112.908654, 7.760325]}\n        /&gt;\n        &lt;Vietmap.ShapeSource id=\"route-source\" shape={geoJsonFeature}&gt;\n            &lt;Vietmap.LineLayer\n                id=\"route-layer\"\n                style={{\n                lineColor: 'steelblue',\n                lineWidth: 4,\n                lineJoin: 'round',\n                lineCap: 'round',\n                }}\n            /&gt;\n        &lt;/Vietmap.ShapeSource&gt;\n    &lt;/Vietmap.MapView&gt;\n</code></pre></li> </ul>"},{"location":"sdk-mobile/react-native/map/#add-a-fillpolygon","title":"Add a Fill/Polygon","text":"<pre><code>    &lt;Vietmap.MapView styleURL={vietmapStyle} style={{flex: 1}}&gt;\n        &lt;Vietmap.Camera\n        zoomLevel={3}\n        followUserLocation={false}\n        centerCoordinate={[107.708654, 1.760325]}\n        /&gt;\n        &lt;Vietmap.ShapeSource id=\"route-source\" shape={geoJsonFeature}&gt;\n        &lt;Vietmap.FillLayer id=\"fill-layer\" /&gt;\n        &lt;/Vietmap.ShapeSource&gt;\n    &lt;/Vietmap.MapView&gt;\n</code></pre>"},{"location":"sdk-mobile/react-native/map/#find-a-route-between-2-or-more-points","title":"Find a route between 2 or more points","text":"<ul> <li>We've created a package to support finding a route between 2 or more points and other features, you can find the vietmap-api package to use it.</li> </ul> <p>Demo code here</p> <p>Demo code for expo here</p> <p>  Email us: maps-api.support@vietmap.vn</p> <p>Contact for support</p> <p>Vietmap API document here</p> <p>Have a bug to report? Open an issue. If possible, include a full log and information that shows the issue. Have a feature request? Open an issue. Tell us what the feature should do and why you want the feature.</p>"},{"location":"sdk-mobile/react-native/navigation/","title":"Vietmap GL SDK for React Native - React Native Navigation SDK","text":"<p>Contact vietmap.vn to register a valid key.</p>"},{"location":"sdk-mobile/react-native/navigation/#getting-started","title":"Getting started","text":"<p>Check the latest version at https://www.npmjs.com/package/@vietmap/vietmap-react-native-navigation</p>"},{"location":"sdk-mobile/react-native/react-plugin/","title":"Api Plugin","text":"<p>A package for using the VietMap APIs in JS/TS.</p>"},{"location":"sdk-mobile/react-native/react-plugin/#vietmap-api-plugin","title":"Vietmap API plugin","text":""},{"location":"sdk-mobile/react-native/react-plugin/#installation","title":"Installation","text":"<p>With npm:</p> <pre><code>npm install --save @vietmap/vietmap-api\n</code></pre> <p>With Yarn:</p> <pre><code>yarn add @vietmap/vietmap-api\n</code></pre> <p>With pnpm:</p> <pre><code>pnpm add @vietmap/vietmap-api\n</code></pre> <p>Check the latest version at https://www.npmjs.com/package/@vietmap/vietmap-api </p>"},{"location":"sdk-mobile/react-native/react-plugin/#usage","title":"Usage","text":""},{"location":"sdk-mobile/react-native/react-plugin/#import-vietmapapi","title":"Import VietmapApi:","text":"<pre><code>import { VietmapApi } from '@vietmap/vietmap-api';\n</code></pre> <p>Create an instance using apiKey:</p> <pre><code>const VietmapApi = new VietmapApi({ apiKey: VIETMAP_API_KEY })\n</code></pre>"},{"location":"sdk-mobile/react-native/react-plugin/#examples","title":"Examples","text":""},{"location":"sdk-mobile/react-native/react-plugin/#reverse","title":"Reverse","text":"<p>Updating Reverse 3.0 API is a valuable resource for developers who want to incorporate location search features into their applications while achieving optimal performance. With its intelligent search algorithms and techniques, this latest version can swiftly deliver precise search results for users. This API is a powerful tool that can help enhance the user experience of location-based applications.</p> <pre><code>const reverseResponse = await vietmapApi.reverse({\n  latitude: 35.72379,\n  longitude: 51.33417,\n});\n</code></pre>"},{"location":"sdk-mobile/react-native/react-plugin/#autocomplete","title":"Autocomplete","text":"<p>Updating Autocomplete 3.0 API is a valuable resource that allows developers to integrate autocomplete functionality into their applications. This API is designed to help users quickly find and select items from a large set of options by suggesting potential matches as they type.</p> <p>The API is built on a machine-learning model that analyzes user input and suggests potential matches based on the context of the search. This model can be updated in real-time, allowing the API to continuously improve its suggestions as more data becomes available.</p> <pre><code>const autoCompleteSearchResponseList = await vietmapApi.autoCompleteSearch(\n  new SearchRequest({ text: 'Vietmap' }),\n);\n</code></pre>"},{"location":"sdk-mobile/react-native/react-plugin/#search-geocode","title":"Search - Geocode","text":"<p>Updating Geocode 3.0 API is a powerful tool for developers to integrate location search functionality into their applications with optimized performance. Additionally, this latest version utilizes intelligent search algorithms and methods to provide accurate and speedy search results for users. <pre><code>const searchResponseList = await vietmapApi.search(\n  new SearchRequest({ text: 'Vietmap' }),\n);\n</code></pre></p>"},{"location":"sdk-mobile/react-native/react-plugin/#routing","title":"Routing","text":"<p>A Route Maps API is a feature provided by VIETMAP that allows developers to calculate and display the optimal route between two or more locations on a map. With a Route Maps API, developers can specify the start and end points of a journey, along with any additional constraints such as preferred mode of transportation, and retrieve a detailed route that can be displayed on a map. The API may also provide information such as the total distance, estimated travel time, and turn-by-turn directions. Developers can use Route Maps APIs to create applications that help with navigation, transportation planning, and logistics management.</p> <pre><code>    const res = await vietmapApi.route(\n      [[10.79628438955497,106.70592293472612], [10.801891047584164,106.70660958023404]],\n      new RouteRequest({ vehicle: 'car',apikey: envVariables.VIETMAP_API_KEY,points_encoded: true, optimize:true}),\n    ) \n</code></pre>"},{"location":"sdk-mobile/react-native/react-plugin/#polyline-decode","title":"Polyline decode","text":"<p>The routing API will respond to the route path in the encrypted string.  You must use the Polyline decode to convert it to <code>LatLng</code>.  <pre><code>  const polyline = new Polyline()\n  const listLatLng = polyline.decode('c_hjS}s{`A{C}`@',5)\n</code></pre></p> <p> </p> <p>  Email us: maps-api.support@vietmap.vn</p> <p>Contact for support</p> <p>Vietmap API document here</p> <p>Have a bug to report? Open an issue. If possible, include a full log and information that shows the issue. Have a feature request? Open an issue. Tell us what the feature should do and why you want the feature.</p>"},{"location":"sdk-mobile/react-native/docs/Annotation/","title":"Annotation","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#_1","title":"Annotation","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#_2","title":"Annotation","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#props","title":"props","text":"Prop Type Default Required Description id <code>string</code> <code>none</code> <code>true</code> animated <code>boolean</code> <code>false</code> <code>false</code> animationDuration <code>number</code> <code>1000</code> <code>false</code> coordinates <code>Array</code> <code>none</code> <code>false</code> children <code>ReactElement | ReactElement[]</code> <code>none</code> <code>false</code> style <code>object</code> <code>none</code> <code>false</code> icon <code>string | number | object</code> <code>none</code> <code>false</code> animationEasingFunction <code>EasingFunction = (value: number)</code> <code>Easing.linear</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/Annotation/#methods","title":"methods","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#onpressevent","title":"onPress(event)","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#arguments","title":"arguments","text":"Name Type Required Description <code>event</code> <code>OnPressEvent</code> <code>Yes</code> undefined"},{"location":"sdk-mobile/react-native/docs/Annotation/#symbolstyle","title":"symbolStyle()","text":""},{"location":"sdk-mobile/react-native/docs/Annotation/#arguments_1","title":"arguments","text":"Name Type Required Description"},{"location":"sdk-mobile/react-native/docs/Annotations/","title":"Annotations","text":"<p>Comparsion of various annotations available in Vietmap React Native:</p> Feature SymbolLayer PointAnnotation MarkerView CircleLayer Can use images \u2713 RN Views as childern iOS: static iOS: interactive  android: static interactive Interactions click iOS: full  android: click &amp; drag &amp; callout supports full interactivity in the sense that inside MarkerViews one can place any RN View, which can be interacted with. Not to be misunderstood with drag n drop interactivity. click Control Z-index \u2713 iOS: always on top, android: n/a always on top \u2713 Clustering \u2713 \u2713 Style with expressions \u2713 \u2713"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/","title":"BackgroundLayer","text":""},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#_1","title":"BackgroundLayer","text":""},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundlayer","title":"BackgroundLayer","text":""},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#props","title":"Props","text":"Prop Type Default Required Description style <code>BackgroundLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#styles","title":"Styles","text":"<ul> <li>visibility</li> <li>backgroundColor</li> <li>backgroundPattern</li> <li>backgroundOpacity</li> </ul>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#visibility","title":"Visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundcolor","title":"BackgroundColor","text":"<p>Name <code>backgroundColor</code></p> <p>Description The color with which the background will be drawn.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Disabled By <code>backgroundPattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundcolortransition","title":"BackgroundColorTransition","text":"<p>Name</p> <p><code>backgroundColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s backgroundColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundpattern","title":"BackgroundPattern","text":"<p>Name <code>backgroundPattern</code></p> <p>Description Name of image in sprite to use for drawing an image background. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoomDependent expressions will be evaluated only at integer zoom levels.</p> <p>Type <code>resolvedImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundpatterntransition","title":"BackgroundPatternTransition","text":"<p>Name</p> <p><code>backgroundPatternTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s backgroundPattern propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/BackgroundLayer/#backgroundopacity","title":"BackgroundOpacity","text":"<p>Name <code>backgroundOpacity</code></p> <p>Description The opacity at which the background will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p> <p>Name</p> <p><code>backgroundOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s backgroundOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/Callout/","title":"Callout","text":""},{"location":"sdk-mobile/react-native/docs/Callout/#_1","title":"Callout","text":""},{"location":"sdk-mobile/react-native/docs/Callout/#callout","title":"Callout","text":"<ul> <li>Callout that displays information about a selected annotation near the annotation.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/Callout/#props","title":"Props","text":"Prop Type Default Required Description title <code>string</code> <code>none</code> <code>false</code> String that get's displayed in the default callout. style <code>ViewStyle</code> <code>none</code> <code>false</code> Style property for the Animated.View wrapper, apply animations to this containerStyle <code>ViewStyle</code> <code>none</code> <code>false</code> Style property for the native RCTMGLCallout container, set at your own risk. contentStyle <code>ViewStyle</code> <code>none</code> <code>false</code> Style property for the content bubble. tipStyle <code>ViewStyle</code> <code>none</code> <code>false</code> Style property for the triangle tip under the content. textStyle <code>ViewStyle</code> <code>none</code> <code>false</code> Style property for the title in the content bubble."},{"location":"sdk-mobile/react-native/docs/Camera/","title":"Camera","text":""},{"location":"sdk-mobile/react-native/docs/Camera/#_1","title":"Camera","text":""},{"location":"sdk-mobile/react-native/docs/Camera/#_2","title":"Camera","text":""},{"location":"sdk-mobile/react-native/docs/Camera/#props","title":"Props","text":"Prop Type Default Required Description centerCoordinate <code>GeoJSON.Position</code> <code>none</code> <code>false</code> The location on which the map should center. Input with [lng, lat] format. bounds <code>CameraBoundsWithPadding</code> <code>none</code> <code>false</code> The corners of a box around which the map should bound. Contains padding props for backwardscompatibility; the root <code>padding</code> prop should be used instead. heading <code>number</code> <code>none</code> <code>false</code> The heading (orientation) of the map. pitch <code>number</code> <code>none</code> <code>false</code> The pitch of the map. zoomLevel <code>number</code> <code>none</code> <code>false</code> The zoom level of the map. padding <code>CameraPadding</code> <code>none</code> <code>false</code> The viewport padding in points. animationDuration <code>number</code> <code>2000</code> <code>false</code> The duration the map takes to animate to a new configuration. animationMode <code>'flyTo' | 'easeTo' | 'linearTo' | 'moveTo'</code> <code>'easeTo'</code> <code>false</code> The easing or path the camera uses to animate to a new configuration. allowUpdates <code>boolean</code> <code>true</code> <code>false</code> If false, the camera will not send any props to the native module. Intended to be used to prevent unnecessary tile fetching and improve performance when the map is not visible. Defaults to true. defaultSettings <code>CameraStop</code> <code>none</code> <code>false</code> Default view settings applied on camera minZoomLevel <code>number</code> <code>none</code> <code>false</code> The minimun zoom level of the map maxZoomLevel <code>number</code> <code>none</code> <code>false</code> The maximun zoom level of the map maxBounds <code>CameraBounds</code> <code>none</code> <code>false</code> Restrict map panning so that the center is within these bounds followUserLocation <code>boolean</code> <code>none</code> <code>false</code> Should the map orientation follow the user's. followUserMode <code>UserTrackingMode</code> <code>none</code> <code>false</code> The mode used to track the user location on the map. One of; \"normal\", \"compass\", \"course\". Each mode string is also available as a member on the <code>VietmapGL.UserTrackingModes</code> object. <code>Follow</code> (normal), <code>FollowWithHeading</code> (compass), <code>FollowWithCourse</code> (course). NOTE: <code>followUserLocation</code> must be set to <code>true</code> for any of the modes to take effect. Example followZoomLevel <code>number</code> <code>none</code> <code>false</code> The zoomLevel on map while followUserLocation is set to <code>true</code> followPitch <code>number</code> <code>none</code> <code>false</code> The pitch on map while followUserLocation is set to <code>true</code> followHeading <code>number</code> <code>none</code> <code>false</code> The heading on map while followUserLocation is set to <code>true</code> triggerKey <code>string | number</code> <code>none</code> <code>false</code> Manually update the camera - helpful for when props did not update, however you still want the camera to move onUserTrackingModeChange <code>func</code> <code>none</code> <code>false</code> signature:<code>(event:VietmapGLEvent) =&gt; void</code>"},{"location":"sdk-mobile/react-native/docs/Camera/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/Camera/#fitbounds","title":"FitBounds","text":"<p><pre><code>  fitBounds(northEastCoordinates, southWestCoordinates, [padding], [animationDuration])\n</code></pre> Map camera transitions to fit provided bounds</p>"},{"location":"sdk-mobile/react-native/docs/Camera/#arguments","title":"Arguments","text":"Name Type Required Description <code>northEastCoordinates</code> <code>Array</code> <code>Yes</code> North east coordinate of bound <code>southWestCoordinates</code> <code>Array</code> <code>Yes</code> South west coordinate of bound <code>padding</code> <code>Number</code> <code>No</code> Camera padding for bound <code>animationDuration</code> <code>Number</code> <code>No</code> Duration of camera animation <pre><code>this.camera.fitBounds([lng, lat], [lng, lat])\nthis.camera.fitBounds([lng, lat], [lng, lat], 20, 1000) // padding for all sides\nthis.camera.fitBounds([lng, lat], [lng, lat], [verticalPadding, horizontalPadding], 1000)\nthis.camera.fitBounds([lng, lat], [lng, lat], [top, right, bottom, left], 1000)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/Camera/#flyto","title":"FlyTo","text":"<p><pre><code>  flyTo(coordinates[, animationDuration])\n</code></pre> Map camera will fly to new coordinate</p>"},{"location":"sdk-mobile/react-native/docs/Camera/#arguments_1","title":"Arguments","text":"Name Type Required Description <code>coordinates</code> <code>GeoJSON.Position</code> <code>Yes</code> Coordinates that map camera will jump too <code>animationDuration</code> <code>Number</code> <code>No</code> Duration of camera animation <pre><code>this.camera.flyTo([lng, lat])\nthis.camera.flyTo([lng, lat], 12000)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/Camera/#moveto","title":"MoveTo","text":"<p><pre><code>  moveTo(coordinates[, animationDuration])\n</code></pre> Map camera will move to new coordinate at the same zoom level</p>"},{"location":"sdk-mobile/react-native/docs/Camera/#arguments_2","title":"Arguments","text":"Name Type Required Description <code>coordinates</code> <code>GeoJSON.Position</code> <code>Yes</code> Coordinates that map camera will move too <code>animationDuration</code> <code>Number</code> <code>No</code> Duration of camera animation <pre><code>this.camera.moveTo([lng, lat], 200) // eases camera to new location based on duration\nthis.camera.moveTo([lng, lat]) // snaps camera to new location without any easing\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/Camera/#zoomto","title":"ZoomTo","text":"<pre><code>  zoomTo(zoomLevel[, animationDuration])\n</code></pre> <p>Map camera will zoom to specified level</p>"},{"location":"sdk-mobile/react-native/docs/Camera/#arguments_3","title":"Arguments","text":"Name Type Required Description <code>zoomLevel</code> <code>number</code> <code>Yes</code> Zoom level that the map camera will animate too <code>animationDuration</code> <code>Number</code> <code>No</code> Duration of camera animation <pre><code>this.camera.zoomTo(16)\nthis.camera.zoomTo(16, 100)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/Camera/#set-camera","title":"Set Camera","text":"<p><pre><code>  setCamera([config])\n</code></pre> Map camera will perform updates based on provided config. Advanced use only!</p>"},{"location":"sdk-mobile/react-native/docs/Camera/#arguments_4","title":"Arguments","text":"Name Type Required Description <code>config</code> <code>Object</code> <code>No</code> Camera configuration <pre><code>this.camera.setCamera({\n  centerCoordinate: [lng, lat],\n  zoomLevel: 16,\n  animationDuration: 2000,\n})\n\nthis.camera.setCamera({\n  stops: [\n    { pitch: 45, animationDuration: 200 },\n    { heading: 180, animationDuration: 300 },\n  ]\n})\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/","title":"CircleLayer","text":""},{"location":"sdk-mobile/react-native/docs/CircleLayer/#_1","title":"CircleLayer","text":""},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlelayer","title":"CircleLayer","text":"<ul> <li>CircleLayer is a style layer that renders one or more filled circles on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#props","title":"Props","text":"Prop Type Default Required Description style <code>CircleLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>Vietmap.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#styles","title":"Styles","text":"<ul> <li>circleSortKey</li> <li>visibility</li> <li>circleRadius</li> <li>circleColor</li> <li>circleBlur</li> <li>circleOpacity</li> <li>circleTranslate</li> <li>circleTranslateAnchor</li> <li>circlePitchScale</li> <li>circlePitchAlignment</li> <li>circleStrokeWidth</li> <li>circleStrokeColor</li> <li>circleStrokeOpacity</li> </ul>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlesortkey","title":"CircleSortKey","text":"<p>Name <code>circleSortKey</code></p> <p>Description Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> <p>Type <code>number</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#visibility","title":"Visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleradius","title":"CircleRadius","text":"<p>Name <code>circleRadius</code></p> <p>Description Circle radius.</p> <p>Type <code>number</code></p> <p>Default Value <code>5</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleradiustransition","title":"CircleRadiusTransition","text":"<p>Name</p> <p><code>circleRadiusTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleRadius propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlecolor","title":"CircleColor","text":"<p>Name <code>circleColor</code></p> <p>Description The fill color of the circle.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlecolortransition","title":"CircleColorTransition","text":"<p>Name</p> <p><code>circleColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleblur","title":"CircleBlur","text":"<p>Name <code>circleBlur</code></p> <p>Description Amount to blur the circle. 1 blurs the circle such that only the centerpoint is full opacity.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleblurtransition","title":"CircleBlurTransition","text":"<p>Name</p> <p><code>circleBlurTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleBlur propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleopacity","title":"CircleOpacity","text":"<p>Name <code>circleOpacity</code></p> <p>Description The opacity at which the circle will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circleopacitytransition","title":"CircleOpacityTransition","text":"<p>Name</p> <p><code>circleOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circletranslate","title":"CircleTranslate","text":"<p>Name <code>circleTranslate</code></p> <p>Description The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circletranslatetransition","title":"CircleTranslateTransition","text":"<p>Name</p> <p><code>circleTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circletranslateanchor","title":"CircleTranslateAnchor","text":"<p>Name <code>circleTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>circleTranslate</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - The circle is translated relative to the map. viewport - The circle is translated relative to the viewport.</p> <p>Requires <code>circleTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlepitchscale","title":"CirclePitchScale","text":"<p>Name <code>circlePitchScale</code></p> <p>Description Controls the scaling behavior of the circle when the map is pitched.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - Circles are scaled according to their apparent distance to the camera. viewport - Circles are not scaled.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlepitchalignment","title":"CirclePitchAlignment","text":"<p>Name <code>circlePitchAlignment</code></p> <p>Description Orientation of circle when map is pitched.</p> <p>Type <code>enum</code></p> <p>Default Value <code>viewport</code></p> <p>Supported Values map - The circle is aligned to the plane of the map. viewport - The circle is aligned to the plane of the viewport.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokewidth","title":"CircleStrokeWidth","text":"<p>Name <code>circleStrokeWidth</code></p> <p>Description The width of the circle's stroke. Strokes are placed outside of the <code>circleRadius</code>.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokewidthtransition","title":"CircleStrokeWidthTransition","text":"<p>Name</p> <p><code>circleStrokeWidthTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleStrokeWidth propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokecolor","title":"CircleStrokeColor","text":"<p>Name <code>circleStrokeColor</code></p> <p>Description The stroke color of the circle.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokecolortransition","title":"CircleStrokeColorTransition","text":"<p>Name</p> <p><code>circleStrokeColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleStrokeColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokeopacity","title":"CircleStrokeOpacity","text":"<p>Name <code>circleStrokeOpacity</code></p> <p>Description The opacity of the circle's stroke.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/CircleLayer/#circlestrokeopacitytransition","title":"CircleStrokeOpacityTransition","text":"<p>Name</p> <p><code>circleStrokeOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s circleStrokeOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/","title":"CustomHttpHeaders","text":""},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#custom-http-headers","title":"Custom http headers","text":""},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#intro","title":"Intro","text":"<p>Custom headers are implemented using OkHttp interseptor for android and method swizzling for iOS.</p> <p>Method swizzling is done on the <code>[NSMutableURLRequest requestWithURL:]</code> to allow adding headers during runtime.</p>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#prerequisites","title":"Prerequisites","text":""},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#android","title":"Android","text":"<p>None</p>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#ios","title":"IOS","text":"<p>To enable this on iOS you need to call <code>[[MGLCustomHeaders sharedInstance] initHeaders]</code> pretty early in the lifecycle of the application. This will swizzle the custom method. Suggested location is <code>[AppDelegate application: didFinishLaunchingWithOptions:]</code></p>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#working-example-appdelegatem","title":"Working example (AppDelegate.m)","text":"<pre><code>// (1) Include the header file\n#import \"MGLCustomHeaders.h\"\n\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n  RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:launchOptions];\n  RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                   moduleName:@\"SampleApp\"\n                                            initialProperties:nil];\n  // (2) Init headers, add swizzle method\n  [[MGLCustomHeaders sharedInstance] initHeaders];\n  // (3*) Optionally you can add some global headers here\n  [[MGLCustomHeaders sharedInstance] addHeader:@\"IP\" forHeaderName:@\"X-For-Real\"];\n\n  ...\n  return YES;\n}\n\n...\n\n@end\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#sending-custom-http-headers-with-the-tile-requests","title":"Sending custom http headers with the tile requests","text":"<p>You can configure sending of custom http headers to your tile server. This is to support custom authentication or custom metadata which can't be included in the url.</p> <p>You can add and remove headers at runtime.</p>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#to-add-a-header","title":"To add a header","text":"<pre><code>    Vietmap.addCustomHeader('Authorization', '{auth header}');\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#to-remove-a-header","title":"To remove a header","text":"<pre><code>    Vietmap.removeCustomHeader('Authorization');\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/CustomHttpHeaders/#working-example","title":"Working example","text":"<pre><code>export default class HelloWorldApp extends Component {\n  componentDidMount () {\n    Vietmap.addCustomHeader('Authorization', '{auth header}');\n  }\n\n  render () {\n    Vietmap.addCustomHeader('X-Some-Header', 'my-value');\n    return (\n      &lt;View style={styles.page}&gt;\n        &lt;View style={styles.container}&gt;\n          &lt;Vietmap.MapView\n            style={styles.map}\n            styleURL={STYLE_URL}/&gt;\n        &lt;/View&gt;\n      &lt;/View&gt;\n    );\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/","title":"FillExtrusionLayer","text":""},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#_1","title":"FillExtrusionLayer","text":""},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionlayer","title":"FillExtrusionLayer","text":"<ul> <li>FillExtrusionLayer is a style layer that renders one or more 3D extruded polygons on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#props","title":"props","text":"Prop Type Default Required Description style <code>FillExtrusionLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>Vietmap.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#styles","title":"styles","text":"<ul> <li>visibility</li> <li>fillExtrusionOpacity</li> <li>fillExtrusionColor</li> <li>fillExtrusionTranslate</li> <li>fillExtrusionTranslateAnchor</li> <li>fillExtrusionPattern</li> <li>fillExtrusionHeight</li> <li>fillExtrusionBase</li> </ul>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#visibility","title":"Visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionopacity","title":"FillExtrusionOpacity","text":"<p>Name <code>fillExtrusionOpacity</code></p> <p>Description The opacity of the entire fill extrusion layer. This is rendered on a perLayer, not perFeature, basis, and dataDriven styling is not available.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionopacitytransition","title":"FillExtrusionOpacityTransition","text":"<p>Name</p> <p><code>fillExtrusionOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusioncolor","title":"FillExtrusionColor","text":"<p>Name <code>fillExtrusionColor</code></p> <p>Description The base color of the extruded fill. The extrusion's surfaces will be shaded differently based on this color in combination with the root <code>light</code> settings. If this color is specified as <code>rgba</code> with an alpha component, the alpha component will be ignored; use <code>fillExtrusionOpacity</code> to set layer opacity.</p> <p>Type <code>color</code> Default Value <code>#000000</code></p> <p>Disabled By <code>fillExtrusionPattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusioncolortransition","title":"FillExtrusionColorTransition","text":"<p>Name</p> <p><code>fillExtrusionColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusiontranslate","title":"FillExtrusionTranslate","text":"<p>Name <code>fillExtrusionTranslate</code></p> <p>Description The geometry's offset. Values are [x, y] where negatives indicate left and up (on the flat plane), respectively.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusiontranslatetransition","title":"FillExtrusionTranslateTransition","text":"<p>Name</p> <p><code>fillExtrusionTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusiontranslateanchor","title":"FillExtrusionTranslateAnchor","text":"<p>Name <code>fillExtrusionTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>fillExtrusionTranslate</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - The fill extrusion is translated relative to the map. viewport - The fill extrusion is translated relative to the viewport.</p> <p>Requires <code>fillExtrusionTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionpattern","title":"FillExtrusionPattern","text":"<p>Name <code>fillExtrusionPattern</code></p> <p>Description Name of image in sprite to use for drawing images on extruded fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoomDependent expressions will be evaluated only at integer zoom levels.</p> <p>Type <code>resolvedImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionpatterntransition","title":"FillExtrusionPatternTransition","text":"<p>Name</p> <p><code>fillExtrusionPatternTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionPattern propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionheight","title":"FillExtrusionHeight","text":"<p>Name <code>fillExtrusionHeight</code></p> <p>Description The height with which to extrude this layer.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>meters</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p> <p>Name</p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionheighttransition","title":"FillExtrusionHeightTransition","text":"<p><code>fillExtrusionHeightTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionHeight propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionbase","title":"FillExtrusionBase","text":"<p>Name <code>fillExtrusionBase</code></p> <p>Description The height with which to extrude the base of this layer. Must be less than or equal to <code>fillExtrusionHeight</code>.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>meters</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>fillExtrusionHeight</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/FillExtrusionLayer/#fillextrusionbasetransition","title":"FillExtrusionBaseTransition","text":"<p>Name</p> <p><code>fillExtrusionBaseTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillExtrusionBase propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/","title":"FillLayer","text":""},{"location":"sdk-mobile/react-native/docs/FillLayer/#_1","title":"FillLayer","text":""},{"location":"sdk-mobile/react-native/docs/FillLayer/#filllayer","title":"FillLayer","text":"<ul> <li>FillLayer is a style layer that renders one or more filled (and optionally stroked) polygons on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#props","title":"props","text":"Prop Type Default Required Description style <code>FillLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>Vietmap.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#styles","title":"styles","text":"<ul> <li>fillSortKey</li> <li>visibility</li> <li>fillAntialias</li> <li>fillOpacity</li> <li>fillColor</li> <li>fillOutlineColor</li> <li>fillTranslate</li> <li>fillTranslateAnchor</li> <li>fillPattern</li> </ul>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillsortkey","title":"FillSortKey","text":"<p>Name <code>fillSortKey</code></p> <p>Description Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> <p>Type <code>number</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#visibility","title":"Visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillantialias","title":"FillAntialias","text":"<p>Name <code>fillAntialias</code></p> <p>Description Whether or not the fill should be antialiased.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>true</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillopacity","title":"FillOpacity","text":"<p>Name <code>fillOpacity</code></p> <p>Description The opacity of the entire fill layer. In contrast to the <code>fillColor</code>, this value will also affect the 1px stroke around the fill, if the stroke is used.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillopacitytransition","title":"FillOpacityTransition","text":"<p>Name</p> <p><code>fillOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillcolor","title":"FillColor","text":"<p>Name <code>fillColor</code></p> <p>Description The color of the filled part of this layer. This color can be specified as <code>rgba</code> with an alpha component and the color's opacity will not affect the opacity of the 1px stroke, if it is used.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Disabled By <code>fillPattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillcolortransition","title":"FillColorTransition","text":"<p>Name</p> <p><code>fillColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#filloutlinecolor","title":"FillOutlineColor","text":"<p>Name <code>fillOutlineColor</code></p> <p>Description The outline color of the fill. Matches the value of <code>fillColor</code> if unspecified.</p> <p>Type <code>color</code></p> <p>Disabled By <code>fillPattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#filloutlinecolortransition","title":"FillOutLineColorTransition","text":"<p>Name</p> <p><code>fillOutlineColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillOutlineColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#filltranslate","title":"FillTranslate","text":"<p>Name <code>fillTranslate</code></p> <p>Description The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#filltranslatetransition","title":"FillTranslateTransition","text":"<p>Name</p> <p><code>fillTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#filltranslateanchor","title":"FillTranslateAnchor","text":"<p>Name <code>fillTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>fillTranslate</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - The fill is translated relative to the map. viewport - The fill is translated relative to the viewport.</p> <p>Requires <code>fillTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillpattern","title":"FillPattern","text":"<p>Name <code>fillPattern</code></p> <p>Description Name of image in sprite to use for drawing image fills. For seamless patterns, image width and height must be a factor of two (2, 4, 8, ..., 512). Note that zoomDependent expressions will be evaluated only at integer zoom levels.</p> <p>Type <code>resolvedImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/FillLayer/#fillpatterntransition","title":"FillPatternTransition","text":"<p>Name</p> <p><code>fillPatternTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s fillPattern propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/","title":"Getting Started","text":"<p>Congratulations, you successfully installed vietmap-gl-react-native! \ud83c\udf89 This quickstart guide provides a zero-to-map intro, and from there you can check out the examples folder if you want to jump in the deep end.</p>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#prerequisites","title":"Prerequisites","text":"<ol> <li>On Android we support API 23 and higher</li> <li>You will need a vector tile source from Vietmap for production use;</li> </ol>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#dependencies","title":"Dependencies","text":"<ul> <li>node</li> <li>npm</li> <li>React Native (0.60+)</li> </ul>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#installation","title":"Installation","text":""},{"location":"sdk-mobile/react-native/docs/GettingStarted/#set-up-a-react-native-project","title":"Set up a React Native project","text":"<p>If you don't have an existing React Native project, create one:</p> <pre><code>npx react-native init MyApp\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#install-package","title":"Install Package","text":"<p>From your React Native project's root directory, add the package via either <code>yarn</code> or <code>npm</code> (pick one).</p> <pre><code># install with Yarn\nyarn add @vietmap/vietmap-gl-react-native\n</code></pre> <pre><code># install with NPM\nnpm install @vietmap/vietmap-gl-react-native --save\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#review-platform-specific-info","title":"Review platform specific info","text":"<p>Check out the installation guide(s) for additional information about platform-specific setup, quirks, and steps required before running.</p> <ul> <li>Android</li> <li>iOS</li> <li>Expo</li> </ul>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#adding-a-map","title":"Adding a map","text":"<p>Here is an example minimal App.js</p> <pre><code>import React, {Component} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport Vietmap from '@vietmap/vietmap-gl-react-native';\n\n// Will be null for most users (only Vietmap authenticates this way).\n// Required on Android. See Android installation notes.\nVietmap.setApiKey(null);\n\nconst styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  map: {\n    flex: 1,\n    alignSelf: 'stretch',\n  },\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      &lt;View style={styles.page}&gt;\n        &lt;Vietmap.MapView\n          style={styles.map}\n          styleURL=\"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\"\n        /&gt;\n      &lt;/View&gt;\n    );\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#run-it","title":"Run it!","text":""},{"location":"sdk-mobile/react-native/docs/GettingStarted/#ios","title":"iOS","text":"<pre><code># Run with yarn\nyarn run ios\n\n# or Run with NPM\nnpm run ios\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/GettingStarted/#android","title":"Android","text":"<pre><code># Run with yarn\nyarn run android\n\n# or Run with NPM\nnpm run android\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/HeadingIndicator/","title":"HeadingIndicator","text":""},{"location":"sdk-mobile/react-native/docs/HeadingIndicator/#_1","title":"HeadingIndicator","text":""},{"location":"sdk-mobile/react-native/docs/HeadingIndicator/#_2","title":"HeadingIndicator","text":""},{"location":"sdk-mobile/react-native/docs/HeadingIndicator/#props","title":"props","text":"Prop Type Default Required Description heading <code>number</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/","title":"HeatmapLayer","text":""},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#_1","title":"HeatmapLayer","text":""},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmaplayer","title":"HeatmapLayer","text":"<ul> <li>HeatmapLayer is a style layer that renders one or more filled circles on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#props","title":"Props","text":"Prop Type Default Required Description style <code>HeatmapLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#visibility","title":"visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values **visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapradius","title":"heatmapRadius","text":"<p>Name <code>heatmapRadius</code></p> <p>Description Radius of influence of one heatmap point in pixels. Increasing the value makes the heatmap smoother, but less detailed.</p> <p>Type <code>number</code></p> <p>Default Value <code>30</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapradiustransition","title":"heatmapRadiusTransition","text":"<p>Name</p> <p><code>heatmapRadiusTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s heatmapRadius propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapweight","title":"heatmapWeight","text":"<p>Name <code>heatmapWeight</code></p> <p>Description A measure of how much an individual point contributes to the heatmap. A value of 10 would be equivalent to having 10 points of weight 1 in the same spot. Especially useful when combined with clustering.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapintensity","title":"heatmapIntensity","text":"<p>Name <code>heatmapIntensity</code></p> <p>Description Similar to <code>heatmapWeight</code> but controls the intensity of the heatmap globally. Primarily used for adjusting the heatmap based on zoom level.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapintensitytransition","title":"heatmapIntensityTransition","text":"<p>Name</p> <p><code>heatmapIntensityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s heatmapIntensity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapcolor","title":"heatmapColor","text":"<p>Name <code>heatmapColor</code></p> <p>Description Defines the color of each pixel based on its density value in a heatmap.  Should be an expression that uses <code>[\"heatmapDensity\"]</code> as input.</p> <p>Type <code>color</code></p> <p>Default Value <code>interpolate,linear,heatmap-density,0,rgba(0, 0, 255, 0),0.1,royalblue,0.3,cyan,0.5,lime,0.7,yellow,1,red</code></p> <p>Expression</p> <p>Parameters: <code>heatmap-density</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapopacity","title":"heatmapOpacity","text":"<p>Name <code>heatmapOpacity</code></p> <p>Description The global opacity at which the heatmap layer will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/HeatmapLayer/#heatmapopacitytransition","title":"heatmapOpacityTransition","text":"<p>Name</p> <p><code>heatmapOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s heatmapOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/ImageSource/","title":"ImageSource","text":""},{"location":"sdk-mobile/react-native/docs/ImageSource/#_1","title":"ImageSource","text":""},{"location":"sdk-mobile/react-native/docs/ImageSource/#imagesource-is-a-content-source-that-is-used-for-a-georeferenced-raster-image-to-be-shown-on-the-mapthe-georeferenced-image-scales-and-rotates-as-the-user-zooms-and-rotates-the-map","title":"ImageSource is a content source that is used for a georeferenced raster image to be shown on the map.The georeferenced image scales and rotates as the user zooms and rotates the map","text":""},{"location":"sdk-mobile/react-native/docs/ImageSource/#props","title":"props","text":"Prop Type Default Required Description id <code>string</code> <code>none</code> <code>true</code> A string that uniquely identifies the source. url <code>number | string</code> <code>none</code> <code>false</code> An HTTP(S) URL, absolute file URL, or local file URL to the source image.Gifs are currently not supported. coordinates <code>tuple</code> <code>none</code> <code>false</code> The top left, top right, bottom right, and bottom left coordinates for the image. children <code>ReactElement | ReactElement[]</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/Images/","title":"Images","text":""},{"location":"sdk-mobile/react-native/docs/Images/#_1","title":"Images","text":""},{"location":"sdk-mobile/react-native/docs/Images/#images","title":"Images","text":"<ul> <li>Images defines the images used in Symbol etc layers</li> </ul>"},{"location":"sdk-mobile/react-native/docs/Images/#props","title":"Props","text":"Prop Type Default Required Description images <code>shape</code> <code>none</code> <code>false</code> Specifies the external images in key-value pairs required for the shape source.Keys are names - see iconImage expressions, values can be either urls-s objectswith format {uri: 'http://...'}<code>or</code>require('image.png')<code>or</code>import 'image.png'` \u00a0\u00a0[object Object] <code>union</code> <code>none</code> <code>true</code> nativeAssetImages <code>Array</code> <code>none</code> <code>false</code> If you have an asset under Image.xcassets on iOS and the drawables directory on androidyou can specify an array of string names with assets as the key <code>['pin']</code>. id <code>string</code> <code>none</code> <code>false</code> children <code>ReactElement</code> <code>none</code> <code>true</code>"},{"location":"sdk-mobile/react-native/docs/Light/","title":"Light","text":""},{"location":"sdk-mobile/react-native/docs/Light/#_1","title":"Light","text":""},{"location":"sdk-mobile/react-native/docs/Light/#light-represents-the-light-source-for-extruded-geometries","title":"Light represents the light source for extruded geometries","text":""},{"location":"sdk-mobile/react-native/docs/Light/#props","title":"Props","text":"Prop Type Default Required Description style <code>LightLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes"},{"location":"sdk-mobile/react-native/docs/Light/#styles","title":"Styles","text":"<ul> <li>Anchor</li> <li>Position</li> <li>Color</li> <li>Intensity</li> </ul>"},{"location":"sdk-mobile/react-native/docs/Light/#anchor","title":"Anchor","text":"<p>Name <code>anchor</code></p> <p>Description Whether extruded geometries are lit relative to the map or viewport.</p> <p>Type <code>enum</code></p> <p>Default Value <code>viewport</code></p> <p>Supported Values map - The position of the light source is aligned to the rotation of the map. viewport - The position of the light source is aligned to the rotation of the viewport.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/Light/#position","title":"Position","text":"<p>Name <code>position</code></p> <p>Description Position of the light source relative to lit (extruded) geometries, in [r radial coordinate, a azimuthal angle, p polar angle] where r indicates the distance from the center of the base of an object to its light, a indicates the position of the light relative to 0\u00b0 (0\u00b0 when <code>light.anchor</code> is set to <code>viewport</code> corresponds to the top of the viewport, or 0\u00b0 when <code>light.anchor</code> is set to <code>map</code> corresponds to due north, and degrees proceed clockwise), and p indicates the height of the light (from 0\u00b0, directly above, to 180\u00b0, directly below).</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[1.15,210,30]</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/Light/#positiontransition","title":"PositionTransition","text":"<p>Name</p> <p><code>positionTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s position propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/Light/#color","title":"Color","text":"<p>Name <code>color</code></p> <p>Description Color tint for lighting extruded geometries.</p> <p>Type <code>color</code></p> <p>Default Value <code>#ffffff</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p> <p>Name</p> <p><code>colorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s color propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/Light/#intensity","title":"Intensity","text":"<p>Name <code>intensity</code></p> <p>Description Intensity of lighting (on a scale from 0 to 1). Higher numbers will present as more extreme contrast.</p> <p>Type <code>number</code></p> <p>Default Value <code>0.5</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/Light/#intensitytransition","title":"IntensityTransition","text":"<p>Name</p> <p><code>intensityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s intensity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/","title":"LineLayer","text":""},{"location":"sdk-mobile/react-native/docs/LineLayer/#_1","title":"LineLayer","text":""},{"location":"sdk-mobile/react-native/docs/LineLayer/#linelayer","title":"LineLayer","text":"<ul> <li>LineLayer is a style layer that renders one or more stroked polylines on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#props","title":"props","text":"Prop Type Default Required Description style <code>LineLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#styles","title":"styles","text":"<ul> <li>lineCap</li> <li>lineJoin</li> <li>lineMiterLimit</li> <li>lineRoundLimit</li> <li>lineSortKey</li> <li>visibility</li> <li>lineOpacity</li> <li>lineColor</li> <li>lineTranslate</li> <li>lineTranslateAnchor</li> <li>lineWidth</li> <li>lineGapWidth</li> <li>lineOffset</li> <li>lineBlur</li> <li>lineDasharray</li> <li>linePattern</li> <li>lineGradient</li> </ul>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linecap","title":"lineCap","text":"<p>Name <code>lineCap</code></p> <p>Description The display of line endings.</p> <p>Type <code>enum</code> Default Value <code>butt</code></p> <p>Supported Values butt - A cap with a squared-off end which is drawn to the exact endpoint of the line. round - A cap with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line. square - A cap with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linejoin","title":"lineJoin","text":"<p>Name <code>lineJoin</code></p> <p>Description The display of lines when joining.</p> <p>Type <code>enum</code> Default Value <code>miter</code></p> <p>Supported Values bevel - A join with a squared-off end which is drawn beyond the endpoint of the line at a distance of one-half of the line's width. round - A join with a rounded end which is drawn beyond the endpoint of the line at a radius of one-half of the line's width and centered on the endpoint of the line. miter - A join with a sharp, angled corner which is drawn with the outer sides beyond the endpoint of the path until they meet.</p> <p>Supported Style Functions <code>camera</code> Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linemiterlimit","title":"lineMiterLimit","text":"<p>Name <code>lineMiterLimit</code></p> <p>Description Used to automatically convert miter joins to bevel joins for sharp angles.</p> <p>Type <code>number</code> Default Value <code>2</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineroundlimit","title":"lineRoundLimit","text":"<p>Name <code>lineRoundLimit</code></p> <p>Description Used to automatically convert round joins to miter joins for shallow angles.</p> <p>Type <code>number</code> Default Value <code>1.05</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linesortkey","title":"lineSortKey","text":"<p>Name <code>lineSortKey</code></p> <p>Description Sorts features in ascending order based on this value. Features with a higher sort key will appear above features with a lower sort key.</p> <p>Type <code>number</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#visibility","title":"visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code> Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineopacity","title":"lineOpacity","text":"<p>Name <code>lineOpacity</code></p> <p>Description The opacity at which the line will be drawn.</p> <p>Type <code>number</code> Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineopacitytransition","title":"lineOpacityTransition","text":"<p>Name</p> <p><code>lineOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linecolor","title":"lineColor","text":"<p>Name <code>lineColor</code></p> <p>Description The color with which the line will be drawn.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Disabled By <code>linePattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linecolortransition","title":"lineColorTransition","text":"<p>Name</p> <p><code>lineColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linetranslate","title":"lineTranslate","text":"<p>Name <code>lineTranslate</code></p> <p>Description The geometry's offset. Values are [x, y] where negatives indicate left and up, respectively.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linetranslatetransition","title":"lineTranslateTransition","text":"<p>Name</p> <p><code>lineTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linetranslateanchor","title":"lineTranslateAnchor","text":"<p>Name <code>lineTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>lineTranslate</code>.</p> <p>Type <code>enum</code> Default Value <code>map</code></p> <p>Supported Values map - The line is translated relative to the map. viewport - The line is translated relative to the viewport.</p> <p>Requires <code>lineTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linewidth","title":"lineWidth","text":"<p>Name <code>lineWidth</code></p> <p>Description Stroke thickness.</p> <p>Type <code>number</code> Default Value <code>1</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Supported Style Functions <code>camera</code> Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linewidthtransition","title":"lineWidthTransition","text":"<p>Name</p> <p><code>lineWidthTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineWidth propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linegapwidth","title":"lineGapWidth","text":"<p>Name <code>lineGapWidth</code></p> <p>Description Draws a line casing outside of a line's actual path. Value indicates the width of the inner gap.</p> <p>Type <code>number</code> Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linegapwidthtransition","title":"lineGapWidthTransition","text":"<p>Name</p> <p><code>lineGapWidthTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineGapWidth propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineoffset","title":"lineOffset","text":"<p>Name <code>lineOffset</code></p> <p>Description The line's offset. For linear features, a positive value offsets the line to the right, relative to the direction of the line, and a negative value to the left. For polygon features, a positive value results in an inset, and a negative value results in an outset.</p> <p>Type <code>number</code> Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineoffsettransition","title":"lineOffsetTransition","text":"<p>Name</p> <p><code>lineOffsetTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineOffset propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineblur","title":"lineBlur","text":"<p>Name <code>lineBlur</code></p> <p>Description Blur applied to the line, in pixels.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#lineblurtransition","title":"lineBlurTransition","text":"<p>Name</p> <p><code>lineBlurTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineBlur propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linedasharray","title":"lineDasharray","text":"<p>Name <code>lineDasharray</code></p> <p>Description Specifies the lengths of the alternating dashes and gaps that form the dash pattern. The lengths are later scaled by the line width. To convert a dash length to pixels, multiply the length by the current line width. Note that GeoJSON sources with <code>lineMetrics: true</code> specified won't render dashed lines to the expected scale. Also note that zoomDependent expressions will be evaluated only at integer zoom levels.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Units <code>line widths</code></p> <p>Minimum <code>0</code></p> <p>Disabled By <code>linePattern</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linedasharraytransition","title":"lineDasharrayTransition","text":"<p>Name</p> <p><code>lineDasharrayTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s lineDasharray propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linepattern","title":"linePattern","text":"<p>Name <code>linePattern</code></p> <p>Description Name of image in sprite to use for drawing image lines. For seamless patterns, image width must be a factor of two (2, 4, 8, ..., 512). Note that zoomDependent expressions will be evaluated only at integer zoom levels.</p> <p>Type <code>resolvedImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linepatterntransition","title":"linePatternTransition","text":"<p>Name</p> <p><code>linePatternTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s linePattern propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/LineLayer/#linegradient","title":"lineGradient","text":"<p>Name <code>lineGradient</code></p> <p>Description Defines a gradient with which to color a line feature. Can only be used with GeoJSON sources that specify <code>\"lineMetrics\": true</code>.</p> <p>Type <code>color</code></p> <p>Disabled By <code>lineDasharray, linePattern</code></p> <p>Expression</p> <p>Parameters: <code>line-progress</code></p>"},{"location":"sdk-mobile/react-native/docs/Logger/","title":"Logger","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#logger","title":"Logger","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#_1","title":"Logger","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#methods","title":"methods","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#setloglevelloglevel","title":"setLogLevel(LogLevel)","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#arguments","title":"arguments","text":"Name Type Required Description <code>LogLevel</code> <code>String</code> <code>Yes</code> required level of logging, can be <code>\"error\" | \"warning\" | \"info\" | \"debug\" | \"verbose\"</code>"},{"location":"sdk-mobile/react-native/docs/Logger/#description","title":"Description","text":"<p>sets the amount of logging</p>"},{"location":"sdk-mobile/react-native/docs/Logger/#setlogcallbacklogcallback","title":"setLogCallback(LogCallback)","text":""},{"location":"sdk-mobile/react-native/docs/Logger/#arguments_1","title":"arguments","text":"Name Type Required Description <code>LogCallback</code> <code>function</code> <code>Yes</code> callback taking a log object <code>{ message: String, level: LogLevel, tag: String }</code> as param. If callback return falsy value then default logging will take place."},{"location":"sdk-mobile/react-native/docs/Logger/#description_1","title":"Description","text":"<p>overwrite logging - good to mute specific errors/ warnings</p>"},{"location":"sdk-mobile/react-native/docs/MapView/","title":"MapView","text":""},{"location":"sdk-mobile/react-native/docs/MapView/#_1","title":"MapView","text":""},{"location":"sdk-mobile/react-native/docs/MapView/#mapview-backed-by-vietmap-gl-native","title":"MapView backed by Vietmap GL Native","text":""},{"location":"sdk-mobile/react-native/docs/MapView/#props","title":"Props","text":"Prop Type Default Required Description contentInset <code>number[] | number</code> <code>none</code> <code>false</code> The distance from the edges of the map view\u2019s frame to the edges of the map view\u2019s logical viewport. style <code>ViewProps['style']</code> <code>none</code> <code>false</code> Style for wrapping React Native View styleURL <code>string</code> <code>none</code> <code>false</code> Style URL for map - notice, if non is set it will default to <code>VietmapGL.StyleURL.Default</code> preferredFramesPerSecond <code>number</code> <code>none</code> <code>false</code> iOS: The preferred frame rate at which the map view is rendered.The default value for this property is MGLMapViewPreferredFramesPerSecondDefault,which will adaptively set the preferred frame rate based on the capability ofthe user\u2019s device to maintain a smooth experience. This property can be set to arbitrary integer values.Android: The maximum frame rate at which the map view is rendered, but it can't excess the ability of device hardware.This property can be set to arbitrary integer values. localizeLabels <code>boolean</code> <code>false</code> <code>false</code> Automatically change the language of the map labels to the system\u2019s preferred language,this is not something that can be toggled on/off zoomEnabled <code>boolean</code> <code>none</code> <code>false</code> Enable/Disable zoom on the map scrollEnabled <code>boolean</code> <code>true</code> <code>false</code> Enable/Disable scroll on the map pitchEnabled <code>boolean</code> <code>true</code> <code>false</code> Enable/Disable pitch on map rotateEnabled <code>boolean</code> <code>true</code> <code>false</code> Enable/Disable rotation on map attributionPosition <code>object</code> <code>{    top?: number;    left?: number;  } | {    top?: number;    right?: number;  } | {    bottom?: number;    left?: number;  } | {    bottom?: number;    right?: umber;  }</code> <code>none</code> <code>false</code> tintColor <code>string | unknown[]</code> <code>none</code> <code>false</code> MapView's tintColor logoEnabled <code>boolean</code> <code>true</code> <code>false</code> Enable/Disable the logo on the map. logoPosition <code>| {    top?: number;    left?: number;  }| {    top?: number;    right?: number;  }| {    bottom?: number;    left?: number;  }| {    bottom?: number;    right?: number;  }</code> <code>none</code> <code>false</code> Adds logo offset, e.g. <code>{top: 8, left: 8}</code> will put the logo in top-left corner of the map compassEnabled <code>boolean</code> <code>none</code> <code>false</code> Enable/Disable the compass from appearing on the map compassViewPosition <code>number</code> <code>none</code> <code>false</code> Change corner of map the compass starts at. 0: TopLeft, 1: TopRight, 2: BottomLeft, 3: BottomRight compassViewMargins <code>object</code> <code>none</code> <code>false</code> Add margins to the compass with x and y values surfaceView <code>boolean</code> <code>false</code> <code>false</code> [Android only] Enable/Disable use of GLSurfaceView insted of TextureView. onUserLocationUpdate <code>func</code> <code>none</code> <code>false</code> This event is triggered when the user location is updated.signature:<code>(location:Location) =&gt; void</code> regionWillChangeDebounceTime <code>number</code> <code>10</code> <code>false</code> The emitted frequency of regionwillchange events regionDidChangeDebounceTime <code>number</code> <code>500</code> <code>false</code> The emitted frequency of regiondidchange events children <code>ReactNode</code> <code>none</code> <code>true</code>"},{"location":"sdk-mobile/react-native/docs/MapView/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/MapView/#getpointinviewcoordinate","title":"GetPointInView(coordinate)","text":"<p>Converts a geographic coordinate to a point in the given view\u2019s coordinate system.</p> <ul> <li>Arguments  </li> </ul> Name Type Required Description <code>coordinate</code> <code>GeoJSON.Position</code> <code>Yes</code> A point expressed in the map view's coordinate system. <pre><code>const pointInView = await this._map.getPointInView([-37.817070, 144.949901]);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#getcoordinatefromviewpoint","title":"GetCoordinateFromView(point)","text":"<p>Converts a point in the given view\u2019s coordinate system to a geographic coordinate.</p> <ul> <li>Arguments:</li> </ul> Name Type Required Description <code>point</code> <code>Array</code> <code>Yes</code> A point expressed in the given view\u2019s coordinate system. <pre><code>const coordinate = await this._map.getCoordinateFromView([100, 100]);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#getvisiblebounds","title":"GetVisibleBounds()","text":"<p>The coordinate bounds(ne, sw) visible in the users\u2019s viewport.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <pre><code>const visibleBounds = await this._map.getVisibleBounds();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#queryrenderedfeaturesatpointcoordinate-filter-layerids","title":"QueryRenderedFeaturesAtPoint(coordinate[, filter][, layerIDs])","text":"<p>Returns an array of rendered map features that intersect with a given point.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <code>coordinate</code> <code>GeoJSON.Position</code> <code>Yes</code> A point expressed in the map view\u2019s coordinate system. <code>filter</code> <code>FilterExpression</code> <code>No</code> A set of strings that correspond to the names of layers defined in the current style. Only the features contained in these layers are included in the returned array. <code>layerIDs</code> <code>Array</code> <code>No</code> A array of layer id's to filter the features by <pre><code>this._map.queryRenderedFeaturesAtPoint([30, 40], ['==', 'type', 'Point'], ['id1', 'id2'])\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#queryrenderedfeaturesinrectbbox-filter-layerids","title":"QueryRenderedFeaturesInRect(bbox[, filter][, layerIDs])","text":"<p>Returns an array of rendered map features that intersect with the given rectangle,restricted to the given style layers and filtered by the given predicate.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <code>bbox</code> <code>GeoJSON.BBox</code> <code>Yes</code> A rectangle expressed in the map view\u2019s coordinate system. <code>filter</code> <code>FilterExpression</code> <code>No</code> A set of strings that correspond to the names of layers defined in the current style. Only the features contained in these layers are included in the returned array. <code>layerIDs</code> <code>Array</code> <code>No</code> A array of layer id's to filter the features by <pre><code>this._map.queryRenderedFeaturesInRect([30, 40, 20, 10], ['==', 'type', 'Point'], ['id1', 'id2'])\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#setcamera","title":"SetCamera()","text":"<p>Map camera will perform updates based on provided config. Deprecated use Camera#setCamera.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description"},{"location":"sdk-mobile/react-native/docs/MapView/#takesnapwritetodisk","title":"TakeSnap([writeToDisk])","text":"<p>Takes snapshot of map with current tiles and returns a URI to the image</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <code>writeToDisk</code> <code>Boolean</code> <code>No</code> If true will create a temp file, otherwise it is in base64"},{"location":"sdk-mobile/react-native/docs/MapView/#getzoom","title":"GetZoom()","text":"<p>Returns the current zoom of the map view.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <pre><code>const zoom = await this._map.getZoom();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#getcenter","title":"GetCenter()","text":"<p>Returns the map's geographical centerpoint</p> <ul> <li>Arguments</li> </ul> Name Type Required Description <pre><code>const center = await this._map.getCenter();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#setsourcevisibilityvisible-sourceid-sourcelayerid","title":"SetSourceVisibility(visible, sourceId[, sourceLayerId])","text":"<p>Sets the visibility of all the layers referencing the specified <code>sourceLayerId</code> and/or <code>sourceId</code></p> <ul> <li>Arguments</li> </ul> Name Type Required Description <code>visible</code> <code>boolean</code> <code>Yes</code> Visibility of the layers <code>sourceId</code> <code>string</code> <code>Yes</code> Identifier of the target source (e.g. 'composite') <code>sourceLayerId</code> <code>String</code> <code>No</code> Identifier of the target source-layer (e.g. 'building') <pre><code>await this._map.setSourceVisibility(false, 'composite', 'building')\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/MapView/#showattribution","title":"ShowAttribution()","text":"<p>Show the attribution and telemetry action sheet.If you implement a custom attribution button, you should add this action to the button.</p> <ul> <li>Arguments</li> </ul> Name Type Required Description"},{"location":"sdk-mobile/react-native/docs/MarkerView/","title":"MarkerView","text":""},{"location":"sdk-mobile/react-native/docs/MarkerView/#_1","title":"MarkerView","text":""},{"location":"sdk-mobile/react-native/docs/MarkerView/#markerview","title":"MarkerView","text":"<ul> <li>MarkerView allows you to place a interactive react native marker to the map.If you have static view consider using PointAnnotation or SymbolLayer they'll offer much better performance.This is based on MakerView pluginon Androidand PointAnnotation on iOS.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/MarkerView/#props","title":"Props","text":"Prop Type Default Required Description coordinate <code>Array</code> <code>none</code> <code>true</code> The center point (specified as a map coordinate) of the marker.See also #anchor. anchor <code>shape</code> <code>{x: 0.5, y: 0.5}</code> <code>false</code> Specifies the anchor being set on a particular point of the annotation.The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0],where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner.Note this is only for custom annotations not the default pin view.Defaults to the center of the view. \u00a0\u00a0x <code>number</code> <code>none</code> <code>true</code> <code>x</code> of anchor \u00a0\u00a0y <code>number</code> <code>none</code> <code>true</code> <code>y</code> of anchor allowOverlap <code>boolean</code> <code>false</code> <code>false</code> isSelected <code>boolean</code> <code>false</code> <code>false</code> children <code>ReactReactElement</code> <code>none</code> <code>true</code> Expects one child - can be container with multiple elements"},{"location":"sdk-mobile/react-native/docs/NativeUserLocation/","title":"NativeUserLocation","text":""},{"location":"sdk-mobile/react-native/docs/NativeUserLocation/#_1","title":"NativeUserLocation","text":""},{"location":"sdk-mobile/react-native/docs/NativeUserLocation/#_2","title":"NativeUserLocation","text":""},{"location":"sdk-mobile/react-native/docs/NativeUserLocation/#props","title":"props","text":"Prop Type Default Required Description androidRenderMode <code>'normal' | 'compass' | 'gps'</code> <code>none</code> <code>false</code> Android render mode. - normal: just a circle - compass: triangle with heading - gps: large arrow@platform android iosShowsUserHeadingIndicator <code>boolean</code> <code>none</code> <code>false</code> iOS only. A Boolean value indicating whether the user location annotation may display a permanent heading indicator.@platform ios"},{"location":"sdk-mobile/react-native/docs/NavigationSample/","title":"NavigationSample","text":"<p>Create <code>Navigation.js</code> file and paste below code <pre><code>import {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport SimpleMap from './ShowMap';\nconst Stack = createStackNavigator();\nconst Navigation = ({props}) =&gt; {\n  return (\n    &lt;NavigationContainer&gt;\n      &lt;Stack.Navigator&gt;\n        &lt;Stack.Screen name=\"Home\" component={SimpleMap} /&gt; \n      &lt;/Stack.Navigator&gt;\n    &lt;/NavigationContainer&gt;\n  );\n};\n\nexport default Navigation;\n</code></pre></p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/","title":"OfflineManager","text":""},{"location":"sdk-mobile/react-native/docs/OfflineManager/#_1","title":"OfflineManager","text":""},{"location":"sdk-mobile/react-native/docs/OfflineManager/#offlinemanager-implements-a-singleton-shared-object-that-manages-offline-packsall-of-this-classs-instance-methods-are-asynchronous-reflecting-the-fact-that-offline-resources-are-stored-in-a-databasethe-shared-object-maintains-a-canonical-collection-of-offline-packs","title":"OfflineManager implements a singleton (shared object) that manages offline packs.All of this class\u2019s instance methods are asynchronous, reflecting the fact that offline resources are stored in a database.The shared object maintains a canonical collection of offline packs.","text":""},{"location":"sdk-mobile/react-native/docs/OfflineManager/#methods","title":"methods","text":""},{"location":"sdk-mobile/react-native/docs/OfflineManager/#createpackoptions-progresslistener-errorlistener","title":"createPack(options[, progressListener][, errorListener])","text":"<p>Creates and registers an offline pack that downloads the resources needed to use the given region offline.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments","title":"arguments","text":"Name Type Required Description <code>options</code> <code>OfflineCreatePackOptions</code> <code>Yes</code> Create options for a offline pack that specifices zoom levels, style url, and the region to download. <code>progressListener</code> <code>Callback</code> <code>No</code> Callback that listens for status events while downloading the offline resource. <code>errorListener</code> <code>Callback</code> <code>No</code> Callback that listens for status events while downloading the offline resource. <pre><code>const progressListener = (offlineRegion, status) =&gt; console.log(offlineRegion, status);\nconst errorListener = (offlineRegion, err) =&gt; console.log(offlineRegion, err);\n\nawait VietmapGL.offlineManager.createPack({\n  name: 'offlinePack',\n  styleURL: 'vietmap://...',\n  minZoom: 14,\n  maxZoom: 20,\n  bounds: [[neLng, neLat], [swLng, swLat]]\n}, progressListener, errorListener)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#invalidatepackname","title":"invalidatePack(name)","text":"<p>Invalidates the specified offline pack. This method checks that the tiles in the specified offline pack match those from the server. Local tiles that do not match the latest version on the server are updated.This is more efficient than deleting the offline pack and downloading it again. If the data stored locally matches that on the server, new data will not be downloaded.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_1","title":"arguments","text":"Name Type Required Description <code>name</code> <code>String</code> <code>Yes</code> Name of the offline pack. <pre><code>await VietmapGL.offlineManager.invalidatePack('packName')\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#deletepackname","title":"deletePack(name)","text":"<p>Unregisters the given offline pack and allows resources that are no longer required by any remaining packs to be potentially freed.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_2","title":"arguments","text":"Name Type Required Description <code>name</code> <code>String</code> <code>Yes</code> Name of the offline pack. <pre><code>await VietmapGL.offlineManager.deletePack('packName')\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#invalidateambientcache","title":"invalidateAmbientCache()","text":"<p>Forces a revalidation of the tiles in the ambient cache and downloads a fresh version of the tiles from the tile server.This is the recommend method for clearing the cache.This is the most efficient method because tiles in the ambient cache are re-downloaded to remove outdated data from a device.It does not erase resources from the ambient cache or delete the database, which can be computationally expensive operations that may carry unintended side effects.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_3","title":"arguments","text":"Name Type Required Description <pre><code>await VietmapGL.offlineManager.invalidateAmbientCache();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#clearambientcache","title":"clearAmbientCache()","text":"<p>Erases resources from the ambient cache.This method clears the cache and decreases the amount of space that map resources take up on the device.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_4","title":"arguments","text":"Name Type Required Description <pre><code>await VietmapGL.offlineManager.clearAmbientCache();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#setmaximumambientcachesizesize","title":"setMaximumAmbientCacheSize(size)","text":"<p>Sets the maximum size of the ambient cache in bytes. Disables the ambient cache if set to 0.This method may be computationally expensive because it will erase resources from the ambient cache if its size is decreased.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_5","title":"arguments","text":"Name Type Required Description <code>size</code> <code>Number</code> <code>Yes</code> Size of ambient cache. <pre><code>await VietmapGL.offlineManager.setMaximumAmbientCacheSize(5000000);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#resetdatabase","title":"resetDatabase()","text":"<p>Deletes the existing database, which includes both the ambient cache and offline packs, then reinitializes it.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_6","title":"arguments","text":"Name Type Required Description <pre><code>await VietmapGL.offlineManager.resetDatabase();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#getpacks","title":"getPacks()","text":"<p>Retrieves all the current offline packs that are stored in the database.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_7","title":"arguments","text":"Name Type Required Description <pre><code>const offlinePacks = await VietmapGL.offlineManager.getPacks();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#getpackname","title":"getPack(name)","text":"<p>Retrieves an offline pack that is stored in the database by name.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_8","title":"arguments","text":"Name Type Required Description <code>name</code> <code>String</code> <code>Yes</code> Name of the offline pack. <pre><code>const offlinePack = await VietmapGL.offlineManager.getPack();\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#mergeofflineregionspath","title":"mergeOfflineRegions(path)","text":"<p>Sideloads offline db</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_9","title":"arguments","text":"Name Type Required Description <code>path</code> <code>String</code> <code>Yes</code> Path to offline tile db on file system. <pre><code>await VietmapGL.offlineManager.mergeOfflineRegions(path);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#settilecountlimitlimit","title":"setTileCountLimit(limit)","text":"<p>Sets the maximum number of tiles that may be downloaded and stored on the current device.Consult the Terms of Service for your map tile host before changing this value.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_10","title":"arguments","text":"Name Type Required Description <code>limit</code> <code>Number</code> <code>Yes</code> Map tile limit count. <pre><code>VietmapGL.offlineManager.setTileCountLimit(1000);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#setprogresseventthrottlethrottlevalue","title":"setProgressEventThrottle(throttleValue)","text":"<p>Sets the period at which download status events will be sent over the React Native bridge.The default is 500ms.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_11","title":"arguments","text":"Name Type Required Description <code>throttleValue</code> <code>Number</code> <code>Yes</code> event throttle value in ms. <pre><code>VietmapGL.offlineManager.setProgressEventThrottle(500);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#subscribepackname-progresslistener-errorlistener","title":"subscribe(packName, progressListener, errorListener)","text":"<p>Subscribe to download status/error events for the requested offline pack.Note that createPack calls this internally if listeners are provided.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_12","title":"arguments","text":"Name Type Required Description <code>packName</code> <code>String</code> <code>Yes</code> Name of the offline pack. <code>progressListener</code> <code>Callback</code> <code>Yes</code> Callback that listens for status events while downloading the offline resource. <code>errorListener</code> <code>Callback</code> <code>Yes</code> Callback that listens for status events while downloading the offline resource. <pre><code>const progressListener = (offlinePack, status) =&gt; console.log(offlinePack, status)\nconst errorListener = (offlinePack, err) =&gt; console.log(offlinePack, err)\nVietmapGL.offlineManager.subscribe('packName', progressListener, errorListener)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#unsubscribepackname","title":"unsubscribe(packName)","text":"<p>Unsubscribes any listeners associated with the offline pack.It's a good idea to call this on componentWillUnmount.</p>"},{"location":"sdk-mobile/react-native/docs/OfflineManager/#arguments_13","title":"arguments","text":"Name Type Required Description <code>packName</code> <code>String</code> <code>Yes</code> Name of the offline pack. <pre><code>VietmapGL.offlineManager.unsubscribe('packName')\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/PointAnnotation/","title":"PointAnnotation","text":""},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#_1","title":"PointAnnotation","text":""},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#pointannotation","title":"PointAnnotation","text":"<ul> <li>PointAnnotation represents a one-dimensional shape located at a single geographical coordinate.Consider using ShapeSource and SymbolLayer instead, if you have many points and you have static images,they'll offer much better performance.If you need interctive views please use MarkerView,as with PointAnnotation on Android child views are rendered onto a bitmap for better performance.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#props","title":"Props","text":"Prop Type Default Required Description id <code>string</code> <code>none</code> <code>true</code> A string that uniquely identifies the annotation title <code>string</code> <code>none</code> <code>false</code> The string containing the annotation\u2019s title. Note this is required to be set if you want to see a callout appear on iOS. snippet <code>string</code> <code>none</code> <code>false</code> The string containing the annotation\u2019s snippet(subtitle). Not displayed in the default callout. selected <code>boolean</code> <code>none</code> <code>false</code> Manually selects/deselects annotation@type draggable <code>boolean</code> <code>false</code> <code>false</code> Enable or disable dragging. Defaults to false. coordinate <code>Array</code> <code>none</code> <code>true</code> The center point (specified as a map coordinate) of the annotation. anchor <code>shape</code> <code>{x: 0.5, y: 0.5}</code> <code>false</code> Specifies the anchor being set on a particular point of the annotation.The anchor point is specified in the continuous space [0.0, 1.0] x [0.0, 1.0],where (0, 0) is the top-left corner of the image, and (1, 1) is the bottom-right corner.Note this is only for custom annotations not the default pin view.Defaults to the center of the view. \u00a0\u00a0x <code>number</code> <code>none</code> <code>true</code> See anchor \u00a0\u00a0y <code>number</code> <code>none</code> <code>true</code> See anchor children <code>React.ReactElement | [React.ReactElement, React.ReactElement]</code> <code>none</code> <code>true</code> Expects one child, and an optional callout can be added as well style <code>ViewProps['style']</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#refresh","title":"Refresh()","text":"<p>On android point annotation is rendered offscreen with a canvas into an image.To rerender the image from the current state of the view call refresh.Call this for example from Image#onLoad.</p>"},{"location":"sdk-mobile/react-native/docs/PointAnnotation/#arguments","title":"Arguments","text":"Name Type Required Description"},{"location":"sdk-mobile/react-native/docs/RasterLayer/","title":"RasterLayer","text":""},{"location":"sdk-mobile/react-native/docs/RasterLayer/#_1","title":"RasterLayer","text":""},{"location":"sdk-mobile/react-native/docs/RasterLayer/#_2","title":"RasterLayer","text":""},{"location":"sdk-mobile/react-native/docs/RasterLayer/#props","title":"Props","text":"Prop Type Default Required Description style <code>RasterLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes sourceID `` <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#styles","title":"Styles","text":"<ul> <li>visibility</li> <li>rasterOpacity</li> <li>rasterHueRotate</li> <li>rasterBrightnessMin</li> <li>rasterBrightnessMax</li> <li>rasterSaturation</li> <li>rasterContrast</li> <li>rasterResampling</li> <li>rasterFadeDuration</li> </ul>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#visibility","title":"visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasteropacity","title":"rasterOpacity","text":"<p>Name <code>rasterOpacity</code></p> <p>Description The opacity at which the image will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasteropacitytransition","title":"rasterOpacityTransition","text":"<p>Name</p> <p><code>rasterOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterhuerotate","title":"rasterHueRotate","text":"<p>Name <code>rasterHueRotate</code></p> <p>Description Rotates hues around the color wheel.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>degrees</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterhuerotatetransition","title":"rasterHueRotateTransition","text":"<p>Name</p> <p><code>rasterHueRotateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterHueRotate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterbrightnessmin","title":"rasterBrightnessMin","text":"<p>Name <code>rasterBrightnessMin</code></p> <p>Description Increase or reduce the brightness of the image. The value is the minimum brightness.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterbrightnessmintransition","title":"rasterBrightnessMinTransition","text":"<p>Name</p> <p><code>rasterBrightnessMinTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterBrightnessMin propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterbrightnessmax","title":"rasterBrightnessMax","text":"<p>Name <code>rasterBrightnessMax</code></p> <p>Description Increase or reduce the brightness of the image. The value is the maximum brightness.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterbrightnessmaxtransition","title":"rasterBrightnessMaxTransition","text":"<p>Name</p> <p><code>rasterBrightnessMaxTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterBrightnessMax propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rastersaturation","title":"rasterSaturation","text":"<p>Name <code>rasterSaturation</code></p> <p>Description Increase or reduce the saturation of the image.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Minimum <code>-1</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rastersaturationtransition","title":"rasterSaturationTransition","text":"<p>Name</p> <p><code>rasterSaturationTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterSaturation propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rastercontrast","title":"rasterContrast","text":"<p>Name <code>rasterContrast</code></p> <p>Description Increase or reduce the contrast of the image.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Minimum <code>-1</code></p> <p>Maximum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rastercontrasttransition","title":"rasterContrastTransition","text":"<p>Name</p> <p><code>rasterContrastTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s rasterContrast propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterresampling","title":"rasterResampling","text":"<p>Name <code>rasterResampling</code></p> <p>Description The resampling/interpolation method to use for overscaling, also known as texture magnification filter</p> <p>Type <code>enum</code></p> <p>Default Value <code>linear</code></p> <p>Supported Values linear - (Bi)linear filtering interpolates pixel values using the weighted average of the four closest original source pixels creating a smooth but blurry look when overscaled nearest - Nearest neighbor filtering interpolates pixel values using the nearest original source pixel creating a sharp but pixelated look when overscaled</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterLayer/#rasterfadeduration","title":"rasterFadeDuration","text":"<p>Name <code>rasterFadeDuration</code></p> <p>Description Fade duration when a new tile is added.</p> <p>Type <code>number</code></p> <p>Default Value <code>300</code></p> <p>Units <code>milliseconds</code></p> <p>Minimum <code>0</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/RasterSource/","title":"RasterSource","text":""},{"location":"sdk-mobile/react-native/docs/RasterSource/#_1","title":"RasterSource","text":""},{"location":"sdk-mobile/react-native/docs/RasterSource/#rastersource","title":"RasterSource","text":"<ul> <li>RasterSource is a map content source that supplies raster image tiles to be shown on the map.The location of and metadata about the tiles are defined either by an option dictionaryor by an external file that conforms to the TileJSON specification.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/RasterSource/#props","title":"Props","text":"Prop Type Default Required Description id <code>string</code> <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code> A string that uniquely identifies the source. url <code>string</code> <code>none</code> <code>false</code> A URL to a TileJSON configuration file describing the source\u2019s contents and other metadata. tileUrlTemplates <code>Array</code> <code>none</code> <code>false</code> An array of tile URL templates. If multiple endpoints are specified, clients may use any combination of endpoints.Example: https://example.com/raster-tiles/{z}/{x}/{y}.png minZoomLevel <code>number</code> <code>none</code> <code>false</code> An unsigned integer that specifies the minimum zoom level at which to display tiles from the source.The value should be between 0 and 22, inclusive, and less thanmaxZoomLevel, if specified. The default value for this option is 0. maxZoomLevel <code>number</code> <code>none</code> <code>false</code> An unsigned integer that specifies the maximum zoom level at which to display tiles from the source.The value should be between 0 and 22, inclusive, and less thanminZoomLevel, if specified. The default value for this option is 22. tileSize <code>number</code> <code>none</code> <code>false</code> Size of the map tiles.default to 512. tms <code>boolean</code> <code>none</code> <code>false</code> Influences the y direction of the tile coordinates. (tms inverts y axis) attribution <code>string</code> <code>none</code> <code>false</code> An HTML or literal text string defining the buttons to be displayed in an action sheet when thesource is part of a map view\u2019s style and the map view\u2019s attribution button is pressed. children <code>React.ReactElement | React.ReactElement[]</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/SetUserTrackingMode/","title":"SetUserTrackingMode","text":"<pre><code>import React from 'react';\nimport {Text} from 'react-native';\nimport VietmapGL from '@vietmap/vietmap-gl-react-native';\n\nimport sheet from '../../styles/sheet';\nimport {onSortOptions} from '../../utils';\nimport TabBarPage from '../common/TabBarPage';\nimport Bubble from '../common/Bubble';\n\nconst styles = {\n  bubbleOne: {bottom: 80},\n  bubbleTwo: {bottom: 150},\n  bubbleThree: {bottom: 220},\n};\n\nclass SetUserTrackingModes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._trackingOptions = Object.keys(VietmapGL.UserTrackingMode)\n      .map(key =&gt; {\n        return {\n          label: key,\n          data: VietmapGL.UserTrackingMode[key],\n        };\n      })\n      .concat([\n        {\n          label: 'None',\n          data: 'none',\n        },\n      ])\n      .sort(onSortOptions);\n\n    this.state = {\n      showUserLocation: true,\n      userSelectedUserTrackingMode: this._trackingOptions[3].data,\n      currentTrackingMode: this._trackingOptions[3].data,\n      showsUserHeadingIndicator: false,\n    };\n\n    this.onTrackingChange = this.onTrackingChange.bind(this);\n    this.onUserTrackingModeChange = this.onUserTrackingModeChange.bind(this);\n    this.onToggleUserLocation = this.onToggleUserLocation.bind(this);\n    this.onToggleHeadingIndicator = this.onToggleHeadingIndicator.bind(this);\n  }\n\n  onTrackingChange(index, userTrackingMode) {\n    this.setState({\n      userSelectedUserTrackingMode: userTrackingMode,\n      currentTrackingMode: userTrackingMode,\n    });\n  }\n\n  onUserTrackingModeChange(e) {\n    const {followUserMode} = e.nativeEvent.payload;\n    this.setState({currentTrackingMode: followUserMode || 'none'});\n  }\n\n  onToggleUserLocation() {\n    this.setState({showUserLocation: !this.state.showUserLocation});\n  }\n\n  onToggleHeadingIndicator() {\n    this.setState({\n      showsUserHeadingIndicator: !this.state.showsUserHeadingIndicator,\n    });\n  }\n\n  get userTrackingModeText() {\n    switch (this.state.currentTrackingMode) {\n      case VietmapGL.UserTrackingMode.Follow:\n        return 'Follow';\n      case VietmapGL.UserTrackingMode.FollowWithCourse:\n        return 'FollowWithCourse';\n      case VietmapGL.UserTrackingMode.FollowWithHeading:\n        return 'FollowWithHeading';\n      default:\n        return 'None';\n    }\n  }\n\n  render() {\n    return (\n      &lt;TabBarPage\n        {...this.props}\n        scrollable\n        initialIndex={3}\n        options={this._trackingOptions}\n        onOptionPress={this.onTrackingChange}&gt;\n        &lt;VietmapGL.MapView style={sheet.matchParent}&gt;\n          &lt;VietmapGL.UserLocation\n            visible={this.state.showUserLocation}\n            showsUserHeadingIndicator={this.state.showsUserHeadingIndicator}\n          /&gt;\n\n          &lt;VietmapGL.Camera\n            defaultSettings={{\n              centerCoordinate: [-111.8678, 40.2866],\n              zoomLevel: 0,\n            }}\n            followUserLocation={\n              this.state.userSelectedUserTrackingMode !== 'none'\n            }\n            followUserMode={\n              this.state.userSelectedUserTrackingMode !== 'none'\n                ? this.state.userSelectedUserTrackingMode\n                : 'normal'\n            }\n            onUserTrackingModeChange={this.onUserTrackingModeChange}\n          /&gt;\n        &lt;/VietmapGL.MapView&gt;\n\n        &lt;Bubble style={styles.bubbleOne}&gt;\n          &lt;Text&gt;User Tracking Mode: {this.userTrackingModeText}&lt;/Text&gt;\n        &lt;/Bubble&gt;\n\n        &lt;Bubble onPress={this.onToggleUserLocation} style={styles.bubbleTwo}&gt;\n          &lt;Text&gt;\n            Toggle User Location:{' '}\n            {this.state.showUserLocation ? 'true' : 'false'}\n          &lt;/Text&gt;\n        &lt;/Bubble&gt;\n\n        &lt;Bubble\n          onPress={this.onToggleHeadingIndicator}\n          style={styles.bubbleThree}&gt;\n          &lt;Text&gt;\n            Toggle user heading indicator:{' '}\n            {this.state.showsUserHeadingIndicator ? 'true' : 'false'}\n          &lt;/Text&gt;\n        &lt;/Bubble&gt;\n      &lt;/TabBarPage&gt;\n    );\n  }\n}\n\nexport default SetUserTrackingModes;\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/","title":"ShapeSource","text":""},{"location":"sdk-mobile/react-native/docs/ShapeSource/#_1","title":"ShapeSource","text":""},{"location":"sdk-mobile/react-native/docs/ShapeSource/#shapesource","title":"ShapeSource","text":"<ul> <li>ShapeSource is a map content source that supplies vector shapes to be shown on the map.The shape may be a url or a GeoJSON object</li> </ul>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#props","title":"Props","text":"Prop Type Default Required Description id <code>string</code> <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code> A string that uniquely identifies the source. url <code>string</code> <code>none</code> <code>false</code> An HTTP(S) URL, absolute file URL, or local file URL relative to the current application\u2019s resource bundle. shape ` GeoJSON.GeometryCollection GeoJSON.Feature GeoJSON.FeatureCollection GeoJSON.Geometry<code>|</code>none<code>|</code>false` The contents of the source. A shape can represent a GeoJSON geometry, a feature, or a feature colllection. cluster <code>boolean</code> <code>none</code> <code>false</code> Enables clustering on the source for point shapes. clusterRadius <code>number</code> <code>none</code> <code>false</code> Specifies the radius of each cluster if clustering is enabled.A value of 512 produces a radius equal to the width of a tile.The default value is 50. clusterMaxZoomLevel <code>number</code> <code>none</code> <code>false</code> Specifies the maximum zoom level at which to cluster points if clustering is enabled.Defaults to one zoom level less than the value of maxZoomLevel so that, at the maximum zoom level,the shapes are not clustered. clusterProperties <code>shape</code> <code>none</code> <code>false</code> Specifies custom properties on the generated clusters if clusteringis enabled, aggregating values from clustered points.Has the form <code>{ \"property_name\": [operator, map_expression]}</code>, where <code>operator</code> is a custom reduce expression that references a special <code>[\"accumulated\"]</code> value -  it accumulates the property value from clusters/points the cluster contains <code>map_expression</code> produces the value of a single pointExample: <code>{ \"resultingSum\": [[\"+\", [\"accumulated\"], [\"get\", \"resultingSum\"]], [\"get\", \"scalerank\"]] }</code> \u00a0\u00a0[object Object] <code>ExpressionField</code> <code>none</code> <code>true</code> maxZoomLevel <code>number</code> <code>none</code> <code>false</code> Specifies the maximum zoom level at which to create vector tiles.A greater value produces greater detail at high zoom levels.The default value is 18. buffer <code>number</code> <code>none</code> <code>false</code> Specifies the size of the tile buffer on each side.A value of 0 produces no buffer. A value of 512 produces a buffer as wide as the tile itself.Larger values produce fewer rendering artifacts near tile edges and slower performance.The default value is 128. tolerance <code>number</code> <code>none</code> <code>false</code> Specifies the Douglas-Peucker simplification tolerance.A greater value produces simpler geometries and improves performance.The default value is 0.375. lineMetrics <code>boolean</code> <code>none</code> <code>false</code> Whether to calculate line distance metrics.This is required for line layers that specify lineGradient values.The default value is false. onPress <code>func</code> <code>none</code> <code>false</code> Source press listener, gets called when a user presses one of the children layers onlyif that layer has a higher z-index than another source layers@param {Object} event@param {Object[]} event.features - the geojson features that have hit by the press (might be multiple)@param {Object} event.coordinates - the coordinates of the click@param {Object} event.point - the point of the click@return voidsignature:<code>(event:OnPressEvent) =&gt; void</code> hitbox <code>shape</code> <code>none</code> <code>false</code> Overrides the default touch hitbox(44x44 pixels) for the source layers \u00a0\u00a0width <code>number</code> <code>none</code> <code>true</code> <code>width</code> of hitbox \u00a0\u00a0height <code>number</code> <code>none</code> <code>true</code> <code>height</code> of hitbox children <code>ReactElement | ReactElement[]</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/ShapeSource/#features","title":"Features","text":"<p><pre><code>    features([filter])\n</code></pre> Returns all features from the source that match the query parameters regardless of whether or not the feature iscurrently rendered on the map.</p>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#arguments","title":"Arguments","text":"Name Type Required Description <code>filter</code> <code>FilterExpression</code> <code>No</code> an optional filter statement to filter the returned Features. <pre><code>shapeSource.features()\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#getclusterexpansionzoom","title":"GetClusterExpansionZoom","text":"<pre><code>    getClusterExpansionZoom(feature)\n</code></pre> <p>Returns the zoom needed to expand the cluster.</p>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#arguments_1","title":"Arguments","text":"Name Type Required Description <code>feature</code> <code>Feature</code> <code>Yes</code> The feature cluster to expand. <pre><code>const zoom = await shapeSource.getClusterExpansionZoom(clusterId);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#getclusterleaves","title":"GetClusterLeaves","text":"<p><pre><code>    getClusterLeaves(feature, limit, offset)\n</code></pre> Returns the FeatureCollection from the cluster.</p>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#arguments_2","title":"Arguments","text":"Name Type Required Description <code>feature</code> <code>Feature</code> <code>Yes</code> The feature cluster to expand. <code>limit</code> <code>number</code> <code>Yes</code> The number of points to return. <code>offset</code> <code>number</code> <code>Yes</code> The amount of points to skip (for pagination). <pre><code>const collection = await shapeSource.getClusterLeaves(clusterId, limit, offset);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#getclusterchildren","title":"GetClusterChildren","text":"<p><pre><code>    getClusterChildren(feature)\n</code></pre> Returns the FeatureCollection from the cluster (on the next zoom level).</p>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#arguments_3","title":"Arguments","text":"Name Type Required Description <code>feature</code> <code>Feature</code> <code>Yes</code> The feature cluster to expand. <pre><code>const collection = await shapeSource.getClusterChildren(clusterId);\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#onpress","title":"OnPress","text":"<pre><code>    onPress(event)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/ShapeSource/#arguments_4","title":"Arguments","text":"Name Type Required Description <code>event</code> <code>NativeSyntheticEvent</code> <code>Yes</code> undefined"},{"location":"sdk-mobile/react-native/docs/ShowMapSample/","title":"ShowMapSample","text":"<p>Create <code>ShowMap.js</code> file and paste below code <pre><code>import { ReactElement, useEffect, useRef, useState } from \"react\"; \nimport VietmapGL from '@vietmap/vietmap-gl-react-native'; \nconst SimpleMap =  ReactElement =&gt; {\n  const [styleUrl, setStyleURL] = useState({ styleUrl: \"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\" })\n\n  const mapRef = useRef(null);\n\n  const [markerCoordinates, setMarkerCoordinates] = useState(null);\n  const [selectedFeatures, setSelectedFeatures] = useState([]);\n  const handleMapClick = async (feature) =&gt; {\n    // Handle the map click event\n    if (mapRef.current) {\n      console.log(feature);\n      const { geometry, properties } = feature;\n\n      setMarkerCoordinates(geometry.coordinates);\n      console.log('Clicked at coordinates:', geometry.coordinates);\n      console.log('Feature properties:', properties);\n\n      /// Query data from rendered map, like point, admin,...\n      const selectedFeatures = await mapRef.current.queryRenderedFeaturesAtPoint([properties.screenPointX, properties.screenPointX], null);\n\n      console.log('Rendered Features:', selectedFeatures);\n      setSelectedFeatures(selectedFeatures)\n\n    } else {\n      console.error('Feature failed')\n    }\n  };\n  const centerCoordinates = [106.6320, 10.7545]; // Replace with your desired coordinates\n  const lineCoordinates = [\n    [106.432502, 10.253619], // Starting point (longitude, latitude)\n    [106.732502, 10.653619], // Ending point (longitude, latitude)\n  ];\n  return (&lt;VietmapGL.MapView ref={mapRef} styleURL={styleUrl.styleUrl} style={{flex:1}} logoEnabled={false} onPress={handleMapClick}  &gt;\n\n    &lt;VietmapGL.Camera zoomLevel={13} followZoomLevel={13} followUserLocation={false} centerCoordinate={centerCoordinates} /&gt;\n\n    &lt;VietmapGL.ShapeSource id=\"lineSource\" shape={{ type: 'LineString', coordinates: lineCoordinates }}&gt;\n      &lt;VietmapGL.LineLayer id=\"lineLayer\" style={{ lineColor: 'red', lineWidth: 20 }} /&gt;\n    &lt;/VietmapGL.ShapeSource&gt;\n  &lt;/VietmapGL.MapView&gt;);\n};\nexport default SimpleMap;\n</code></pre></p>"},{"location":"sdk-mobile/react-native/docs/Style/","title":"Style","text":""},{"location":"sdk-mobile/react-native/docs/Style/#_1","title":"Style","text":""},{"location":"sdk-mobile/react-native/docs/Style/#style-is-a-component-that-automatically-adds-sources-layers-to-the-map-using-vietmap-style-speconly-sources-are-supportedother-fields-such-as-sprites-glyphs-etc-will-be-ignored-not-all-layer-source-attributes-from-the-style-spec-are-supported-in-general-the-supported-attributes-will-be-mentioned-under-todo-maintainer-forking-this-project-does-not-understand-the-above-comment-regarding-what-is-supported","title":"Style is a component that automatically adds sources / layers to the map using Vietmap Style Spec.Only <code>sources</code> &amp; are supported.Other fields such as <code>sprites</code>, <code>glyphs</code> etc. will be ignored. Not all layer / source attributes from the style spec are supported, in general the supported attributes will be mentioned under. TODO: Maintainer forking this project does not understand the above comment regarding what is supported.","text":""},{"location":"sdk-mobile/react-native/docs/Style/#props","title":"props","text":"Prop Type Default Required Description json <code>VietmapJSON | URL</code> <code>none</code> <code>false</code> A JSON object conforming to the schema described in the Vietmap Style Specification, or a URL to such JSON."},{"location":"sdk-mobile/react-native/docs/StyleSheet/","title":"StyleSheet","text":""},{"location":"sdk-mobile/react-native/docs/StyleSheet/#stylesheet","title":"StyleSheet","text":""},{"location":"sdk-mobile/react-native/docs/StyleSheet/#style-functions","title":"Style functions","text":""},{"location":"sdk-mobile/react-native/docs/StyleSheet/#zoom-based-expressions","title":"Zoom based expressions","text":"<p>This is a value function defining a style value that changes as the zoom level changes. The layout and paint attribute properties of the layer can be set to style function objects. Use a camera function to create the illusion of depth and control data density.</p> <pre><code>// color would change based on zoom level keys.\n[\n  'interpolate',\n  ['exponential', 1.5],\n  ['zoom'],\n  0, 'blue',\n  10, 'green',\n  20, 'yellow'\n];\n\n// Example of use inside stylesheet\n{\n  fillColor: [\n    'step',\n    ['zoom'],\n    'blue',\n    20, 'green'\n  ]\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/StyleSheet/#attribute-based-expressions","title":"Attribute based expressions","text":"<p>This is a value function defining a style value that changes with its properties. The layout and paint attribute properties of the layer can be set to style function objects. Use source functions to visually differentate types of features within the same layer or create data visualizations.</p> <pre><code>// would color the layer based the property rating=[1, 5]\n[\n  'step',\n  ['get', 'rating'],\n  'red',\n  2, 'orange',\n  3, 'yellow',\n  4, 'yellowgreen',\n  5, 'green',\n];\n\n// Example of use inside stylesheet\n{\n  circleColor: [\n    'step',\n    ['get', 'rating'],\n    'red',\n    2, 'orange',\n    3, 'yellow',\n    4, 'yellowgreen',\n    5, 'green',\n  ],\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/StyleSheet/#nested-expressions","title":"Nested expressions","text":"<p>This is a value function defining a style value that changes with the feature attributes at each map zoom level. The layout and paint attribute properties of the layer can be set to style function objects. Use composite functions to allow the appearance of a map feature to change with both its attributes and the map zoom level. Note that support for composite functions is not yet complete in the Android/iOS SDK's.</p> <pre><code>// would change based on the zoom level and rating value\n// {zoom_level}: [{value}, {style_value}]\n[\n  'step',\n  ['zoom'],\n  [\n    'step',\n    ['get','rating'],\n    0,\n    5, 5\n  ],\n  20, [\n    'step',\n    ['get','rating'],\n    0,\n    5, 20\n  ]\n]\n\n{\n  circleRadius: [\n    'step',\n    ['zoom'],\n    [ 'step',\n      ['get','rating'],\n      0,\n      5, 5\n    ],\n    20, [ 'step',\n          ['get','rating'],\n          0,\n          5, 20\n        ],\n]\n};\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/StyleSheet/#simple-expressions","title":"Simple expressions","text":""},{"location":"sdk-mobile/react-native/docs/StyleSheet/#get-attributename-replaces-identityattributename","title":"['get', attributeName] - replaces identity(attributeName)","text":"<p>This is just a source style function under the hood. For example say if you had a feature property with an attribute height. Identity means that it will just equal the attribute value, so there is no need to provide any stops</p> <pre><code>{\n  fillExtrusionHeight: ['get', 'height'],\n}\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/StyleSheet/#stylesheet-examples","title":"StyleSheet Examples","text":"<pre><code>const styles = {\n  buildings: {\n    fillColor: 'blue',\n  },\n  street: {\n    lineColor: 'green',\n  }\n};\n\n...\n\n&lt;Vietmap.FillLayer ... style={styles.buildings} /&gt;\n&lt;Vietmap.FillLayer ... style={styles.street} /&gt;\n</code></pre> <pre><code>const layerStyles = {\n  singlePoint: {\n    circleColor: 'green',\n    circleOpacity: 0.84,\n    circleStrokeWidth: 2,\n    circleStrokeColor: 'white',\n    circleRadius: 5,\n  },\n\n  clusteredPoints: {\n    circleColor: [\n      'interpolate',\n      ['exponential', 1.5],\n      ['get','point_count'],\n      25, 'yellow',\n      50, 'red',\n      75, 'blue',\n      100, 'orange',\n      300, 'pink',\n      750, 'white',\n    ],\n\n    circleRadius: [\n      'interpolate',\n      ['exponential', 1.5],\n      ['get','point_count'],\n      [0, 15],\n      [100, 20],\n      [750, 30],\n    ],\n\n    circleOpacity: 0.84,\n    circleStrokeWidth: 2,\n    circleStrokeColor: 'white',\n  },\n\n  clusterCount: {\n    textField: ['get', 'point_count'],\n    textSize: 12,\n  },\n});\n\n...\n\n&lt;Vietmap.SymbolLayer\n  id='pointCount'\n  style={layerStyles.clusterCount} /&gt;\n\n&lt;Vietmap.CircleLayer\n  id='clusteredPoints'\n  belowLayerID='pointCount'\n  filter={['has', 'point_count']}\n  style={layerStyles.clusteredPoints} /&gt;\n\n&lt;Vietmap.CircleLayer\n  id='singlePoint'\n  filter={['!has', 'point_count']}\n  style={layerStyles.singlePoint} /&gt;\n</code></pre> <pre><code>const layerStyles = Vietmap.StyleSheet.create({\n    building: {\n      fillExtrusionOpacity: 1,\n      fillExtrusionHeight: ['get', 'height'],\n      fillExtrusionBase: ['get', 'min_height'],\n      fillExtrusionColor: [\n        'interpolate',\n        ['exponential', 1.5],\n        ['get', 'height'],\n        [0, 'white'],\n        [50, 'blue'],\n        [100, 'red'],\n      ],\n    },\n    fillExtrusionColorTransition: { duration: 2000, delay: 0 },\n  },\n  streets\n:\n{\n  lineColor: 'blue',\n    lineWidth\n:\n  2,\n    lineOpacity\n:\n  0.50,\n    lineJoin\n:\n  Vietmap.LineJoin.Round,\n    lineCap\n:\n  Vietmap.LineCap.Round,\n    lineDasharray\n:\n  [2, 2],\n}\n,\n})\n;\n\n...\n\n&lt;Vietmap.FillExtrusionLayer\n  id='building3d'\n  sourceLayerID='building'\n  style={layerStyles.building}/&gt;\n\n&lt;Vietmap.LineLayer\n  id='streetLineColor'\n  sourceLayerID='road'\n  minZoomLevel={14}\n  belowLayerID='building3d'\n  style={layerStyles.streets}/&gt;\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/","title":"SymbolLayer","text":""},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#_1","title":"SymbolLayer","text":""},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbollayer","title":"SymbolLayer","text":"<ul> <li>SymbolLayer is a style layer that renders icon and text labels at points or along lines on the map.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#props","title":"Props","text":"Prop Type Default Required Description style <code>SymbolLayerStyleProps</code> <code>none</code> <code>false</code> Customizable style attributes children <code>ReactElement | ReactElement[]</code> <code>none</code> <code>false</code> @deprecated passed children used to create an image with id of symbol in style and also set the iconImageName property accordingly.This is now deprecated, use Image component instead. sourceID `` <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbolplacement","title":"symbolPlacement","text":"<p>Name <code>symbolPlacement</code></p> <p>Description Label placement relative to its geometry.</p> <p>Type <code>enum</code></p> <p>Default Value <code>point</code></p> <p>Supported Values point - The label is placed at the point where the geometry is located. line - The label is placed along the line of the geometry. Can only be used on <code>LineString</code> and <code>Polygon</code> geometries. line-center - The label is placed at the center of the line of the geometry. Can only be used on <code>LineString</code> and <code>Polygon</code> geometries. Note that a single feature in a vector tile may contain multiple line geometries.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbolspacing","title":"symbolSpacing","text":"<p>Name <code>symbolSpacing</code></p> <p>Description Distance between two symbol anchors.</p> <p>Type <code>number</code></p> <p>Default Value <code>250</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>1</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbolavoidedges","title":"symbolAvoidEdges","text":"<p>Name <code>symbolAvoidEdges</code></p> <p>Description If true, the symbols will not cross tile edges to avoid mutual collisions. Recommended in layers that don't have enough padding in the vector tile to prevent collisions, or if it is a point symbol layer placed after a line symbol layer. When using a client that supports global collision detection, like Vietmap GL JS version 0.42.0 or greater, enabling this property is not needed to prevent clipped labels at tile boundaries.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbolsortkey","title":"symbolSortKey","text":"<p>Name <code>symbolSortKey</code></p> <p>Description Sorts features in ascending order based on this value. Features with lower sort keys are drawn and placed first.  When <code>iconAllowOverlap</code> or <code>textAllowOverlap</code> is <code>false</code>, features with a lower sort key will have priority during placement. When <code>iconAllowOverlap</code> or <code>textAllowOverlap</code> is set to <code>true</code>, features with a higher sort key will overlap over features with a lower sort key.</p> <p>Type <code>number</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#symbolzorder","title":"symbolZOrder","text":"<p>Name <code>symbolZOrder</code></p> <p>Description Determines whether overlapping symbols in the same layer are rendered in the order that they appear in the data source or by their yPosition relative to the viewport. To control the order and prioritization of symbols otherwise, use <code>symbolSortKey</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>auto</code></p> <p>Supported Values auto - Sorts symbols by <code>symbol-sort-key</code> if set. Otherwise, sorts symbols by their y-position relative to the viewport if <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is set to <code>true</code> or <code>icon-ignore-placement</code> or <code>text-ignore-placement</code> is <code>false</code>. viewport-y - Sorts symbols by their y-position relative to the viewport if <code>icon-allow-overlap</code> or <code>text-allow-overlap</code> is set to <code>true</code> or <code>icon-ignore-placement</code> or <code>text-ignore-placement</code> is <code>false</code>. source - Sorts symbols by <code>symbol-sort-key</code> if set. Otherwise, no sorting is applied; symbols are rendered in the same order as the source data.</p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconallowoverlap","title":"iconAllowOverlap","text":"<p>Name <code>iconAllowOverlap</code></p> <p>Description If true, the icon will be visible even if it collides with other previously drawn symbols.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>iconImage</code></p> <p>**Disabled By <code>iconOverlap</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconignoreplacement","title":"iconIgnorePlacement","text":"<p>Name <code>iconIgnorePlacement</code></p> <p>Description If true, other symbols can be visible even if they collide with the icon.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconoptional","title":"iconOptional","text":"<p>Name <code>iconOptional</code></p> <p>Description If true, text will display without their corresponding icons when the icon collides with other symbols and the text does not.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>iconImage, textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconrotationalignment","title":"iconRotationAlignment","text":"<p>Name <code>iconRotationAlignment</code></p> <p>Description In combination with <code>symbolPlacement</code>, determines the rotation behavior of icons.</p> <p>Type <code>enum</code></p> <p>Default Value <code>auto</code></p> <p>Supported Values map - When <code>symbol-placement</code> is set to <code>point</code>, aligns icons east-west. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns icon x-axes with the line. viewport - Produces icons whose x-axes are aligned with the x-axis of the viewport, regardless of the value of <code>symbol-placement</code>. auto - When <code>symbol-placement</code> is set to <code>point</code>, this is equivalent to <code>viewport</code>. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, this is equivalent to <code>map</code>.</p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconsize","title":"iconSize","text":"<p>Name <code>iconSize</code></p> <p>Description Scales the original size of the icon by the provided factor. The new pixel size of the image will be the original pixel size multiplied by <code>iconSize</code>. 1 is the original size; 3 triples the size of the image.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Units <code>factor of the original icon size</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#icontextfit","title":"iconTextFit","text":"<p>Name <code>iconTextFit</code></p> <p>Description Scales the icon to fit around the associated text.</p> <p>Type <code>enum</code></p> <p>Default Value <code>none</code></p> <p>Supported Values none - The icon is displayed at its intrinsic aspect ratio. width - The icon is scaled in the x-dimension to fit the width of the text. height - The icon is scaled in the y-dimension to fit the height of the text. both - The icon is scaled in both x- and y-dimensions.</p> <p>Requires <code>iconImage, textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#icontextfitpadding","title":"iconTextFitPadding","text":"<p>Name <code>iconTextFitPadding</code></p> <p>Description Size of the additional area added to dimensions determined by <code>iconTextFit</code>, in clockwise order: top, right, bottom, left.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0,0,0]</code></p> <p>Units <code>pixels</code></p> <p>Requires <code>iconImage, textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconimage","title":"iconImage","text":"<p>Name <code>iconImage</code></p> <p>Description Name of image in sprite to use for drawing an image background.</p> <p>Type <code>resolvedImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconrotate","title":"iconRotate","text":"<p>Name <code>iconRotate</code></p> <p>Description Rotates the icon clockwise.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>degrees</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconpadding","title":"iconPadding","text":"<p>Name <code>iconPadding</code></p> <p>Description Size of additional area round the icon bounding box used for detecting symbol collisions. Values are declared using CSS margin shorthand syntax: a single value applies to all four sides; two values apply to [top/bottom, left/right]; three values apply to [top, left/right, bottom]; four values apply to [top, right, bottom, left]. For backwards compatibility, a single bare number is accepted, and treated the same as a oneElement array  padding applied to all sides.</p> <p>Type <code>number</code></p> <p>Default Value <code>2</code></p> <p>Units <code>pixels</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconkeepupright","title":"iconKeepUpright","text":"<p>Name <code>iconKeepUpright</code></p> <p>Description If true, the icon may be flipped to prevent it from being rendered upsideDown.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconoffset","title":"iconOffset","text":"<p>Name <code>iconOffset</code></p> <p>Description Offset distance of icon from its anchor. Positive values indicate right and down, while negative values indicate left and up. Each component is multiplied by the value of <code>iconSize</code> to obtain the final offset in pixels. When combined with <code>iconRotate</code> the offset will be as if the rotated direction was up.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconanchor","title":"iconAnchor","text":"<p>Name <code>iconAnchor</code></p> <p>Description Part of the icon placed closest to the anchor.</p> <p>Type <code>enum</code></p> <p>Default Value <code>center</code></p> <p>Supported Values center - The center of the icon is placed closest to the anchor. left - The left side of the icon is placed closest to the anchor. right - The right side of the icon is placed closest to the anchor. top - The top of the icon is placed closest to the anchor. bottom - The bottom of the icon is placed closest to the anchor. top-left - The top left corner of the icon is placed closest to the anchor. top-right - The top right corner of the icon is placed closest to the anchor. bottom-left - The bottom left corner of the icon is placed closest to the anchor. bottom-right - The bottom right corner of the icon is placed closest to the anchor.</p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconpitchalignment","title":"iconPitchAlignment","text":"<p>Name <code>iconPitchAlignment</code></p> <p>Description Orientation of icon when map is pitched.</p> <p>Type <code>enum</code></p> <p>Default Value <code>auto</code></p> <p>Supported Values map - The icon is aligned to the plane of the map. viewport - The icon is aligned to the plane of the viewport. auto - Automatically matches the value of <code>icon-rotation-alignment</code>.</p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textpitchalignment","title":"textPitchAlignment","text":"<p>Name <code>textPitchAlignment</code></p> <p>Description Orientation of text when map is pitched.</p> <p>Type <code>enum</code></p> <p>Default Value <code>auto</code></p> <p>Supported Values map - The text is aligned to the plane of the map. viewport - The text is aligned to the plane of the viewport. auto - Automatically matches the value of <code>text-rotation-alignment</code>.</p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textrotationalignment","title":"textRotationAlignment","text":"<p>Name <code>textRotationAlignment</code></p> <p>Description In combination with <code>symbolPlacement</code>, determines the rotation behavior of the individual glyphs forming the text.</p> <p>Type <code>enum</code></p> <p>Default Value <code>auto</code></p> <p>Supported Values map - When <code>symbol-placement</code> is set to <code>point</code>, aligns text east-west. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns text x-axes with the line. viewport - Produces glyphs whose x-axes are aligned with the x-axis of the viewport, regardless of the value of <code>symbol-placement</code>. viewport-glyph - When <code>symbol-placement</code> is set to <code>point</code>, aligns text to the x-axis of the viewport. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, aligns glyphs to the x-axis of the viewport and places them along the line. auto - When <code>symbol-placement</code> is set to <code>point</code>, this is equivalent to <code>viewport</code>. When <code>symbol-placement</code> is set to <code>line</code> or <code>line-center</code>, this is equivalent to <code>map</code>.</p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textfield","title":"textField","text":"<p>Name <code>textField</code></p> <p>Description Value to use for a text label. If a plain <code>string</code> is provided, it will be treated as a <code>formatted</code> with default/inherited formatting options.</p> <p>Type <code>formatted</code></p> <p>Default Value ``</p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textfont","title":"textFont","text":"<p>Name <code>textFont</code></p> <p>Description Font stack to use for displaying text.</p> <p>Type <code>array&lt;string&gt;</code></p> <p>Default Value <code>[Open Sans Regular,Arial Unicode MS Regular]</code></p> <p>Requires <code>textField</code></p> <p>Supported Style Functions <code>camera</code> **Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textsize","title":"textSize","text":"<p>Name <code>textSize</code></p> <p>Description Font size.</p> <p>Type <code>number</code></p> <p>Default Value <code>16</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textmaxwidth","title":"textMaxWidth","text":"<p>Name <code>textMaxWidth</code></p> <p>Description The maximum line width for text wrapping.</p> <p>Type <code>number</code></p> <p>Default Value <code>10</code></p> <p>Units <code>ems</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>textField</code></p> <p>Supported Style Functions <code>camera</code> **Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textlineheight","title":"textLineHeight","text":"<p>Name <code>textLineHeight</code></p> <p>Description Text leading value for multiLine text.</p> <p>Type <code>number</code></p> <p>Default Value <code>1.2</code></p> <p>Units <code>ems</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textletterspacing","title":"textLetterSpacing","text":"<p>Name <code>textLetterSpacing</code></p> <p>Description Text tracking amount.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>ems</code></p> <p>Requires <code>textField</code></p> <p>Supported Style Functions <code>camera</code> **Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textjustify","title":"textJustify","text":"<p>Name <code>textJustify</code></p> <p>Description Text justification options.</p> <p>Type <code>enum</code></p> <p>Default Value <code>center</code></p> <p>Supported Values auto - The text is aligned towards the anchor position. left - The text is aligned to the left. center - The text is centered. right - The text is aligned to the right.</p> <p>Requires <code>textField</code></p> <p>Supported Style Functions <code>camera</code> **Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textradialoffset","title":"textRadialOffset","text":"<p>Name <code>textRadialOffset</code></p> <p>Description Radial offset of text, in the direction of the symbol's anchor. Useful in combination with <code>textVariableAnchor</code>, which defaults to using the twoDimensional <code>textOffset</code> if present.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>ems</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textvariableanchor","title":"textVariableAnchor","text":"<p>Name <code>textVariableAnchor</code></p> <p>Description To increase the chance of placing highPriority labels on the map, you can provide an array of <code>textAnchor</code> locations: the renderer will attempt to place the label at each location, in order, before moving onto the next label. Use <code>textJustify: auto</code> to choose justification based on anchor position. To apply an offset, use the <code>textRadialOffset</code> or the twoDimensional <code>textOffset</code>.</p> <p>Type <code>array&lt;enum&gt;</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textanchor","title":"textAnchor","text":"<p>Name <code>textAnchor</code></p> <p>Description Part of the text placed closest to the anchor.</p> <p>Type <code>enum</code></p> <p>Default Value <code>center</code></p> <p>Supported Values center - The center of the text is placed closest to the anchor. left - The left side of the text is placed closest to the anchor. right - The right side of the text is placed closest to the anchor. top - The top of the text is placed closest to the anchor. bottom - The bottom of the text is placed closest to the anchor. top-left - The top left corner of the text is placed closest to the anchor. top-right - The top right corner of the text is placed closest to the anchor. bottom-left - The bottom left corner of the text is placed closest to the anchor. bottom-right - The bottom right corner of the text is placed closest to the anchor.</p> <p>Requires <code>textField</code></p> <p>**Disabled By <code>textVariableAnchor</code></p> <p>Supported Style Functions <code>camera</code> **Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textmaxangle","title":"textMaxAngle","text":"<p>Name <code>textMaxAngle</code></p> <p>Description Maximum angle change between adjacent characters.</p> <p>Type <code>number</code></p> <p>Default Value <code>45</code></p> <p>Units <code>degrees</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textwritingmode","title":"textWritingMode","text":"<p>Name <code>textWritingMode</code></p> <p>Description The property allows control over a symbol's orientation. Note that the property values act as a hint, so that a symbol whose language doesn\u2019t support the provided orientation will be laid out in its natural orientation. Example: English point symbol will be rendered horizontally even if array value contains single 'vertical' enum value. The order of elements in an array define priority order for the placement of an orientation variant.</p> <p>Type <code>array&lt;enum&gt;</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textrotate","title":"textRotate","text":"<p>Name <code>textRotate</code></p> <p>Description Rotates the text clockwise.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>degrees</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textpadding","title":"textPadding","text":"<p>Name <code>textPadding</code></p> <p>Description Size of the additional area around the text bounding box used for detecting symbol collisions.</p> <p>Type <code>number</code></p> <p>Default Value <code>2</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textkeepupright","title":"textKeepUpright","text":"<p>Name <code>textKeepUpright</code></p> <p>Description If true, the text may be flipped vertically to prevent it from being rendered upsideDown.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>true</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texttransform","title":"textTransform","text":"<p>Name <code>textTransform</code></p> <p>Description Specifies how to capitalize text, similar to the CSS <code>textTransform</code> property.</p> <p>Type <code>enum</code></p> <p>Default Value <code>none</code></p> <p>Supported Values none - The text is not altered. uppercase - Forces all letters to be displayed in uppercase. lowercase - Forces all letters to be displayed in lowercase.</p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textoffset","title":"textOffset","text":"<p>Name <code>textOffset</code></p> <p>Description Offset distance of text from its anchor. Positive values indicate right and down, while negative values indicate left and up. If used with textVariableAnchor, input values will be taken as absolute values. Offsets along the x and yAxis will be applied automatically based on the anchor position.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>ems</code></p> <p>Requires <code>textField</code></p> <p>**Disabled By <code>textRadialOffset</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textallowoverlap","title":"textAllowOverlap","text":"<p>Name <code>textAllowOverlap</code></p> <p>Description If true, the text will be visible even if it collides with other previously drawn symbols.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>textField</code></p> <p>**Disabled By <code>textOverlap</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textignoreplacement","title":"textIgnorePlacement","text":"<p>Name <code>textIgnorePlacement</code></p> <p>Description If true, other symbols can be visible even if they collide with the text.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textoptional","title":"textOptional","text":"<p>Name <code>textOptional</code></p> <p>Description If true, icons will display without their corresponding text when the text collides with other symbols and the icon does not.</p> <p>Type <code>boolean</code></p> <p>Default Value <code>false</code></p> <p>Requires <code>textField, iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#visibility","title":"visibility","text":"<p>Name <code>visibility</code></p> <p>Description Whether this layer is displayed.</p> <p>Type <code>enum</code></p> <p>Default Value <code>visible</code></p> <p>Supported Values visible - The layer is shown. none - The layer is not shown.</p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconopacity","title":"iconOpacity","text":"<p>Name <code>iconOpacity</code></p> <p>Description The opacity at which the icon will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>**Maximum <code>1</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconopacitytransition","title":"iconOpacityTransition","text":"<p>Name</p> <p><code>iconOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconcolor","title":"iconColor","text":"<p>Name <code>iconColor</code></p> <p>Description The color of the icon. This can only be used with sdf icons.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconcolortransition","title":"iconColorTransition","text":"<p>Name</p> <p><code>iconColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhalocolor","title":"iconHaloColor","text":"<p>Name <code>iconHaloColor</code></p> <p>Description The color of the icon's halo. Icon halos can only be used with SDF icons.</p> <p>Type <code>color</code></p> <p>Default Value <code>rgba(0, 0, 0, 0)</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhalocolortransition","title":"iconHaloColorTransition","text":"<p>Name</p> <p><code>iconHaloColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconHaloColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhalowidth","title":"iconHaloWidth","text":"<p>Name <code>iconHaloWidth</code></p> <p>Description Distance of halo to the icon outline.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhalowidthtransition","title":"iconHaloWidthTransition","text":"<p>Name</p> <p><code>iconHaloWidthTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconHaloWidth propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhaloblur","title":"iconHaloBlur","text":"<p>Name <code>iconHaloBlur</code></p> <p>Description Fade out the halo towards the outside.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#iconhaloblurtransition","title":"iconHaloBlurTransition","text":"<p>Name</p> <p><code>iconHaloBlurTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconHaloBlur propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#icontranslate","title":"iconTranslate","text":"<p>Name <code>iconTranslate</code></p> <p>Description Distance that the icon's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Requires <code>iconImage</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#icontranslatetransition","title":"iconTranslateTransition","text":"<p>Name</p> <p><code>iconTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s iconTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#icontranslateanchor","title":"iconTranslateAnchor","text":"<p>Name <code>iconTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>iconTranslate</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - Icons are translated relative to the map. viewport - Icons are translated relative to the viewport.</p> <p>Requires <code>iconImage, iconTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textopacity","title":"textOpacity","text":"<p>Name <code>textOpacity</code></p> <p>Description The opacity at which the text will be drawn.</p> <p>Type <code>number</code></p> <p>Default Value <code>1</code></p> <p>Minimum <code>0</code></p> <p>**Maximum <code>1</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textopacitytransition","title":"textOpacityTransition","text":"<p>Name</p> <p><code>textOpacityTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textOpacity propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textcolor","title":"textColor","text":"<p>Name <code>textColor</code></p> <p>Description The color with which the text will be drawn.</p> <p>Type <code>color</code></p> <p>Default Value <code>#000000</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#textcolortransition","title":"textColorTransition","text":"<p>Name</p> <p><code>textColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthalocolor","title":"textHaloColor","text":"<p>Name <code>textHaloColor</code></p> <p>Description The color of the text's halo, which helps it stand out from backgrounds.</p> <p>Type <code>color</code></p> <p>Default Value <code>rgba(0, 0, 0, 0)</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthalocolortransition","title":"textHaloColorTransition","text":"<p>Name</p> <p><code>textHaloColorTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textHaloColor propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthalowidth","title":"textHaloWidth","text":"<p>Name <code>textHaloWidth</code></p> <p>Description Distance of halo to the font outline. Max text halo width is \u00bc of the fontSize.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthalowidthtransition","title":"textHaloWidthTransition","text":"<p>Name</p> <p><code>textHaloWidthTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textHaloWidth propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthaloblur","title":"textHaloBlur","text":"<p>Name <code>textHaloBlur</code></p> <p>Description The halo's fadeout distance towards the outside.</p> <p>Type <code>number</code></p> <p>Default Value <code>0</code></p> <p>Units <code>pixels</code></p> <p>Minimum <code>0</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom, feature, feature-state</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texthaloblurtransition","title":"textHaloBlurTransition","text":"<p>Name</p> <p><code>textHaloBlurTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textHaloBlur propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texttranslate","title":"textTranslate","text":"<p>Name <code>textTranslate</code></p> <p>Description Distance that the text's anchor is moved from its original placement. Positive values indicate right and down, while negative values indicate left and up.</p> <p>Type <code>array&lt;number&gt;</code></p> <p>Default Value <code>[0,0]</code></p> <p>Units <code>pixels</code></p> <p>Requires <code>textField</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texttranslatetransition","title":"textTranslateTransition","text":"<p>Name</p> <p><code>textTranslateTransition</code></p> <p>Description</p> <p>The transition affecting any changes to this layer\u2019s textTranslate propery.</p> <p>Type</p> <p><code>{ duration, delay }</code></p> <p>Units <code>milliseconds</code></p> <p>Default Value <code>{duration: 300, delay: 0}</code></p>"},{"location":"sdk-mobile/react-native/docs/SymbolLayer/#texttranslateanchor","title":"textTranslateAnchor","text":"<p>Name <code>textTranslateAnchor</code></p> <p>Description Controls the frame of reference for <code>textTranslate</code>.</p> <p>Type <code>enum</code></p> <p>Default Value <code>map</code></p> <p>Supported Values map - The text is translated relative to the map. viewport - The text is translated relative to the viewport.</p> <p>Requires <code>textField, textTranslate</code></p> <p>Expression</p> <p>Parameters: <code>zoom</code></p>"},{"location":"sdk-mobile/react-native/docs/UserLocation/","title":"UserLocation","text":""},{"location":"sdk-mobile/react-native/docs/UserLocation/#_1","title":"UserLocation","text":""},{"location":"sdk-mobile/react-native/docs/UserLocation/#_2","title":"UserLocation","text":""},{"location":"sdk-mobile/react-native/docs/UserLocation/#props","title":"Props","text":"Prop Type Default Required Description animated <code>boolean</code> <code>true</code> <code>false</code> Whether location icon is animated between updates renderMode <code>'normal' | 'native'</code> <code>'normal'</code> <code>false</code> Which render mode to use.Can either be <code>normal</code> or <code>native</code> androidRenderMode <code>'normal' | 'compass' | 'gps'</code> <code>none</code> <code>false</code> native/android only render mode - normal: just a circle - compass: triangle with heading - gps: large arrow@platform android visible <code>boolean</code> <code>true</code> <code>false</code> Whether location icon is visible showsUserHeadingIndicator <code>boolean</code> <code>false</code> <code>false</code> Show or hide small arrow which indicates direction the device is pointing relative to north. minDisplacement <code>number</code> <code>0</code> <code>false</code> Minimum amount of movement before GPS location is updated in meters children <code>ReactElement | ReactElement[]</code> <code>none</code> <code>false</code> Custom location icon of type vietmap-gl-native componentsNOTE: Forking maintainer does not understand the above comment."},{"location":"sdk-mobile/react-native/docs/UserLocation/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/UserLocation/#setlocationmanager","title":"SetLocationManager","text":"<p><pre><code>    setLocationManager({running}: {running: boolean})\n</code></pre> Whether to start or stop listening to the locationManagerNotice, that listening will start automatically wheneither <code>onUpdate</code> or <code>visible</code> are set</p>"},{"location":"sdk-mobile/react-native/docs/UserLocation/#arguments","title":"Arguments","text":"Name Type Required Description <code>{running}: {running: boolean}</code> <code>{running:boolean}</code> <code>Yes</code> undefined"},{"location":"sdk-mobile/react-native/docs/UserLocation/#needslocationmanagerrunning","title":"NeedsLocationManagerRunning()","text":"<p><pre><code>    needsLocationManagerRunning()\n</code></pre> If locationManager should be running</p>"},{"location":"sdk-mobile/react-native/docs/UserLocation/#arguments_1","title":"Arguments","text":"Name Type Required Description"},{"location":"sdk-mobile/react-native/docs/VectorSource/","title":"VectorSource","text":""},{"location":"sdk-mobile/react-native/docs/VectorSource/#_1","title":"VectorSource","text":""},{"location":"sdk-mobile/react-native/docs/VectorSource/#vectorsource","title":"VectorSource","text":"<ul> <li>VectorSource is a map content source that supplies tiled vector data in Vietmap Vector Tile format to be shown on the map.The location of and metadata about the tiles are defined either by an option dictionary or by an external file that conforms to the TileJSON specification.</li> </ul>"},{"location":"sdk-mobile/react-native/docs/VectorSource/#props","title":"Props","text":"Prop Type Default Required Description id <code>string</code> <code>VietmapGL.StyleSource.DefaultSourceID</code> <code>false</code> A string that uniquely identifies the source. url <code>string</code> <code>none</code> <code>false</code> A URL to a TileJSON configuration file describing the source\u2019s contents and other metadata. tileUrlTemplates <code>Array</code> <code>none</code> <code>false</code> An array of tile URL templates. If multiple endpoints are specified, clients may use any combination of endpoints.Example: https://example.com/vector-tiles/{z}/{x}/{y}.pbf minZoomLevel <code>number</code> <code>none</code> <code>false</code> An unsigned integer that specifies the minimum zoom level at which to display tiles from the source.The value should be between 0 and 22, inclusive, and less thanmaxZoomLevel, if specified. The default value for this option is 0. maxZoomLevel <code>number</code> <code>none</code> <code>false</code> An unsigned integer that specifies the maximum zoom level at which to display tiles from the source.The value should be between 0 and 22, inclusive, and less thanminZoomLevel, if specified. The default value for this option is 22. tms <code>boolean</code> <code>none</code> <code>false</code> Influences the y direction of the tile coordinates. (tms inverts y axis) attribution <code>string</code> <code>none</code> <code>false</code> An HTML or literal text string defining the buttons to be displayed in an action sheet when thesource is part of a map view\u2019s style and the map view\u2019s attribution button is pressed. onPress <code>func</code> <code>none</code> <code>false</code> Source press listener, gets called when a user presses one of the children layers onlyif that layer has a higher z-index than another source layers@param {Object} event@param {Object[]} event.features - the geojson features that have hit by the press (might be multiple)@param {Object} event.coordinates - the coordinates of the click@param {Object} event.point - the point of the clicksignature:<code>(event:OnPressEvent) =&gt; void</code> hitbox <code>shape</code> <code>none</code> <code>false</code> Overrides the default touch hitbox(44x44 pixels) for the source layers \u00a0\u00a0width <code>number</code> <code>none</code> <code>true</code> <code>width</code> of hitbox \u00a0\u00a0height <code>number</code> <code>none</code> <code>true</code> <code>height</code> of hitbox children <code>React.ReactElement | React.ReactElement[]</code> <code>none</code> <code>false</code>"},{"location":"sdk-mobile/react-native/docs/VectorSource/#methods","title":"Methods","text":""},{"location":"sdk-mobile/react-native/docs/VectorSource/#features","title":"Features","text":"<p><pre><code>    features([layerIDs],[filter])\n</code></pre> Returns all features that match the query parameters regardless of whether or not the feature iscurrently rendered on the map. The domain of the query includes all currently-loaded vector tilesand GeoJSON source tiles. This function does not check tiles outside of the visible viewport.</p>"},{"location":"sdk-mobile/react-native/docs/VectorSource/#arguments","title":"Arguments","text":"Name Type Required Description <code>layerIDs</code> <code>Array</code> <code>No</code> A set of strings that correspond to the names of layers defined in the current style. Only the features contained in these layers are included in the returned array. <code>filter</code> <code>FilterExpression</code> <code>No</code> an optional filter statement to filter the returned Features. <pre><code>vectorSource.features(['id1', 'id2'])\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/VectorSource/#onpress","title":"OnPress","text":"<pre><code>    onPress(event)\n</code></pre>"},{"location":"sdk-mobile/react-native/docs/VectorSource/#arguments_1","title":"Arguments","text":"Name Type Required Description <code>event</code> <code>NativeSyntheticEvent</code> <code>Yes</code> undefined"},{"location":"sdk-mobile/react-native/docs/Vietmap/","title":"Vietmap","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#vietmap","title":"Vietmap","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#_1","title":"Vietmap","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#methods","title":"methods","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#setapikeyapikey","title":"setApiKey(apiKey)","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#arguments","title":"arguments","text":"Name Type Required Description <code>apiKey</code> <code>String</code> <code>Yes</code> Provide null value like this code: <code>Vietmap.setApiKey(null)</code>"},{"location":"sdk-mobile/react-native/docs/Vietmap/#description","title":"Description","text":"<p>sets the apiKey, which is not required when using Vietmap tiles</p>"},{"location":"sdk-mobile/react-native/docs/Vietmap/#addcustomheaderheadername-headervalue","title":"addCustomHeader(headerName, headerValue)","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#arguments_1","title":"arguments","text":"Name Type Required Description <code>headerName</code> <code>String</code> <code>Yes</code> name for customHeader <code>headerValue</code> <code>String</code> <code>Yes</code> value for customHeader"},{"location":"sdk-mobile/react-native/docs/Vietmap/#description_1","title":"Description","text":"<p>also see CustomHttpHeaders</p>"},{"location":"sdk-mobile/react-native/docs/Vietmap/#removecustomheaderheadername","title":"removeCustomHeader(headerName)","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#arguments_2","title":"arguments","text":"Name Type Required Description <code>headerName</code> <code>String</code> <code>Yes</code> name of customHeader to be removed"},{"location":"sdk-mobile/react-native/docs/Vietmap/#description_2","title":"Description","text":"<p>also see CustomHttpHeaders</p>"},{"location":"sdk-mobile/react-native/docs/Vietmap/#android-only","title":"Android only","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#requestandroidlocationpermissions","title":"requestAndroidLocationPermissions()","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#description_3","title":"Description","text":"<p>Opens Android Location Permission prompt. Returns a Promise which resolves into a boolean. Either permission was granted or denied.</p>"},{"location":"sdk-mobile/react-native/docs/Vietmap/#setconnectedconnected","title":"setConnected(connected)","text":""},{"location":"sdk-mobile/react-native/docs/Vietmap/#arguments_3","title":"arguments","text":"Name Type Required Description <code>connected</code> <code>Boolean</code> <code>Yes</code> whether or not the SDK should assume it is online"},{"location":"sdk-mobile/react-native/docs/Vietmap/#description_4","title":"Description","text":"<p>If you want to fully block map tile requests over the network, such as for a low-data / offline application.</p>"},{"location":"sdk-mobile/react-native/docs/coordinates/","title":"Coordinates","text":""},{"location":"sdk-mobile/react-native/docs/coordinates/#_1","title":"Coordinates","text":""},{"location":"sdk-mobile/react-native/docs/coordinates/#coorinates-sent-by-locationmanager","title":"Coorinates sent by locationManager","text":""},{"location":"sdk-mobile/react-native/docs/location/","title":"Location","text":""},{"location":"sdk-mobile/react-native/docs/location/#_1","title":"Location","text":""},{"location":"sdk-mobile/react-native/docs/location/#location-sent-by-locationmanager","title":"Location sent by locationManager","text":""},{"location":"sdk-mobile/react-native/docs/snapshotManager/","title":"snapshotManager","text":""},{"location":"sdk-mobile/react-native/docs/snapshotManager/#_1","title":"snapshotManager","text":""},{"location":"sdk-mobile/react-native/docs/snapshotManager/#the-snapshotmanager-generates-static-raster-images-of-the-mapeach-snapshot-image-depicts-a-portion-of-a-map-defined-by-an-snapshotoptions-object-you-providethe-snapshotter-generates-the-snapshot-asynchronous","title":"The snapshotManager generates static raster images of the map.Each snapshot image depicts a portion of a map defined by an SnapshotOptions object you provide.The snapshotter generates the snapshot asynchronous.","text":""},{"location":"sdk-mobile/react-native/docs/snapshotManager/#methods","title":"methods","text":""},{"location":"sdk-mobile/react-native/docs/snapshotManager/#takesnapoptions","title":"takeSnap(options)","text":"<p>Takes a snapshot of the base map using the provided Snapshot options. NOTE pitch, heading, zoomLevel only works when centerCoordinate is set!</p>"},{"location":"sdk-mobile/react-native/docs/snapshotManager/#arguments","title":"arguments","text":"Name Type Required Description <code>options</code> <code>SnapshotOptions</code> <code>Yes</code> Snapshot options for create a static image of the base map <pre><code>// creates a temp file png of base map\nconst uri = await VietmapGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: VietmapGL.StyleURL.Default,\n  writeToDisk: true, // Create a temporary file\n});\n\n// creates base64 png of base map without logo\nconst uri = await VietmapGL.snapshotManager.takeSnap({\n  centerCoordinate: [-74.126410, 40.797968],\n  width: width,\n  height: height,\n  zoomLevel: 12,\n  pitch: 30,\n  heading: 20,\n  styleURL: VietmapGL.StyleURL.Default,\n  withLogo: false,  \n});\n\n// creates snapshot with bounds\nconst uri = await VietmapGL.snapshotManager.takeSnap({\n  bounds: [[-74.126410, 40.797968], [-74.143727, 40.772177]],\n  width: width,\n  height: height,\n  styleURL: VietmapGL.StyleURL.Default,\n});\n</code></pre>"},{"location":"sdk-mobile/sdk-android/map/","title":"Map","text":""},{"location":"sdk-mobile/sdk-android/map/#gradle-and-androidmanifest-configure","title":"Gradle and AndroidManifest configure","text":""},{"location":"sdk-mobile/sdk-android/map/#add-dependencies-below-to-buildgradle-module-app","title":"Add dependencies below to build.gradle module app","text":"<p><pre><code>    implementation 'com.github.vietmap-company:maps-sdk-android:2.0.4'\n    implementation 'com.github.vietmap-company:maps-sdk-plugin-localization-android:2.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.squareup.okhttp3:okhttp:4.9.3'\n    implementation 'com.google.code.gson:gson:2.10.1'\n</code></pre> Configure the jitpack repository in the setting.gradle file <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // Add two lines below to the repositories block (In setting.gradle file)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre> With older projects, place it to the build.gradle file at module project <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre> Upgrade the compileSdk and targetSdk to version 34 <pre><code>compileSdk 34\n</code></pre> <pre><code>targetSdk 34\n</code></pre></p> <p>Add the necessary permission request to the AndroidManifest.xml file <pre><code>    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#create-a-mapview-activity","title":"Create a mapview activity","text":"<p>Create new VietMapMapViewActivity Add the code below to xml file of created activity <pre><code>    &lt;vn.vietmap.vietmapsdk.maps.MapView\n        android:id=\"@+id/vmMapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:vietmap_cameraZoom=\"1\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#add-necessary-variable-to-the-activity","title":"Add necessary variable to the activity","text":"<pre><code>    private lateinit var mapView: MapView\n    private lateinit var vietMapGL: VietMapGL\n\n    private var polylines: MutableList&lt;Polyline&gt;? = null\n    private var polylineOptions: ArrayList&lt;PolylineOptions?&gt;? = ArrayList()\n    private var polygon: Polygon? = null\n\n    companion object {\n        private const val STATE_POLYLINE_OPTIONS = \"polylineOptions\"\n        private val HOCHIMINH = LatLng(10.791257, 106.669189)\n        private val NINHTHUAN = LatLng(11.550254, 108.960579)\n        private val DANANG = LatLng(16.045746, 108.202241)\n        private val HUE = LatLng(16.469602, 107.577462)\n        private val NGHEAN = LatLng(18.932151, 105.577207)\n        private val HANOI = LatLng(21.024696, 105.833099)\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/map/#add-the-code-below-to-oncreated-function","title":"Add the code below to onCreated function","text":"<p>VietMap SDK need to be initialized in the onCreate function of the activity to work properly <pre><code>    override fun onCreate(savedInstanceState: Bundle?) {\n        /// Initialize vietmap SDK, you must add this line to ensure that the SDK works properly, without crashing\n        Vietmap.getInstance(this)\n\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_viet_map_map_view_example_v2)\n\n        mapView = findViewById(R.id.vmMapView)\n        mapView.onCreate(savedInstanceState)\n        mapView.getMapAsync { vietMapGL: VietMapGL -&gt;\n            this.vietMapGL = vietMapGL\n\n            /// Add vietmap vector style to vietmapSDK\n            vietMapGL.setStyle(\n                Style.Builder()\n                    .fromUri(\"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\")\n            )\n\n            vietMapGL.setOnPolylineClickListener { polyline: Polyline -&gt;\n                Toast.makeText(\n                    this ,\n                    \"You clicked on polyline with id = \" + polyline.id,\n                    Toast.LENGTH_SHORT\n                ).show()\n            }\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#add-a-marker-with-standard-info-window","title":"Add a marker with standard info window","text":"<p><pre><code>    private fun addMarker(position:LatLng ): Marker {\n        return vietMapGL!!.addMarker(\n            MarkerOptions()\n                .position(position)\n                .title(\"Vietmap\")\n                .snippet(\"Vietmap Android SDK\")\n                .icon(\n                    IconUtils().drawableToIcon(\n                        this,\n                        R.drawable.ic_launcher_foreground,\n                        ResourcesCompat.getColor(resources,R.color.black , theme)\n                    )\n                )\n        )\n    }\n</code></pre> - You can find <code>IconUtils</code> class here</p>"},{"location":"sdk-mobile/sdk-android/map/#add-polyline","title":"Add polyline","text":"<p><pre><code>    /// Define list of polyline options\n    private var polylineOptions: ArrayList&lt;PolylineOptions?&gt;? = ArrayList()\n\n    /// Define all polylines to add to the map\n    private val allPolylines: List&lt;PolylineOptions?&gt;\n        private get() {\n            val options: MutableList&lt;PolylineOptions?&gt; = ArrayList()\n            options.add(generatePolyline(HOCHIMINH, NINHTHUAN, \"#F44336\"))\n            options.add(generatePolyline(NINHTHUAN, DANANG, \"#FF5722\"))\n            options.add(generatePolyline(DANANG, HUE, \"#673AB7\"))\n            options.add(generatePolyline(HUE, NGHEAN, \"#009688\"))\n            options.add(generatePolyline(NGHEAN, HANOI, \"#795548\"))\n            return options\n        }\n\n    private fun generatePolyline(start: LatLng, end: LatLng, color: String): PolylineOptions {\n        val line = PolylineOptions()\n        line.add(start)\n        line.add(end)\n        line.color(Color.parseColor(color))\n        return line\n    }\n\n    /// Add all polylines to the map\n    private  fun addPolyline(){\n        /// Add all polylines to the map\n        polylineOptions!!.addAll(allPolylines)\n        polylines = vietMapGL.addPolylines(polylineOptions!!)\n    } \n</code></pre> - Implement on polyline click listener <pre><code>    private  fun addPolyline(){\n        /// Add all polylines to the map\n        polylineOptions!!.addAll(allPolylines)\n        polylines = vietMapGL.addPolylines(polylineOptions!!)\n\n        ...\n\n        ///Add below line to implement on polyline click listener\n        vietMapGL.setOnPolylineClickListener { polyline: Polyline -&gt;\n        Toast.makeText(\n                this ,\n                \"You clicked on polyline with id = \" + polyline.id,\n                Toast.LENGTH_SHORT\n            ).show()\n        }\n    } \n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#add-polygon","title":"Add polygon","text":"<p><pre><code>    /// Define list of lat lng points to draw a polygon\n    val STAR_SHAPE_POINTS: ArrayList&lt;LatLng?&gt; = object : ArrayList&lt;LatLng?&gt;() {\n        init {\n            add(LatLng(10.791257, 106.669189))\n            add(LatLng(11.550254, 108.960579))\n            add(LatLng(16.045746, 108.202241))\n            add(LatLng(16.469602, 107.577462))\n        }\n    }\n\n    /// Add a polygon to the map\n\n    private fun addPolygon(){\n        /// Add a polygon to the map\n        polygon = vietMapGL.addPolygon(\n            PolygonOptions()\n                .addAll(STAR_SHAPE_POINTS)\n                .fillColor(Color.parseColor(\"#3bb2d0\"))\n        )\n    }\n</code></pre> - Implement on polygon click listener <pre><code>    private fun addPolygon(){\n        /// Add a polygon to the map\n        polygon = vietMapGL.addPolygon(\n            PolygonOptions()\n                .addAll(STAR_SHAPE_POINTS)\n                .fillColor(Color.parseColor(\"#3bb2d0\"))\n        )\n\n        ...\n\n        /// Add below line to implement on polygon click listener\n        vietMapGL.setOnPolygonClickListener { polygon: Polygon -&gt;\n            Toast.makeText(\n                this ,\n                \"You clicked on polygon with id = \" + polygon.id,\n                Toast.LENGTH_SHORT\n            ).show()\n        }\n    } \n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#implement-on-map-click-listener","title":"Implement on map click listener","text":"<p>Add a callback to the activity to handle when the user clicks on the map, will return the clicked <code>latLng</code> <pre><code>    /// Make the activity implement OnMapClickListener from VietMapGL\n    class VietMapMapViewExampleV2 : AppCompatActivity(),VietMapGL.OnMapClickListener{\n        ...\n    }\n\n    /// Add map click listener to vietMapGL in onCreated function\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n        vietMapGL?.addOnMapClickListener(this)\n        ...\n    }\n\n    /// Handle onMapClick logic with clicked latLng response\n    override fun onMapClick(latLng: LatLng): Boolean {\n        addMarker(latLng) \n        return false\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#show-user-location-to-the-map","title":"Show user location to the map","text":"<p>Define necessary variable to start tracking user location <pre><code>    private var locationComponent: LocationComponent? = null\n    private var locationEngine: LocationEngine? = null\n</code></pre> Add the function below to the activity <pre><code>    private fun enableLocationComponent(style: Style?) {\n        locationComponent = vietMapGL!!.locationComponent\n        if (locationComponent != null) {\n            locationComponent!!.activateLocationComponent(\n                LocationComponentActivationOptions.builder(\n                    this, style!!\n                ).build()\n            )\n            if (!checkPermission()) {\n                return\n            }\n            locationComponent!!.setCameraMode(\n                CameraMode.TRACKING_GPS_NORTH, 750L, 18.0, 0.0, 0.0, null\n            )\n            locationComponent!!.isLocationComponentEnabled = true\n            locationComponent!!.zoomWhileTracking(19.0)\n            locationComponent!!.renderMode = RenderMode.GPS\n            locationComponent!!.locationEngine = locationEngine\n        }\n        updateMyLocationTrackingMode()\n        updateMyLocationRenderMode()\n    }\n\n    private fun updateMyLocationTrackingMode() {\n        val vietmapTrackingMode = intArrayOf(\n            CameraMode.NONE,\n            CameraMode.TRACKING,\n            CameraMode.TRACKING_COMPASS,\n            CameraMode.TRACKING_GPS\n        )\n        locationComponent!!.cameraMode = vietmapTrackingMode[0]\n    }\n\n    private fun updateMyLocationRenderMode() {\n        val vietmapRenderModes = intArrayOf(RenderMode.NORMAL, RenderMode.COMPASS, RenderMode.GPS)\n        locationComponent!!.renderMode = vietmapRenderModes[0]\n    }\n\n    /// check the permission is granted or not before using location\n    private fun checkPermission(): Boolean {\n        return ActivityCompat.checkSelfPermission(\n            this, ACCESS_FINE_LOCATION\n        ) == PackageManager.PERMISSION_GRANTED || ActivityCompat.checkSelfPermission(\n            this, ACCESS_COARSE_LOCATION\n        ) == PackageManager.PERMISSION_GRANTED\n    }\n\n\n    private fun initLocationEngine() {\n        val locationEngineDefault = LocationEngineDefault\n        locationEngine = locationEngineDefault.getDefaultLocationEngine(this)\n    }\n</code></pre> Add the initLocationEngine and enableLocationComponent functions to the callback of setStyle function inside the <code>onCreated</code> function <pre><code>    vietMapGL.setStyle(\n        Style.Builder()\n            .fromUri(\"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\")\n    ){\n        initLocationEngine()\n        enableLocationComponent(it)\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#add-some-necessary-functions","title":"Add some necessary functions","text":"<p>The following functions are necessary to add to the activity, to ensure that the application does not crash when running <pre><code>    override fun onStart() {\n        super.onStart()\n        mapView.onStart()\n    }\n\n    override fun onResume() {\n        super.onResume()\n        mapView.onResume()\n    }\n\n    override fun onPause() {\n        super.onPause()\n        mapView.onPause()\n    }\n\n    override fun onStop() {\n        super.onStop()\n        mapView.onStop()\n    }\n\n    override fun onLowMemory() {\n        super.onLowMemory()\n        mapView.onLowMemory()\n    }\n\n    override fun onDestroy() {\n        super.onDestroy()\n        mapView.onDestroy()\n    }\n\n    override fun onSaveInstanceState(outState: Bundle) {\n        super.onSaveInstanceState(outState)\n        mapView.onSaveInstanceState(outState)\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/map/#add-apikey","title":"Add apikey","text":"<p>To ensure that the application does not crash when running, you need to add the apikey that VietMap provides at the YOUR_API_KEY_HERE keyword to use the SDK. You can get the apikey at https://maps.vietmap.vn/</p>"},{"location":"sdk-mobile/sdk-android/navigation/","title":"Navigation","text":""},{"location":"sdk-mobile/sdk-android/navigation/#gradle-and-androidmanifest-configure","title":"Gradle and AndroidManifest configure","text":""},{"location":"sdk-mobile/sdk-android/navigation/#add-dependencies-below-to-buildgradle-module-app","title":"Add dependencies below to build.gradle module app","text":"<p><pre><code>    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\n    implementation \"androidx.cardview:cardview:1,0,0\"\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\n    implementation \"com.google.android.gms:play-services-location:21.0.1\"\n    implementation \"com.jakewharton:butterknife:10.2.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'com.github.vietmap-company:maps-sdk-android:2.1.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-ui-android:2.0.5'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-android:2.0.4'\n    implementation 'com.github.vietmap-company:vietmap-services-core:1.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-directions-models:1.0.1'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.github.vietmap-company:vietmap-services-android:1.1.2'\n    implementation 'com.squareup.picasso:picasso:2.8'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.2.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.google.code.gson:gson:2.10.1'\n    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'\n</code></pre> Configure the jitpack repository in the setting.gradle file <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // Add two lines below to the repositories block (In setting.gradle file)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre></p> <p>With older projects, place it to the build.gradle file at module project <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre> Upgrade the compileSdk and targetSdk to version 34 <pre><code>compileSdk 34\n</code></pre> <pre><code>targetSdk 34\n</code></pre> Add the necessary permission request to the AndroidManifest.xml file <pre><code>    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/navigation/#request-location-permission-in-mainactivity","title":"Request location permission in MainActivity","text":"<ul> <li>Add the function to check location permission and push to the navigation activity</li> <li>Configure system speech engine to google, our SDK use system speech engine to speak out the instruction <pre><code>class MainActivity : AppCompatActivity(), PermissionsListener {\n\n    private var permissionsManager: PermissionsManager? = null\n    private var textToSpeech: TextToSpeech? = null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n        val button: Button = findViewById(R.id.pushToNavigationScreen)\n        val ttsButton: Button = findViewById(R.id.testSpeech)\n        val speechAgain: Button = findViewById(R.id.speechAgain)\n        val intent = Intent(this, VietMapNavigationExampleV2::class.java)\n        button.setOnClickListener {\n            startActivity(intent)\n            speechAgain.visibility = GONE\n        }\n        speechAgain.setOnClickListener { speakOut(\"Language: Vietnamese\") }\n        ttsButton.setOnClickListener {\n            startActivity(Intent(\"com.android.settings.TTS_SETTINGS\"))\n            speechAgain.visibility = VISIBLE\n        }\n        permissionsManager = PermissionsManager(this)\n        if (!PermissionsManager.areLocationPermissionsGranted(this)) {\n            permissionsManager!!.requestLocationPermissions(this)\n        }\n\n        textToSpeech = TextToSpeech(\n            applicationContext\n        ) { setTextToSpeechLanguage() }\n    }\n\n\n    private fun setTextToSpeechLanguage() {\n        val language = Locale(\"vi\", \"VN\")\n        when (textToSpeech!!.setLanguage(language)) {\n            TextToSpeech.LANG_MISSING_DATA -&gt; {\n                Toast.makeText(this, \"Missing language data\", Toast.LENGTH_LONG).show()\n                return\n            }\n            TextToSpeech.LANG_NOT_SUPPORTED -&gt; {\n                Toast.makeText(\n                    this,\n                    \"Language not supported \" + language.language,\n                    Toast.LENGTH_LONG\n                ).show()\n                return\n            }\n            else -&gt; {\n                Toast.makeText(this, \"Language: Vietnamese\", Toast.LENGTH_LONG).show()\n                speakOut(\"Language: Vietnamese\")\n            }\n        }\n    }\n\n    private fun speakOut(speechContent: String) {\n        val utteranceId: String = UUID.randomUUID().toString()\n        textToSpeech!!.speak(speechContent, TextToSpeech.QUEUE_FLUSH, null, utteranceId)\n    }\n\n    override fun onRequestPermissionsResult(\n        requestCode: Int, permissions: Array&lt;String?&gt;,\n        grantResults: IntArray\n    ) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults)\n        permissionsManager!!.onRequestPermissionsResult(requestCode, permissions, grantResults)\n    }\n\n    override fun onExplanationNeeded(permissionsToExplain: List&lt;String?&gt;?) {\n        Toast.makeText(\n            this, \"This app needs location permissions in order to show its functionality.\",\n            Toast.LENGTH_LONG\n        ).show()\n    }\n\n    override fun onPermissionResult(granted: Boolean) {\n        if (granted) {\n        } else {\n            Toast.makeText(\n                this, \"You didn't grant location permissions.\",\n                Toast.LENGTH_LONG\n            ).show()\n        }\n    }\n}\n</code></pre></li> </ul> <p>In activity_main.xml file, add button layout <pre><code>    &lt;Button\n        android:id=\"@+id/pushToNavigationScreen\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"Navigation Screen\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n         /&gt;\n\n    &lt;TextView\n        android:id=\"@+id/guideText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:textSize=\"16dp\"\n        android:layout_marginRight=\"15dp\"\n        app:layout_constraintTop_toBottomOf=\"@+id/pushToNavigationScreen\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:text=\"@string/tts_guide\"\n        /&gt;\n\n    &lt;Button\n        android:id=\"@+id/testSpeech\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"System text to speech setting\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/guideText\"\n        /&gt;\n\n    &lt;Button\n        android:id=\"@+id/speechAgain\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"Speech again\"\n        android:visibility=\"gone\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/testSpeech\"\n        /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/navigation/#create-a-navigation-activity","title":"Create a navigation activity","text":"<p>Create new VietMapNavigationActivity Add below code to xml file of created activity <pre><code>    &lt;vn.vietmap.vietmapsdk.maps.MapView\n        android:id=\"@+id/ktMapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:vietmap_cameraZoom=\"1\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n\n\n    &lt;Button\n        android:id=\"@+id/btnStopNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"40dp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        android:layout_gravity=\"end|bottom\"\n        android:layout_marginRight=\"10dp\"\n        android:layout_marginBottom=\"10dp\"\n        app:layout_constraintBottom_toTopOf=\"@id/btnOverview\"\n        android:onClick=\"btnStartStop_click\"\n        android:text=\"StopNavigation\" /&gt;\n\n    &lt;Button\n        android:id=\"@+id/btnOverview\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"40dp\"\n        android:layout_gravity=\"start|bottom\"\n        android:layout_marginBottom=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:onClick=\"btnStartStop_click\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintBottom_toTopOf=\"@id/btnRecenter\"\n        android:text=\"Overview\" /&gt;\n\n    &lt;Button\n        android:id=\"@+id/btnRecenter\"\n        android:layout_marginRight=\"10dp\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"40dp\"\n        android:layout_gravity=\"start|bottom\"\n        android:layout_marginBottom=\"10dp\"\n        android:onClick=\"btnStartStop_click\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintBottom_toTopOf=\"@id/btnStartNavigation\"\n        android:text=\"ReCenter\" /&gt;\n    &lt;Button\n        android:id=\"@+id/btnStartNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"40dp\"\n        android:layout_gravity=\"center|bottom\"\n        android:layout_marginBottom=\"10dp\"\n        android:layout_marginRight=\"10dp\"\n        android:onClick=\"btnStartStop_click\"\n        android:text=\"StartNavigation\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\" /&gt;\n</code></pre></p> <p>Activity needs to implement some of the following Listener classes to catch user events, navigation event and process them. <pre><code>class VietMapNavigationExampleV2 : AppCompatActivity() , OnMapReadyCallback, ProgressChangeListener,\n    OffRouteListener, MilestoneEventListener, NavigationEventListener, NavigationListener,\n    FasterRouteListener, SpeechAnnouncementListener, BannerInstructionsListener, RouteListener,\n    VietMapGL.OnMapLongClickListener, VietMapGL.OnMapClickListener,\n    MapView.OnDidFinishRenderingMapListener{\n    override fun onCreate(savedInstanceState: Bundle?) {\n\n        // this function must be called before super.onCreate(savedInstanceState), otherwise the app will crash\n        Vietmap.getInstance(this)\n\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_viet_map_navigation_example_v2)\n    }\n}\n</code></pre> Import below packages to the activity <pre><code>import android.Manifest.permission.ACCESS_COARSE_LOCATION\nimport android.Manifest.permission.ACCESS_FINE_LOCATION\nimport android.content.pm.PackageManager\nimport android.graphics.Color.blue\nimport android.location.Location\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.widget.Button\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.res.ResourcesCompat\nimport com.example.model.CurrentCenterPoint\nimport com.example.ultis.IconUtils\nimport com.google.android.gms.location.FusedLocationProviderClient\nimport com.google.android.gms.location.LocationServices\nimport com.mapbox.api.directions.v5.models.BannerInstructions\nimport com.mapbox.api.directions.v5.models.DirectionsResponse\nimport com.mapbox.api.directions.v5.models.DirectionsRoute\nimport com.mapbox.geojson.Point\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\nimport timber.log.Timber\nimport vn.vietmap.services.android.navigation.ui.v5.camera.CameraOverviewCancelableCallback\nimport vn.vietmap.services.android.navigation.ui.v5.listeners.BannerInstructionsListener\nimport vn.vietmap.services.android.navigation.ui.v5.listeners.NavigationListener\nimport vn.vietmap.services.android.navigation.ui.v5.listeners.RouteListener\nimport vn.vietmap.services.android.navigation.ui.v5.listeners.SpeechAnnouncementListener\nimport vn.vietmap.services.android.navigation.ui.v5.voice.NavigationSpeechPlayer\nimport vn.vietmap.services.android.navigation.ui.v5.voice.SpeechAnnouncement\nimport vn.vietmap.services.android.navigation.ui.v5.voice.SpeechPlayer\nimport vn.vietmap.services.android.navigation.ui.v5.voice.SpeechPlayerProvider\nimport vn.vietmap.services.android.navigation.v5.location.engine.LocationEngineProvider\nimport vn.vietmap.services.android.navigation.v5.location.replay.ReplayRouteLocationEngine\nimport vn.vietmap.services.android.navigation.v5.milestone.Milestone\nimport vn.vietmap.services.android.navigation.v5.milestone.MilestoneEventListener\nimport vn.vietmap.services.android.navigation.v5.milestone.VoiceInstructionMilestone\nimport vn.vietmap.services.android.navigation.v5.navigation.*\nimport vn.vietmap.services.android.navigation.v5.navigation.camera.RouteInformation\nimport vn.vietmap.services.android.navigation.v5.offroute.OffRouteListener\nimport vn.vietmap.services.android.navigation.v5.route.FasterRouteListener\nimport vn.vietmap.services.android.navigation.v5.routeprogress.ProgressChangeListener\nimport vn.vietmap.services.android.navigation.v5.routeprogress.RouteProgress\nimport vn.vietmap.services.android.navigation.v5.snap.SnapToRoute\nimport vn.vietmap.services.android.navigation.v5.utils.RouteUtils\nimport vn.vietmap.vietmapsdk.Vietmap\nimport vn.vietmap.vietmapsdk.annotations.Marker\nimport vn.vietmap.vietmapsdk.annotations.MarkerOptions\nimport vn.vietmap.vietmapsdk.camera.CameraPosition\nimport vn.vietmap.vietmapsdk.camera.CameraUpdate\nimport vn.vietmap.vietmapsdk.camera.CameraUpdateFactory\nimport vn.vietmap.vietmapsdk.geometry.LatLng\nimport vn.vietmap.vietmapsdk.geometry.LatLngBounds\nimport vn.vietmap.vietmapsdk.location.LocationComponent\nimport vn.vietmap.vietmapsdk.location.LocationComponentActivationOptions\nimport vn.vietmap.vietmapsdk.location.engine.LocationEngine\nimport vn.vietmap.vietmapsdk.location.modes.CameraMode\nimport vn.vietmap.vietmapsdk.location.modes.RenderMode\nimport vn.vietmap.vietmapsdk.maps.*\nimport kotlin.math.PI\nimport kotlin.math.cos\nimport kotlin.math.sin\nimport kotlin.math.sqrt\n</code></pre> Define below necessary variables <pre><code>    private var mapView: MapView? = null\n    private var vietmapGL: VietMapGL? = null\n    private var currentRoute: DirectionsRoute? = null\n    private var routeClicked: Boolean = false\n    private var locationEngine: LocationEngine? = null\n    private var navigationMapRoute: NavigationMapRoute? = null\n    private var directionsRoutes: List&lt;DirectionsRoute&gt;? = null\n    private val snapEngine = SnapToRoute()\n    private var simulateRoute = false\n    private var primaryRouteIndex = 0\n    private var fusedLocationClient: FusedLocationProviderClient? = null\n    private var navigation: VietmapNavigation? = null\n    private var speechPlayerProvider: SpeechPlayerProvider? = null\n    private var speechPlayer: SpeechPlayer? = null\n    private var routeProgress: RouteProgress? = null\n    private val routeUtils = RouteUtils()\n    private var voiceInstructionsEnabled = true\n    private var isBuildingRoute = false\n    private var origin = Point.fromLngLat(106.675789, 10.759050)\n    private var destination = Point.fromLngLat(106.686777, 10.775056)\n    private var locationComponent: LocationComponent? = null\n    private var currentCenterPoint: CurrentCenterPoint? = null\n    private var isOverviewing = false\n    private var animateBuildRoute = true\n    private var isNavigationInProgress = false\n    private var isNavigationCanceled = false\n    private var zoom = 20.0\n    private var bearing = 0.0\n    private var tilt = 0.0\n    private var padding: IntArray = intArrayOf(150, 500, 150, 500)\n    private var isRunning: Boolean = false\n    private var options: VietMapGLOptions? = null\n    private val navigationOptions =\n        VietmapNavigationOptions.builder().build()\n</code></pre></p> <p>You can find <code>CurrentCenterPoint</code> class in model folder of this project Here</p>"},{"location":"sdk-mobile/sdk-android/navigation/#call-necessary-function-in-oncreate-callback","title":"Call necessary function in onCreate callback","text":"<pre><code>    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        Vietmap.getInstance(this)\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_viet_map_navigation_example_v2)\n        initLocationEngine()\n        speechPlayerProvider = SpeechPlayerProvider(this, \"vi\", true);\n        speechPlayer = NavigationSpeechPlayer(speechPlayerProvider)\n        mapView = findViewById(R.id.ktMapView)\n        mapView!!.onCreate(savedInstanceState)\n        mapView!!.getMapAsync(this)\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this)\n        options = VietMapGLOptions.createFromAttributes(this).compassEnabled(false)\n        mapView = MapView(this, options)\n        navigation = VietmapNavigation(\n            this, navigationOptions, locationEngine!!\n        )\n        mapView!!.getMapAsync(this)\n        val btnStopNavigation: Button = findViewById(R.id.btnStopNavigation)\n        btnStopNavigation.setOnClickListener {\n            finishNavigation()\n        }\n        val btnStartNavigation: Button = findViewById(R.id.btnStartNavigation)\n        btnStartNavigation.setOnClickListener {\n            startNavigation()\n        }\n        val btnOverview: Button = findViewById(R.id.btnOverview)\n        btnOverview.setOnClickListener {\n            overViewRoute()\n        }\n        val btnRecenter: Button = findViewById(R.id.btnRecenter)\n        btnRecenter.setOnClickListener {\n            recenter()\n        }\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/navigation/#add-some-necessary-function-below","title":"Add some necessary function below","text":"<pre><code>    // Overview the route on the map, show all the route on the map inside the screen\n    private fun overViewRoute() {\n        isOverviewing = true\n        routeProgress?.let { showRouteOverview(padding, it) }\n    }\n\n    /// clear all the route in the map\n    private fun clearRoute() {\n        if (navigationMapRoute != null) {\n            navigationMapRoute?.removeRoute()\n        }\n        currentRoute = null\n    }\n\n    /// init the map route and add some listener\n    private fun initMapRoute() {\n        if (vietmapGL != null) {\n            /// add \"vmadmin_province\" layer to map to show the route below the roadname, this layer is provided by Vietmap tile map.\n            navigationMapRoute = NavigationMapRoute(mapView!!, vietmapGL!!, \"vmadmin_province\")\n        }\n\n        /// callback when user click on another route, this function will be called and show the new route on the map\n        navigationMapRoute?.setOnRouteSelectionChangeListener {\n            routeClicked = true\n            currentRoute = it\n            val routePoints: List&lt;Point&gt; =\n                currentRoute?.routeOptions()?.coordinates() as List&lt;Point&gt;\n            animateVietmapGLForRouteOverview(padding, routePoints)\n            primaryRouteIndex = try {\n                it.routeIndex()?.toInt() ?: 0\n            } catch (e: Exception) {\n                0\n            }\n            if (isRunning) {\n                finishNavigation(isOffRouted = true)\n                startNavigation()\n            }\n        }\n\n        vietmapGL?.addOnMapClickListener(this)\n    }\n\n    /// stop current navigation \n    private fun finishNavigation(isOffRouted: Boolean = false) {\n\n        zoom = 15.0\n        bearing = 0.0\n        tilt = 0.0\n        isNavigationCanceled = true\n\n        if (!isOffRouted) {\n            isNavigationInProgress = false\n            moveCameraToOriginOfRoute()\n        }\n\n        if (currentRoute != null) {\n            isRunning = false\n            navigation!!.stopNavigation()\n            navigation!!.removeFasterRouteListener(this)\n            navigation!!.removeMilestoneEventListener(this)\n            navigation!!.removeNavigationEventListener(this)\n            navigation!!.removeOffRouteListener(this)\n            navigation!!.removeProgressChangeListener(this)\n        }\n\n    }\n\n    private fun moveCameraToOriginOfRoute() {\n        currentRoute?.let {\n            try {\n                val originCoordinate = it.routeOptions()?.coordinates()?.get(0)\n                originCoordinate?.let {\n                    val location = LatLng(originCoordinate.latitude(), originCoordinate.longitude())\n                    moveCamera(location, null)\n                }\n            } catch (e: java.lang.Exception) {\n                Timber.i(String.format(\"moveCameraToOriginOfRoute, %s\", \"Error: ${e.message}\"))\n            }\n        }\n    }\n\n    /// move camera to a specific location with bearing\n    private fun moveCamera(location: LatLng, bearing: Float?) {\n\n        val cameraPosition = CameraPosition.Builder().target(location).zoom(zoom).tilt(tilt)\n\n        if (bearing != null) {\n            cameraPosition.bearing(bearing.toDouble())\n        }\n\n        var duration = 3000\n        if (!animateBuildRoute) duration = 1\n        vietmapGL?.animateCamera(\n            CameraUpdateFactory.newCameraPosition(cameraPosition.build()), duration\n        )\n    }\n\n    /// start navigation with current selected route\n    private fun startNavigation() {\n        tilt = 60.0\n        zoom = 19.0\n        isOverviewing = false\n        isNavigationCanceled = false\n        vietmapGL?.locationComponent?.cameraMode = CameraMode.TRACKING_GPS_NORTH\n\n        if (currentRoute != null) {\n            if (simulateRoute) {\n                val mockLocationEngine = ReplayRouteLocationEngine()\n                mockLocationEngine.assign(currentRoute)\n                navigation!!.locationEngine = mockLocationEngine\n            } else {\n                locationEngine?.let {\n                    navigation!!.locationEngine = it\n                }\n            }\n            isRunning = true\n            vietmapGL?.locationComponent?.locationEngine = null\n            navigation!!.addNavigationEventListener(this)\n            navigation!!.addFasterRouteListener(this)\n            navigation!!.addMilestoneEventListener(this)\n            navigation!!.addOffRouteListener(this)\n            navigation!!.addProgressChangeListener(this)\n            navigation!!.snapEngine = snapEngine\n            currentRoute?.let {\n                isNavigationInProgress = true\n                navigation!!.startNavigation(currentRoute!!)\n                recenter()\n            }\n        }\n    }\n\n    /// recenter the map to current location in the route\n    private fun recenter() {\n        isOverviewing = false\n        if (currentCenterPoint != null) {\n            moveCamera(\n                LatLng(currentCenterPoint!!.latitude, currentCenterPoint!!.longitude),\n                currentCenterPoint!!.bearing\n            )\n        }\n    }\n\n    /// init location engine to get current location of user\n    /// mock location engine is used to simulate route, will used in demo and test case\n    /// location engine provider is used to get current location of user, will used in real case\n    private fun initLocationEngine() {\n        locationEngine = if (simulateRoute) {\n            ReplayRouteLocationEngine()\n        } else {\n            LocationEngineProvider.getBestLocationEngine(this)\n        }\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/navigation/#implement-some-necessary-function","title":"Implement some necessary function","text":"<pre><code>    /// this function will be called when map is ready to use, you can add some listener here to handle user interaction with map\n    override fun onMapReady(p0: VietMapGL) {\n        vietmapGL = p0\n        vietmapGL!!.setStyle(\n            Style.Builder()\n                .fromUri(\"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\")\n        ) { style: Style? -&gt;\n            initLocationEngine()\n            enableLocationComponent(style)\n            initMapRoute()\n        }\n        vietmapGL!!.addOnMapClickListener(this)\n        vietmapGL!!.addOnMapLongClickListener(this) \n    }\n\n    /// init the location component to start tracking user location and show it on the map\n    /// using location engine to get current location of user\n    private fun enableLocationComponent(style: Style?) {\n        locationComponent = vietmapGL!!.locationComponent\n        if (locationComponent != null) {\n            locationComponent!!.activateLocationComponent(\n                LocationComponentActivationOptions.builder(\n                    this, style!!\n                ).build()\n            )\n            if (checkPermission()) {\n                return\n            }\n            locationComponent!!.setCameraMode(\n                CameraMode.TRACKING_GPS_NORTH, 750L, 18.0, 10000.0, 10000.0, null\n            )\n            locationComponent!!.isLocationComponentEnabled = true\n            locationComponent!!.zoomWhileTracking(19.0)\n            locationComponent!!.renderMode = RenderMode.GPS\n            locationComponent!!.locationEngine = locationEngine\n        }\n\n    }\n\n    override fun onMapClick(p0: LatLng): Boolean {\n        addMarker(p0)\n        // handle on Map click here\n        return false\n    }\n\n    /// show route overview\n    private fun showRouteOverview(padding: IntArray?, currentRouteProgress: RouteProgress) {\n        val routeInformation: RouteInformation =\n            buildRouteInformationFromProgress(currentRouteProgress)\n        animateCameraForRouteOverview(routeInformation, padding!!)\n    }\n\n    private fun buildRouteInformationFromProgress(routeProgress: RouteProgress?): RouteInformation {\n        return if (routeProgress == null) {\n            RouteInformation.create(null, null, null)\n        } else RouteInformation.create(routeProgress.directionsRoute(), null, null)\n    }\n\n    private fun animateCameraForRouteOverview(\n        routeInformation: RouteInformation, padding: IntArray\n    ) {\n        val cameraEngine = navigation!!.cameraEngine\n        val routePoints = cameraEngine.overview(routeInformation)\n        if (routePoints.isNotEmpty()) {\n            animateVietmapGLForRouteOverview(padding, routePoints)\n        }\n    }\n\n    private fun animateVietmapGLForRouteOverview(padding: IntArray, routePoints: List&lt;Point&gt;) {\n        if (routePoints.size &lt;= 1) {\n            return\n        }\n        val resetUpdate: CameraUpdate = buildResetCameraUpdate()\n        val overviewUpdate: CameraUpdate = buildOverviewCameraUpdate(padding, routePoints)\n        vietmapGL?.animateCamera(\n            resetUpdate, 150,  CameraOverviewCancelableCallback(overviewUpdate, vietmapGL)\n        )\n    }\n\n\n    private fun buildResetCameraUpdate(): CameraUpdate {\n        val resetPosition: CameraPosition = CameraPosition.Builder().tilt(0.0).bearing(0.0).build()\n        return CameraUpdateFactory.newCameraPosition(resetPosition)\n    }\n\n\n    private fun buildOverviewCameraUpdate(\n        padding: IntArray, routePoints: List&lt;Point&gt;\n    ): CameraUpdate {\n        val routeBounds = convertRoutePointsToLatLngBounds(routePoints)\n        return CameraUpdateFactory.newLatLngBounds(\n            routeBounds, padding[0], padding[1], padding[2], padding[3]\n        )\n    }\n\n    private fun convertRoutePointsToLatLngBounds(routePoints: List&lt;Point&gt;): LatLngBounds {\n        val latLngs: MutableList&lt;LatLng&gt; = ArrayList()\n        for (routePoint in routePoints) {\n            latLngs.add(LatLng(routePoint.latitude(), routePoint.longitude()))\n        }\n        return LatLngBounds.Builder().includes(latLngs).build()\n    }\n\n    override fun onMilestoneEvent(p0: RouteProgress?, p1: String?, p2: Milestone?) {\n        if (voiceInstructionsEnabled) {\n            playVoiceAnnouncement(p2)\n        }\n        if (p0 != null &amp;&amp; p2 != null) {\n            if (routeUtils.isArrivalEvent(p0, p2) &amp;&amp; isNavigationInProgress) {\n                vietmapGL?.locationComponent?.locationEngine = locationEngine\n                finishNavigation()\n            }\n        }\n    }\n\n    private fun playVoiceAnnouncement(milestone: Milestone?) {\n        if (milestone is VoiceInstructionMilestone) {\n            var announcement = SpeechAnnouncement.builder()\n                .voiceInstructionMilestone(milestone as VoiceInstructionMilestone?).build()\n            speechPlayer!!.play(announcement)\n        }\n    }\n\n    override fun onRunning(p0: Boolean) {\n        /// Handle navigation running events here\n    }\n\n    override fun onCancelNavigation() {\n        /// Handle a navigation cancel event here\n    }\n\n    override fun onNavigationFinished() {\n        /// Handle a navigation finished event here\n    }\n\n    override fun onNavigationRunning() {\n        /// Handle a navigation running event here\n    }\n\n    override fun fasterRouteFound(p0: DirectionsRoute?) {\n        p0?.let {\n            currentRoute = p0\n            finishNavigation()\n            startNavigation()\n        }\n    }\n\n    override fun willVoice(p0: SpeechAnnouncement?): SpeechAnnouncement {\n        /// return null if you turn off voice instruction\n        return p0!!\n    }\n\n    override fun willDisplay(p0: BannerInstructions?): BannerInstructions {\n        /// return null if you turn off banner instruction\n        return p0!!\n    }\n\n    override fun allowRerouteFrom(p0: Point?): Boolean {\n\n        return true\n    }\n\n\n    override fun onOffRoute(offRoutePoint: Point?) {\n        doOnNewRoute(offRoutePoint)\n    }\n\n    override fun onRerouteAlong(p0: DirectionsRoute?) {\n        p0?.let {\n            currentRoute = p0\n            finishNavigation()\n            startNavigation()\n        }\n    }\n\n    override fun onFailedReroute(p0: String?) {\n        // handle failed reroute here\n    }\n\n    override fun onArrival() {\n        vietmapGL?.locationComponent?.locationEngine = locationEngine\n        // handle arrival here\n        println(\"You have arrived at your destination\")\n    }\n\n    override fun onMapLongClick(latLng: LatLng): Boolean {\n        getCurrentLocation()\n        destination = Point.fromLngLat(latLng.longitude, latLng.latitude)\n        if (origin != null) {\n            fetchRouteWithBearing(false)\n        }\n        return false\n    }\n\n    override fun onDidFinishRenderingMap(p0: Boolean) {\n        /// Handle did finish rendering map event here\n    }\n\n\n    private fun getCurrentLocation() {\n        if (checkPermission()) {\n            fusedLocationClient!!.lastLocation.addOnSuccessListener(\n                this\n            ) { location: Location? -&gt;\n                if (location != null) {\n                    origin = Point.fromLngLat(\n                        location.longitude, location.latitude\n                    )\n                }\n            }\n        }\n    }\n\n\n    private fun addMarker(position:LatLng ): Marker {\n        return vietmapGL!!.addMarker(\n            MarkerOptions()\n                .position(position)\n                .icon(\n                    IconUtils().drawableToIcon(\n                        this,\n                        R.drawable.continue_straight,\n                        ResourcesCompat.getColor(resources,R.color.blue , theme)\n                    )\n                )\n        )\n    }\n\n    private fun checkPermission(): Boolean {\n        return ActivityCompat.checkSelfPermission(\n            this, ACCESS_FINE_LOCATION\n        ) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(\n            this, ACCESS_COARSE_LOCATION\n        ) == PackageManager.PERMISSION_GRANTED\n    } \n</code></pre>"},{"location":"sdk-mobile/sdk-android/navigation/#fetch-route-between-2-point-with-bearing","title":"Fetch route between 2 point, with bearing","text":"<pre><code>    private fun fetchRouteWithBearing(isStartNavigation: Boolean) {\n        if (checkPermission()) {\n            fusedLocationClient?.lastLocation?.addOnSuccessListener(\n                this\n            ) { location: Location? -&gt;\n                if (location != null) {\n                    fetchRoute(isStartNavigation, location.bearing)\n                }\n            }\n        } else {\n            fetchRoute(isStartNavigation, null)\n        }\n    }\n\n\n    private fun fetchRoute(isStartNavigation: Boolean, bearing: Float?) {\n        val builder =\n            NavigationRoute.builder(this).apikey(\"YOUR_API_KEY_HERE\")\n                .origin(origin, bearing?.toDouble(), bearing?.toDouble())\n                .destination(destination, bearing?.toDouble(), bearing?.toDouble())\n        builder.build().getRoute(object : Callback&lt;DirectionsResponse&gt; {\n            override fun onResponse(\n                call: Call&lt;DirectionsResponse?&gt;, response: Response&lt;DirectionsResponse?&gt;\n            ) {\n                directionsRoutes = response.body()!!.routes()\n                currentRoute = if (directionsRoutes!!.size &lt;= primaryRouteIndex) {\n                    directionsRoutes!![0]\n                } else {\n                    directionsRoutes!![primaryRouteIndex]\n                }\n\n                // Draw the route on the map\n                if (navigationMapRoute != null) {\n                    navigationMapRoute?.removeRoute()\n                } else {\n                    navigationMapRoute =\n                        NavigationMapRoute(mapView!!, vietmapGL!!, \"vmadmin_province\")\n\n                }\n\n                //show multiple route to map\n                if (response.body()!!.routes().size &gt; 1) {\n                    navigationMapRoute?.addRoutes(directionsRoutes!!)\n                } else {\n                    navigationMapRoute?.addRoute(currentRoute)\n                }\n\n\n                isBuildingRoute = false\n                // get route point from current route\n                val routePoints: List&lt;Point&gt; =\n                    currentRoute?.routeOptions()?.coordinates() as List&lt;Point&gt;\n                animateVietmapGLForRouteOverview(padding, routePoints)\n                //Start Navigation again from new Point, if it was already in Progress\n                if (isNavigationInProgress || isStartNavigation) {\n                    startNavigation()\n                }\n            }\n\n            override fun onFailure(call: Call&lt;DirectionsResponse?&gt;, throwable: Throwable) {\n                isBuildingRoute = false\n\n            }\n        })\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/navigation/#some-useful-functions","title":"Some useful functions","text":"<p><pre><code>    /// this function will response to the progress change of navigation, which contain all of data while user is in navigation\n    override fun onProgressChange(location: Location?, routeProgress: RouteProgress?) {\n\n        /// Get current speed of user by using location?.speed\n        // location?.speed\n\n        /*\n        val bannerInstructionsList: List&lt;BannerInstructions&gt; =\n            routeProgress.currentLegProgress().currentStep().bannerInstructions() as List&lt;BannerInstructions&gt;\n\n        /// the modifier and type will guide you to the next turn direction\n\n        currentModifier = bannerInstructionsList?.get(0)?.primary()?.modifier()\n        currentModifierType= bannerInstructionsList?.get(0)?.primary()?.type()\n        // val util = RouteUtils()\n        // arrived = util.isArrivalEvent(routeProgress) &amp;&amp; util.isLastLeg(routeProgress)\n\n\n        /// You can get the distance remaining to destination by using\n        distanceRemaining = routeProgress.distanceRemaining().toFloat()\n\n        /// You can get the duration remaining to destination by using\n        durationRemaining = routeProgress.durationRemaining()\n\n        /// You can get the distance traveled by using\n        distanceTraveled = routeProgress.distanceTraveled().toFloat()\n        legIndex = routeProgress.currentLegProgress()?.stepIndex()\n        // stepIndex = routeProgress.stepIndex\n        val leg = routeProgress.currentLeg()\n        if (leg != null)\n            currentLeg = VietMapRouteLeg(leg)\n\n        /// You can get the current step guide text by using\n        currentStepInstruction = bannerInstructionsList?.get(0)\n            ?.primary()\n            ?.text()\n\n        /// You can get the distance traveled from the last turn by using\n        currentLegDistanceTraveled = routeProgress.currentLegProgress()?.distanceTraveled()?.toFloat()\n\n        currentLegDistanceRemaining = routeProgress.currentLegProgress()?.distanceRemaining()?.toFloat()\n\n        /// You can get the distance remaining to the next turn by using\n        distanceToNextTurn = routeProgress.stepDistanceRemaining().toFloat()\n         */\n        if (!isNavigationCanceled &amp;&amp; location != null &amp;&amp; routeProgress != null) {\n            try {\n                val noRoutes: Boolean = directionsRoutes?.isEmpty() ?: true\n\n                val newCurrentRoute: Boolean = !routeProgress!!.directionsRoute()\n                    .equals(directionsRoutes?.get(primaryRouteIndex))\n                val isANewRoute: Boolean = noRoutes || newCurrentRoute\n                if (isANewRoute) {\n                } else {\n\n                    currentCenterPoint =\n                        CurrentCenterPoint(location.latitude, location.longitude, location.bearing)\n\n                    /// update the map camera to current location in realtime, if user is not overviews the route\n                    if (!isOverviewing) {\n                        this.routeProgress = routeProgress\n                        moveCamera(LatLng(location.latitude, location.longitude), location.bearing)\n                    }\n\n                    /// snap the location of user to the route, which always show the location of user on the route\n                    if (!isBuildingRoute) {\n                        val snappedLocation: Location =\n                            snapEngine.getSnappedLocation(location, routeProgress)\n                        vietmapGL?.locationComponent?.forceLocationUpdate(snappedLocation)\n                    }\n\n                    if (simulateRoute &amp;&amp; !isBuildingRoute) {\n                        vietmapGL?.locationComponent?.forceLocationUpdate(location)\n                    }\n\n                }\n\n                /// This function will calculate when the user is near the next turn, and make the map tilt to 0 degree, which help user easy to find the next turn\n                handleProgressChange(location, routeProgress)\n            } catch (e: java.lang.Exception) {\n            }\n        }\n    }\n\n    private fun handleProgressChange(location: Location, routeProgress: RouteProgress) {\n        val distanceRemainingToNextTurn =\n            routeProgress.currentLegProgress()?.currentStepProgress()?.distanceRemaining()\n        if (distanceRemainingToNextTurn != null &amp;&amp; distanceRemainingToNextTurn &lt; 30) {\n\n            val resetPosition: CameraPosition =\n                CameraPosition.Builder().tilt(0.0).zoom(17.0).build()\n            val cameraUpdate = CameraUpdateFactory.newCameraPosition(resetPosition)\n            vietmapGL?.animateCamera(\n                cameraUpdate, 1000\n            )\n        } else {\n            if (routeProgress.currentLegProgress().currentStepProgress()\n                    .distanceTraveled() &gt; 30 &amp;&amp; !isOverviewing\n            ) {\n                recenter()\n            }\n        }\n    }\n\n    override fun userOffRoute(location: Location?) {\n        location?.let {\n            if (checkIfUserOffRoute(it)) {\n                speechPlayer!!.onOffRoute()\n                doOnNewRoute(Point.fromLngLat(location.longitude, location.latitude))\n            }\n        }\n\n    }\n\n    private fun doOnNewRoute(offRoutePoint: Point?) {\n        if (!isBuildingRoute) {\n            isBuildingRoute = true\n            offRoutePoint?.let {\n                finishNavigation(isOffRouted = true)\n                moveCamera(LatLng(it.latitude(), it.longitude()), null)\n            }\n            origin = offRoutePoint\n            isNavigationInProgress = true\n            fetchRouteWithBearing(false)\n        }\n    }\n\n    private fun checkIfUserOffRoute(location: Location): Boolean {\n        val snapLocation: Location = snapEngine.getSnappedLocation(location, routeProgress)\n        val distance: Double = calculateDistanceBetween2Point(location, snapLocation)\n        return distance &gt; 30\n\n    }\n\n    private fun calculateDistanceBetween2Point(location1: Location, location2: Location): Double {\n        /// this function calculate distance between 2 point in the earth, with planetary arc\n        val radius = 6371000.0 // meters\n\n        val dLat = (location2.latitude - location1.latitude) * PI / 180.0\n        val dLon = (location2.longitude - location1.longitude) * PI / 180.0\n\n        val a =\n            sin(dLat / 2.0) * sin(dLat / 2.0) + cos(location1.latitude * PI / 180.0) * cos(location2.latitude * PI / 180.0) * sin(\n                dLon / 2.0\n            ) * sin(dLon / 2.0)\n        val c = 2.0 * kotlin.math.atan2(sqrt(a), sqrt(1.0 - a))\n\n        return radius * c\n    }\n</code></pre> All information about navigation will response in <code>onProgressChange</code></p>"},{"location":"sdk-mobile/sdk-android/navigation/#add-apikey-and-styleurl","title":"Add apikey and styleUrl","text":"<p>To ensure that the application does not crash when running, you need to add the apikey that VietMap provides at the <code>YOUR_API_KEY_HERE</code> keyword to use the SDK. You can get the apikey at https://maps.vietmap.vn/</p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/","title":"SDK Android","text":""},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#configure-gradle-and-androidmanifest","title":"Configure gradle and AndroidManifest","text":"<p><pre><code>    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\n    implementation \"androidx.cardview:cardview:1,0,0\"\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\n    implementation \"com.google.android.gms:play-services-location:21.0.1\"\n    implementation \"com.jakewharton:butterknife:10.2.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'com.github.vietmap-company:maps-sdk-android:1.0.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-ui-android:1.1.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-android:1.1.0'\n    implementation 'com.github.vietmap-company:vietmap-services-core:1.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-directions-models:1.0.1'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.github.vietmap-company:vietmap-services-android:1.1.1'\n    implementation 'com.squareup.picasso:picasso:2.8'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.2.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.google.code.gson:gson:2.10.1'\n    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'\n    implementation 'com.google.android.material:material:1.7.0'\n</code></pre> Configure the JitPack repository in the settings.gradle file. <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // add the following two lines to the repositories (at file setting.gradle)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre> For older projects, add the following code to the build.gradle file in the project module: <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre></p> <p>Change the compileSdkVersion and targetSdkVersion to version 33. <pre><code>compileSdk 33\ntargetSdk 33\n</code></pre></p> <p>Add the following permissions to the AndroidManifest.xml file: <pre><code>    &lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#configure-project","title":"Configure project","text":"<p>Add the following color codes to the res/values/colors.xml file: <pre><code>    &lt;color name=\"colorPrimary\"&gt;#8D64F9&lt;/color&gt;\n    &lt;color name=\"colorPrimaryDark\"&gt;#7845F3&lt;/color&gt;\n    &lt;color name=\"colorAccent\"&gt;#F56FA3&lt;/color&gt;\n    &lt;color name=\"red\"&gt;#FF0000&lt;/color&gt;\n</code></pre></p> <p>Create styles.xml at res/values  <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n&lt;style name=\"CustomNavigationMapRoute\" parent=\"NavigationMapRoute\"&gt;\n    &lt;item name=\"upcomingManeuverArrowBorderColor\"&gt;@color/red&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"CustomNavigationView\" parent=\"NavigationViewLight\"&gt;\n    &lt;item name=\"navigationViewRouteStyle\"&gt;@style/CustomNavigationMapRoute&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"customInstructionView\"&gt;\n    &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/NavigationLocationLayerStyle&lt;/item&gt;\n    &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"CustomInstructionView\" parent=\"Theme.AppCompat.Light.NoActionBar\"&gt;\n    &lt;item name=\"navigationViewPrimary\"&gt;@color/mapbox_navigation_view_color_primary&lt;/item&gt;\n    &lt;item name=\"navigationViewSecondary\"&gt;@color/mapbox_navigation_view_color_secondary&lt;/item&gt;\n    &lt;item name=\"navigationViewAccent\"&gt;@color/mapbox_navigation_view_color_accent&lt;/item&gt;\n    &lt;item name=\"navigationViewPrimaryText\"&gt;@color/mapbox_navigation_view_color_secondary&lt;/item&gt;\n    &lt;item name=\"navigationViewSecondaryText\"&gt;@color/mapbox_navigation_view_color_accent_text&lt;/item&gt;\n    &lt;item name=\"navigationViewDivider\"&gt;@color/mapbox_navigation_view_color_divider&lt;/item&gt;\n\n    &lt;item name=\"navigationViewListBackground\"&gt;@color/mapbox_navigation_view_color_list_background&lt;/item&gt;\n\n    &lt;item name=\"navigationViewBannerBackground\"&gt;@color/mapbox_navigation_view_color_banner_background&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerPrimaryText\"&gt;@color/mapbox_navigation_view_color_banner_primary_text&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerSecondaryText\"&gt;@color/mapbox_navigation_view_color_banner_secondary_text&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerManeuverPrimary\"&gt;@color/mapbox_navigation_view_color_banner_maneuver_primary&lt;/item&gt;\n    &lt;item name=\"navigationViewBannerManeuverSecondary\"&gt;@color/mapbox_navigation_view_color_banner_maneuver_secondary&lt;/item&gt;\n\n    &lt;item name=\"navigationViewProgress\"&gt;@color/mapbox_navigation_view_color_progress&lt;/item&gt;\n    &lt;item name=\"navigationViewProgressBackground\"&gt;@color/mapbox_navigation_view_color_progress_background&lt;/item&gt;\n\n    &lt;item name=\"navigationViewRouteStyle\"&gt;@style/NavigationMapRoute&lt;/item&gt;\n\n    &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/mapbox_LocationLayer&lt;/item&gt;\n\n    &lt;item name=\"navigationViewDestinationMarker\"&gt;@drawable/map_marker_light&lt;/item&gt;\n\n    &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n\n    &lt;item name=\"navigationViewMapStyle\"&gt;@string/navigation_guidance_day&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;!-- Base application theme. --&gt;\n&lt;style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\"&gt;\n    &lt;!-- Customize your theme here. --&gt;\n    &lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt;\n    &lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt;\n    &lt;item name=\"colorAccent\"&gt;@color/colorAccent&lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"TestNavigationViewDark\" parent=\"NavigationViewDark\"&gt;\n    &lt;!-- Map style URL --&gt;\n    &lt;item name=\"navigationViewMapStyle\"&gt;\n        YOUR STYLE URL HERE\n    &lt;/item&gt;\n&lt;/style&gt;\n\n&lt;style name=\"TestNavigationViewLight\" parent=\"NavigationViewLight\"&gt;\n    &lt;!-- Map style URL --&gt;\n    &lt;item name=\"navigationViewMapStyle\"&gt;\n        YOUR STYLE URL HERE\n    &lt;/item&gt;\n&lt;/style&gt;\n&lt;/resources&gt;\n</code></pre></p> <p>Add these following code into string.xml file <pre><code>    &lt;string name=\"title_mock_navigation\"&gt;Gi\u1ea3 b\u1ed9 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_mock_navigation\"&gt;Gi\u1ea3 b\u1ed9 phi\u00ean \u0111i\u1ec1u h\u01b0\u1edbng d\u00f9ng m\u00e1y \u0111\u1ecbnh v\u1ecb gi\u1ea3.&lt;/string&gt;\n\n    &lt;string name=\"title_off_route_detection\"&gt;Nh\u1eadn ra L\u1ea1c \u0111\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"description_off_route_detection\"&gt;S\u1eed d\u1ee5ng l\u1edbp RouteUtils \u0111\u1ec3 x\u00e1c \u0111\u1ecbnh ng\u01b0\u1eddi d\u00f9ng b\u1ecb l\u1ea1c \u0111\u01b0\u1eddng.&lt;/string&gt;\n\n    &lt;string name=\"title_reroute\"&gt;T\u00ecm \u0110\u01b0\u1eddng \u0111i M\u1edbi&lt;/string&gt;\n    &lt;string name=\"description_reroute\"&gt;Th\u1eed ch\u1ee9c n\u0103ng t\u00ecm \u0111\u01b0\u1eddng \u0111i m\u1edbi trong SDK \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_route_ui\"&gt;Tuy\u1ebfn \u0111\u01b0\u1eddng tr\u00ean B\u1ea3n \u0111\u1ed3 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_navigation_route_ui\"&gt;V\u1ebd tuy\u1ebfn \u0111\u01b0\u1eddng tr\u00ean b\u1ea3n \u0111\u1ed3&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_launcher\"&gt;Tr\u00ecnh kh\u1edfi \u0111\u1ed9ng \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_navigation_launcher\"&gt;Tr\u1ea3i nghi\u1ec7m giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng c\u00f3 th\u1ec3 xen v\u00e0o&lt;/string&gt;\n\n    &lt;string name=\"title_end_navigation\"&gt;K\u1ebft th\u00fac \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_end_navigation\"&gt;Cho bi\u1ebft c\u00e1ch k\u1ebft th\u00fac \u0111i\u1ec1u h\u01b0\u1edbng d\u00f9ng NavigationView&lt;/string&gt;\n\n    &lt;string name=\"title_dual_navigation_map\"&gt;\u0110\u00f4i B\u1ea3n \u0111\u1ed3 \u0110i\u1ec1u h\u01b0\u1edbng&lt;/string&gt;\n    &lt;string name=\"description_dual_navigation_map\"&gt;Ch\u1ec9 c\u00e1ch th\u00eam NavigationView v\u00e0 MapView v\u00e0o c\u00f9ng b\u1ed1 c\u1ee5c&lt;/string&gt;\n\n    &lt;string name=\"title_waypoint_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng gi\u1eefa c\u00e1c T\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n    &lt;string name=\"description_waypoint_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng gi\u1eefa c\u00e1c t\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n\n    &lt;string name=\"title_embedded_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng \u0111\u01b0\u1ee3c Nh\u00fang&lt;/string&gt;\n    &lt;string name=\"description_embedded_navigation\"&gt;\u0110i\u1ec1u h\u01b0\u1edbng trong khung nh\u00ecn ch\u1ee9a c\u00e1c khung nh\u00ecn kh\u00e1c&lt;/string&gt;\n\n    &lt;string name=\"title_fragment_navigation\"&gt;NavigationView th\u1ef1c hi\u1ec7n b\u1eb1ng Fragment&lt;/string&gt;\n    &lt;string name=\"description_fragment_navigation\"&gt;NavigationView th\u1ef1c hi\u1ec7n b\u1eb1ng Fragment&lt;/string&gt;\n\n    &lt;string name=\"settings\"&gt;Thi\u1ebft l\u1eadp&lt;/string&gt;\n    &lt;string name=\"simulate_route\"&gt;M\u00f4 ph\u1ecfng Tuy\u1ebfn \u0111\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"language\"&gt;Ng\u00f4n ng\u1eef&lt;/string&gt;\n    &lt;string name=\"unit_type\"&gt;H\u1ec7 \u0110o l\u01b0\u1eddng&lt;/string&gt;\n    &lt;string name=\"route_profile\"&gt;Ch\u1ebf \u0111\u1ed9&lt;/string&gt;\n\n    &lt;string name=\"error_route_not_available\"&gt;Tuy\u1ebfn \u0111\u01b0\u1eddng hi\u1ec7n t\u1ea1i kh\u00f4ng c\u00f3 s\u1eb5n&lt;/string&gt;\n    &lt;string name=\"error_select_longer_route\"&gt;Vui l\u00f2ng ch\u1ecdn m\u1ed9t tuy\u1ebfn \u0111\u01b0\u1eddng d\u00e0i h\u01a1n&lt;/string&gt;\n    &lt;string name=\"error_valid_route_not_found\"&gt;Kh\u00f4ng t\u00ecm th\u1ea5y tuy\u1ebfn \u0111i \u0111\u01b0\u1ee3c.&lt;/string&gt;\n    &lt;string name=\"explanation_long_press_waypoint\"&gt;Ch\u1ea1m l\u00e2u v\u00e0o b\u1ea3n \u0111\u1ed3 \u0111\u1ec3 th\u1ea3 ghim t\u1ecda \u0111\u1ed9 \u0111i\u1ec3m&lt;/string&gt;\n\n    &lt;string name=\"title_navigation_ui\"&gt;Navigation UI&lt;/string&gt;\n    &lt;string name=\"description_navigation_ui\"&gt;Showcase a Navigation UI session. Optional with simulation.&lt;/string&gt;\n\n\n    &lt;string name=\"title_component_navigation\"&gt;MapboxNavigation with UI components&lt;/string&gt;\n    &lt;string name=\"description_component_navigation\"&gt;MapboxNavigation with UI components&lt;/string&gt;\n\n    &lt;string name=\"unit_type_key\" translatable=\"false\"&gt;unit_type&lt;/string&gt;\n    &lt;string name=\"simulate_route_key\" translatable=\"false\"&gt;simulate_route&lt;/string&gt;\n    &lt;string name=\"language_key\" translatable=\"false\"&gt;language&lt;/string&gt;\n    &lt;string name=\"route_profile_key\" translatable=\"false\"&gt;route_profile&lt;/string&gt;\n    &lt;string name=\"default_locale\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n    &lt;string name=\"default_unit_type\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n    &lt;string name=\"current_night_mode\" translatable=\"false\"&gt;current_night_mode&lt;/string&gt;\n\n    &lt;string name=\"new_location\"&gt;V\u0129 \u0111\u1ed9: %1$s Kinh \u0111\u1ed9: %2$s&lt;/string&gt;\n    &lt;string name=\"map_view_style_url\" translatable=\"false\"&gt;YOUR_STYLE_URL_HERE&lt;/string&gt;\n\n    &lt;string name=\"user_location_permission_explanation\"&gt;\u1ee8ng d\u1ee5ng n\u00e0y c\u1ea7n s\u1eed d\u1ee5ng quy\u1ec1n v\u1ecb tr\u00ed \u0111\u1ec3 ho\u1ea1t \u0111\u1ed9ng ch\u00ednh x\u00e1c.&lt;/string&gt;\n    &lt;string name=\"user_location_permission_not_granted\"&gt;B\u1ea1n ch\u01b0a cung c\u1ea5p quy\u1ec1n v\u1ecb tr\u00ed.&lt;/string&gt;\n</code></pre></p> <p>Note: add the styleUrl at the location \"YOUR_STYLE_URL_HERE\" for the map_view_style_url key to run navigation.</p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#create-a-navigationactivity-to-utilize-the-sdk","title":"Create a NavigationActivity to utilize the SDK","text":"<p>Create a new activity named <code>VietMapNavigationActivity</code>.</p> <p>To create a new activity named <code>VietMapNavigationActivity</code> in your Android project, follow these steps: <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/vietmapNavigation\"&gt;\n\n    &lt;com.mapbox.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"invisible\"\n        app:maplibre_cameraZoom=\"16\"\n        app:layout_constraintHeight_percent=\"0.5\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n\n    &lt;com.mapbox.mapboxsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:maplibre_cameraZoom=\"16\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"invisible\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"invisible\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre> <code>VietMapNavigationActivity</code> needs to implement several listener classes below to capture events and handle them during the SDK navigation process. <pre><code>public class VietMapNavigationMapActivity extends AppCompatActivity implements \n        OnNavigationReadyCallback,\n        ProgressChangeListener,\n        NavigationListener,\n        Callback&lt;DirectionsResponse&gt;,\n        OnMapReadyCallback,\n        MapboxMap.OnMapClickListener,\n        MapboxMap.OnMapLongClickListener,\n        MapboxMap.OnMoveListener,\n        OnRouteSelectionChangeListener,\n        OffRouteListener, \n        RouteListener, NavigationEventListener \n{\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        //H\u00e0m Mapbox.getInstance c\u1ea7n \u0111\u01b0\u1ee3c g\u1ecdi ngay khi kh\u1edfi t\u1ea1o activity\n        Mapbox.getInstance(this);\n        super.onCreate(savedInstanceState);\n    }\n}\n</code></pre> Note <pre><code>* OnNavigationReadyCallback: Listens when the SDK starts navigation.\n* ProgressChangeListener(location, routeProgress): Continuously listens to the user's current location, current route information, next route, and remaining distance that the user needs to travel.\n* NavigationListener: Includes three functions:\n - onCancelNavigation: Listens when the user cancels the navigation.\n - onNavigationFinished: Listens when the user completes the journey.\n* onNavigationRunning: Listens when the user is actively navigating.\n* Callback(DirectionsResponse): Returns the result when the getRoute operation is completed.\n* OnMapReadyCallback: Listens when the map initialization is completed and applies the style to the map.\n* MapboxMap.OnMapClickListener, MapboxMap.OnMapLongClickListener, MapboxMap.OnMoveListener: Listen to map events such as click, long click, and move.\n* OnRouteSelectionChangeListener(DirectionsRoute newRouteSelected):\n* onNewPrimaryRouteSelected: Listens when the user selects a different route from the current route and returns the newly selected route.\n* OffRouteListener: Listens when the user deviates from the intended route and needs to find an alternative route based on the user's current location.\n* userOffRoute(Location currentLocation): Called when the user deviates from the intended route, providing the current location to find a new route.\n* RouteListener: Listens when the user arrives at the destination.\n* onArrival(): Called when the user reaches the destination.\n</code></pre></p> <p>Declare the necessary variables: <pre><code>    private static final int DEFAULT_CAMERA_ZOOM = 20;\n    private ConstraintLayout customUINavigation;\n    private NavigationView navigationView;\n    private MapView mapView;\n    private ProgressBar loading;\n    private FloatingActionButton launchNavigationFab;\n    private Point origin = Point.fromLngLat(106.675789, 10.759050);\n    private Point destination = Point.fromLngLat(106.686777, 10.775056);\n    private DirectionsRoute route;\n    private boolean isNavigationRunning;\n    private MapboxNavigation mapboxNavigation;\n    private LocationEngine locationEngine;\n    private NavigationMapRoute mapRoute;\n    private MapboxMap mapboxMap;\n    private ConstraintSet navigationMapConstraint;\n    private ConstraintSet navigationMapExpandedConstraint;\n    private boolean[] constraintChanged;\n    private LocationComponent locationComponent;\n    private ReplayRouteLocationEngine mockLocationEngine;\n    private FusedLocationProviderClient fusedLocationClient;\n    private int BEGIN_ROUTE_MILESTONE = 1001;\n    private boolean reRoute = false;\n    private boolean isArrived = false;\n    private NavigationViewOptions.Builder mapviewNavigationOptions;\n</code></pre> <code>onCreate</code>, initializing the navigation screen <pre><code>    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n\n        // Th\u00eam \u0111o\u1ea1n code sau v\u00e0o h\u00e0m onCreate\n        CustomNavigationNotification customNotification = new CustomNavigationNotification(this);\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n            customNotification.createNotificationChannel(this);\n        }\n        MapboxNavigationOptions options = MapboxNavigationOptions.builder()\n                .navigationNotification(customNotification)\n                .build();\n        mapboxNavigation = new MapboxNavigation(this, options);\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\n        initializeViews(savedInstanceState);\n        navigationView.initialize(this);\n        navigationMapConstraint = new ConstraintSet();\n        navigationMapConstraint.clone(customUINavigation);\n        navigationMapExpandedConstraint = new ConstraintSet();\n        navigationMapExpandedConstraint.clone(this, R.layout.vietmap_navigation_expand);\n        constraintChanged = new boolean[]{false};\n    }\n</code></pre> <code>initializeViews</code> <pre><code>    private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n    }\n</code></pre> <code>onMapReady</code> <pre><code>    @Override\n    public void onMapReady(@NonNull MapboxMap mapboxMap) {\n        this.mapboxMap = mapboxMap;\n        mapboxMap.setStyle(new Style.Builder().fromUri(YOUR_STYLE_URL_HERE), style -&gt; {\n            initLocationEngine();\n            getCurrentLocation();\n            enableLocationComponent(style);\n            initMapRoute();\n        });\n        this.mapboxMap.addOnMapClickListener(this);\n    }\n</code></pre> <pre><code>    private void initLocationEngine() {\n        mockLocationEngine = new ReplayRouteLocationEngine();\n        locationEngine = LocationEngineProvider.getBestLocationEngine(this);\n        long DEFAULT_INTERVAL_IN_MILLISECONDS = 5000;\n        long DEFAULT_MAX_WAIT_TIME = 30000;\n        LocationEngineRequest request = new LocationEngineRequest.Builder(DEFAULT_INTERVAL_IN_MILLISECONDS)\n                .setPriority(LocationEngineRequest.PRIORITY_HIGH_ACCURACY)\n                .setMaxWaitTime(DEFAULT_MAX_WAIT_TIME)\n                .build();\n\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            mockLocationEngine.assignLastLocation(origin);\n            return;\n        }\n    }\n\n    private void initMapRoute() {\n\n        mapRoute = new NavigationMapRoute(mapView, mapboxMap);\n        mapRoute.setOnRouteSelectionChangeListener(this);\n        mapRoute.addProgressChangeListener(new MapboxNavigation(this));\n    }\n\n\n    private void getCurrentLocation() {\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            fusedLocationClient.getLastLocation()\n                    .addOnSuccessListener(this, location -&gt; {\n                        if (location != null) {\n                            origin = Point.fromLngLat(location.getLongitude(), location.getLatitude());\n                        }\n                    });\n            return;\n        }\n    }\n    private void enableLocationComponent(Style style) {\n        locationComponent = mapboxMap.getLocationComponent();\n\n        if (locationComponent != null) {\n            locationComponent.activateLocationComponent(\n                    LocationComponentActivationOptions.builder(this, style).build()\n            );\n            if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                return;\n            }\n            locationComponent.setLocationComponentEnabled(true);\n            locationComponent.setCameraMode(CameraMode.TRACKING_GPS_NORTH);\n            locationComponent.zoomWhileTracking(DEFAULT_CAMERA_ZOOM);\n            locationComponent.setRenderMode(RenderMode.GPS);\n            locationComponent.setLocationEngine(locationEngine);\n        }\n    }\n</code></pre> Create <code>layout xml vietmap_navigation_expand</code> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/vietmapNavigationExpand\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"&gt;\n\n    &lt;com.mapbox.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"visible\"\n        app:maplibre_cameraZoom=\"15\"\n        app:layout_constraintHeight_percent=\"1\"\n        app:layout_constraintTop_toTopOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n\n    &lt;com.mapbox.mapboxsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:maplibre_cameraZoom=\"15\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintHeight_percent=\"0\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"gone\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre> expandCollapse <pre><code>    private void expandCollapse() {\n        TransitionManager.beginDelayedTransition(customUINavigation);\n        ConstraintSet constraint;\n        if (constraintChanged[0]) {\n            constraint = navigationMapConstraint;\n        } else {\n            constraint = navigationMapExpandedConstraint;\n        }\n        constraint.applyTo(customUINavigation);\n        constraintChanged[0] = !constraintChanged[0];\n    }\n</code></pre> stopNavigationFunction <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        launchNavigationFab.show();\n    }\n</code></pre> onCancelNavigation(): Listening function when the user stops navigation <pre><code>    @Override\n    public void onCancelNavigation() {\n        isNavigationRunning=false;\n        expandCollapse();\n        stopNavigationFunction();\n    }\n</code></pre> onRunning and onNavigationReady(): Listening for changes in the navigation state <pre><code>    @Override\n    public void onRunning(boolean b) {\n        isNavigationRunning = b;\n    }\n\n\n    @Override\n    public void onNavigationReady(boolean b) {\n\n        isNavigationRunning = b;\n    }\n</code></pre>  onNewPrimaryRouteSelected(): Listening for changes when user chooses alternative route <pre><code>     @Override\n    public void onNewPrimaryRouteSelected(DirectionsRoute directionsRoute) {\n        route=directionsRoute;\n    }\n</code></pre></p> <p>Create <code>CustomNavigationNotification</code> - Sending notifications to the user along each route: <pre><code>public class CustomNavigationNotification implements NavigationNotification {\n\n    private static final int CUSTOM_NOTIFICATION_ID = 91234821;\n    private static final String STOP_NAVIGATION_ACTION = \"stop_navigation_action\";\n    private final Notification customNotification;\n    private final NotificationCompat.Builder customNotificationBuilder;\n    private final NotificationManager notificationManager;\n    private BroadcastReceiver stopNavigationReceiver;\n    private int numberOfUpdates;\n\n    public CustomNavigationNotification(Context applicationContext) {\n        notificationManager = (NotificationManager) applicationContext.getSystemService(Context.NOTIFICATION_SERVICE);\n        customNotificationBuilder = new NotificationCompat.Builder(applicationContext, NAVIGATION_NOTIFICATION_CHANNEL)\n                .setSmallIcon(R.drawable.ic_launcher_foreground)\n                .setContentTitle(\"Custom Navigation Notification\")\n                .setContentText(\"Display your own content here!\")\n                .setContentIntent(createPendingStopIntent(applicationContext));\n        customNotification = customNotificationBuilder.build();\n    }\n\n    @Override\n    public Notification getNotification() {\n        return customNotification;\n    }\n\n    @Override\n    public int getNotificationId() {\n        return CUSTOM_NOTIFICATION_ID;\n    }\n\n    @Override\n    public void updateNotification(RouteProgress routeProgress) {\n        // Update the builder with a new number of updates\n        customNotificationBuilder.setContentText(\"Number of updates: \" + numberOfUpdates++);\n        notificationManager.notify(CUSTOM_NOTIFICATION_ID, customNotificationBuilder.build());\n    }\n\n    @Override\n    public void onNavigationStopped(Context context) {\n        try {\n            context.unregisterReceiver(stopNavigationReceiver);\n        }catch(Exception e){}\n        notificationManager.cancel(CUSTOM_NOTIFICATION_ID);\n    }\n\n    public void register(BroadcastReceiver stopNavigationReceiver, Context applicationContext) {\n        this.stopNavigationReceiver = stopNavigationReceiver;\n        applicationContext.registerReceiver(stopNavigationReceiver, new IntentFilter(STOP_NAVIGATION_ACTION));\n    }\n\n    private PendingIntent createPendingStopIntent(Context context) {\n        Intent stopNavigationIntent = new Intent(STOP_NAVIGATION_ACTION);\n        return PendingIntent.getBroadcast(context, 0, stopNavigationIntent, PendingIntent.FLAG_IMMUTABLE);\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    public void createNotificationChannel(Context context) {\n        NotificationChannel chan = new NotificationChannel(NAVIGATION_NOTIFICATION_CHANNEL, \"CustomNavigationNotification\", NotificationManager.IMPORTANCE_NONE);\n        chan.setLightColor(Color.BLUE);\n        chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);\n        NotificationManager service = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n        if (service != null) {\n            service.createNotificationChannel(chan);\n        }\n    }\n}\n</code></pre></p> <p>After calling the fetchRoute function, you will receive the result in the listener as follows: <pre><code>    @Override\n    public void onResponse(Call&lt;DirectionsResponse&gt; call, Response&lt;DirectionsResponse&gt; response) {\n        if (validRouteResponse(response)) {\n            if (reRoute) {\n                route = response.body().routes().get(0);\n                initNavigationOptions();\n                navigationView.updateCameraRouteOverview();\n                mapboxNavigation.addNavigationEventListener(this);\n                mapboxNavigation.startNavigation(route);\n                navigationView.startNavigation(this.mapviewNavigationOptions.build());\n                reRoute = false;\n                isArrived=false;\n            } else {\n                launchNavigationFab.show();\n                route = response.body().routes().get(0);\n                mapRoute.addRoutes(response.body().routes());\n                if (isNavigationRunning) {\n                    launchNavigation();\n                }\n            }\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#start-navigation","title":"Start navigation","text":"<p>After successfully fetching the route, the next step is to configure some options to start the navigation <pre><code>void initNavigationOptions(){\n        MapboxNavigationOptions navigationOptions = MapboxNavigationOptions.builder()\n                .build();\n        mapviewNavigationOptions =NavigationViewOptions.builder()\n                .navigationListener(this)\n                .routeListener(this)\n                .navigationOptions(navigationOptions)\n                .locationEngine(locationEngine)\n                .shouldSimulateRoute(false)\n                .progressChangeListener(progressChangeListener)\n                .directionsRoute(route)\n                .onMoveListener(this);\n    }\n</code></pre></p> <p>The <code>progressChangeListener</code> function returns two pieces of information: location (the current location of the user) and <code>routeProgress</code> (information about the current route the user is traversing, including the next maneuver, remaining distance, etc.).  <pre><code>    private ProgressChangeListener progressChangeListener = (location, routeProgress) -&gt; {\n        System.out.println(\"Progress Changing\");\n    };\n</code></pre> <pre><code>    private boolean validRouteResponse(Response&lt;DirectionsResponse&gt; response) {\n        return response.body() != null &amp;&amp; !response.body().routes().isEmpty();\n    }\n</code></pre></p> <p><code>initNavigationOptions</code> will be called before starting the navigation. <pre><code>    private void launchNavigation() {\n        launchNavigationFab.hide();\n        navigationView.setVisibility(View.VISIBLE);\n        mapboxNavigation.addOffRouteListener(this);\n        initNavigationOptions();\n        mapboxNavigation.startNavigation(route);\n        navigationView.startNavigation(this.mapviewNavigationOptions.build());\n        isArrived=false;\n    }\n</code></pre></p> <ul> <li> <p>The <code>launchNavigation</code>function is called on a button click event, as specified by the user.</p> </li> <li> <p>In the <code>launchNavigation</code> function, there are two startNavigation methods being invoked:</p> </li> <li>The <code>startNavigation</code> method of the <code>mapboxNavigation</code> instance is called. This method serves as a controller to listen to the navigation state and provides access to all the information about the ongoing trip.</li> <li>The <code>startNavigation</code> method of the <code>navigationView</code> is called to begin displaying the navigation UI on the screen. <pre><code>    @Override\n    public void userOffRoute(Location location) {\n        if(isArrived) return;\n            reRoute = true;\n            fetchRoute(Point.fromLngLat(location.getLongitude(), location.getLatitude()), destination);\n    }  \n</code></pre> <code>userOffRoute</code> function listens for when the user deviates from the returned route and then finds a more suitable alternative route based on the current user's direction of travel.  <pre><code>    @Override\n    public void onProgressChange(Location location, RouteProgress routeProgress) {\n\n    }\n</code></pre> <code>onProgressChange</code> function listens for the user's movement and continuously updates information about the route the user is traveling on, remaining distance, etc.  <pre><code>    @Override\n    public void onArrival() {\n        if(isArrived) return;\n        //X\u1eed l\u00fd th\u00f4ng b\u00e1o v\u00e0 k\u1ebft th\u00fac d\u1eabn \u0111\u01b0\u1eddng t\u1ea1i \u0111\u00e2y\n        isArrived=true;\n    }\n</code></pre> <code>onArrival</code> function listens for when the user has arrived at the destination and allows you to create custom notifications or alerts for the user. <pre><code>    @Override\n    public boolean onMapClick(@NonNull LatLng latLng) {\n        getCurrentLocation();\n        destination = Point.fromLngLat(latLng.getLongitude(), latLng.getLatitude());\n        if (origin != null) {\n            fetchRoute(origin, destination);\n        }\n        return false;\n    }\n</code></pre></li> </ul> <p><code>onMapClick</code> function receives the current location and retrieves the route from the current location to the location selected by the user.</p> <p>Add the following callback functions to ensure proper initialization and memory management, as well as handling user actions. The <code>NavigationView</code> component should be linked to the activity's lifecycle using the provided callbacks. This allows the <code>NavigationView</code> to correctly handle the activity's lifecycle and provide corresponding responses. <pre><code>    @Override\n    public void onStart() {\n        super.onStart();\n        navigationView.onStart();\n        mapView.onStart();\n    }\n\n    @Override\n        public void onResume() {\n        super.onResume();\n        navigationView.onResume();\n        mapView.onResume();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onLowMemory() {\n        super.onLowMemory();\n        navigationView.onLowMemory();\n        mapView.onLowMemory();\n    }\n\n    @Override\n    public void onBackPressed() {\n        stopNavigationFunction();\n\n        if (!navigationView.onBackPressed()) {\n            super.onBackPressed();\n        }\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        navigationView.onSaveInstanceState(outState);\n        mapView.onSaveInstanceState(outState);\n        super.onSaveInstanceState(outState);\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n        navigationView.onRestoreInstanceState(savedInstanceState);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        navigationView.onPause();\n        mapView.onPause();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        navigationView.onStop();\n        mapView.onStop();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        navigationView.onDestroy();\n        mapView.onDestroy();\n        if (locationEngine != null) {\n        }\n    }\n</code></pre></p> <p>In MainActivity, add a function to check location permissions and a button to navigate to the navigation screen <pre><code>public class MainActivity extends AppCompatActivity implements PermissionsListener {\n\n    private PermissionsManager permissionsManager;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button button =  findViewById(R.id.pushToNavigationScreen);\n        Intent it = new Intent(this, VietMapNavigationActivity.class);\n        button.setOnClickListener(view -&gt; startActivity(it));\n        permissionsManager = new PermissionsManager(this);\n        if (!PermissionsManager.areLocationPermissionsGranted(this)) {\n            permissionsManager.requestLocationPermissions(this);\n        }\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n                                           @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        permissionsManager.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n\n    @Override\n    public void onExplanationNeeded(List&lt;String&gt; permissionsToExplain) {\n        Toast.makeText(this, \"This app needs location permissions in order to show its functionality.\",\n                Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onPermissionResult(boolean granted) {\n        if (granted) {\n        } else {\n            Toast.makeText(this, \"You didn't grant location permissions.\",\n                    Toast.LENGTH_LONG).show();\n        }\n    }\n}\n</code></pre></p> <p>In the <code>activity_main.xml</code> file, add a layout for the button above <pre><code>    &lt;Button\n        android:id=\"@+id/pushToNavigationScreen\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start to VietMapNavigationScreen\"\n        tools:ignore=\"MissingConstraints\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#customise-ui","title":"Customise UI","text":"<p><pre><code>    navigationView.initViewConfig(true);\n</code></pre> <code>onCreate</code> function, add the following code snippet above to hide the default UI elements, leaving only the map and navigation components. The provided information for the trip will be displayed in full. Add this code into layout xml file in <code>VietmapNavigationActivity</code> <pre><code>    &lt;androidx.appcompat.widget.LinearLayoutCompat\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:id=\"@+id/navigationAction\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"&gt;\n        &lt;Button\n            android:id=\"@+id/overViewRouteButton\"\n            android:layout_width=\"wrap_content\"\n            app:layout_constraintStart_toEndOf=\"@+id/stopNavigation\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintTop_toBottomOf=\"@id/stopNavigation\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Over View\"\n            app:layout_anchorGravity=\"top|left\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/recenterBtnCustom\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Recenter\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/stopNavigation\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintTop_toBottomOf=\"@id/overViewRouteButton\"\n            android:visibility=\"gone\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Stop\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n    &lt;/androidx.appcompat.widget.LinearLayoutCompat&gt;\n</code></pre> Declare three buttons for performing actions like zooming to the midpoint, viewing the entire route, and canceling navigation <pre><code>    private Button recenterButton;\n    private Button overViewRouteButton;\n    private Button stopNavigation;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#listener-and-execution-functions-in-the-custom-ui-screen","title":"Listener and execution functions in the custom UI screen","text":"<p>Initialize the <code>NavigationPresenter</code> variable in the <code>onCreate</code> <pre><code>NavigationPresenter navigationPresenter = navigationView.getNavigationPresenter();\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#create-controller-for-manage-functions","title":"Create controller for manage functions","text":"<p>recenterFunction <pre><code>    recenterButton.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            navigationPresenter.onRecenterClick();\n            changeNavigationActionState(true);\n        }\n    });\n</code></pre> routeOverViewButton(): Overview of the route <pre><code>    overViewRouteButton.setOnClickListener(view -&gt; {\n        navigationPresenter.onRouteOverviewClick();\n        changeNavigationActionState(false);\n    });\n</code></pre> stopNavigation(): In order to end navigation <pre><code>    stopNavigation.setOnClickListener(view -&gt; {\n        changeNavigationActionState(false);\n        expandCollapse();\n        stopNavigationFunction();\n    });\n</code></pre> Adjust <code>stopNavigation</code> by using this: <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        launchNavigationFab.show();\n        //Th\u00eam 3 d\u00f2ng code d\u01b0\u1edbi \u0111\u00e2y \n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n    }\n</code></pre></p> <p>recenterButton(): To listen to map movement events and display a button to return to the route when the user moves the map <pre><code>    @Override\n    public void onMoveBegin(@NonNull MoveGestureDetector moveGestureDetector) {\n        changeNavigationActionState(false);\n    }\n</code></pre></p> <p>changeNavigationActionState(): To change the state of buttons <pre><code>    void changeNavigationActionState(boolean isNavigationRunning) {\n        if (!isNavigationRunning) {\n            overViewRouteButton.setVisibility(View.GONE);\n            recenterButton.setVisibility(View.VISIBLE);\n            stopNavigation.setVisibility(View.GONE);\n        } else {\n            overViewRouteButton.setVisibility(View.VISIBLE);\n            recenterButton.setVisibility(View.GONE);\n            stopNavigation.setVisibility(View.VISIBLE);\n        }\n    }\n</code></pre></p> <p>initializeViews() <pre><code>private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n        /// Th\u00eam 3 d\u00f2ng d\u01b0\u1edbi \u0111\u00e2y\n        overViewRouteButton = findViewById(R.id.overViewRouteButton);\n        stopNavigation = findViewById(R.id.stopNavigation);\n        recenterButton = findViewById(R.id.recenterBtnCustom);\n    }\n</code></pre> Add this code into <code>launchNavigation</code> <pre><code>    private void launchNavigation() {\n    ...\n        changeNavigationActionState(true);\n    ...\n    }\n</code></pre> Adjust <code>stopNavigation</code> <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        mapboxNavigation.stopNavigation();\n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n        launchNavigationFab.show();\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver1.1/#api-key-and-styleurl","title":"API key and styleURL","text":"<p>To ensure that the application doesn't crash when running, you need to add the styleUrl and apiKey provided by VietMap at the following locations:</p> <ul> <li> <p>Add styleUrl in the <code>src/values/strings.xml</code> file</p> </li> <li> <p>Add styleUrl in the <code>onMapReady</code> method</p> </li> <li> <p>Add apiKey in the <code>fetchRoute</code> method</p> </li> </ul>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/","title":"SDK Android","text":""},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#map","title":"Map","text":""},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#gradle-and-androidmanifest-configuration","title":"Gradle and AndroidManifest configuration","text":"<p>Add dependencies below to build.gradle module app <pre><code>    implementation 'com.github.vietmap-company:maps-sdk-android:2.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.squareup.picasso:picasso:2.8'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.2.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.google.code.gson:gson:2.10.1'\n</code></pre> Configure the <code>jitpack repository</code> in the setting.gradle file <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // Add two lines below to the repositories block (In setting.gradle file)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre> With older projects, add to the build.gradle file at module project <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre> Upgrade the compileSdk and targetSdk to version 33 <pre><code>compileSdk 33\n</code></pre> <pre><code>targetSdk 33\n</code></pre> Add the below permission request to the AndroidManifest.xml file <pre><code>    &lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#create-an-activity-to-show-map","title":"Create an activity to show map","text":"<p>Create an new activity with name MapViewExampleActivity</p> <p>In the xml file of created activity, add the code below <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MapViewExampleActivity\"&gt;\n\n    &lt;vn.vietmap.vietmapsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:vietmap_cameraZoom=\"1\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre> Activity needs to implement some of the following Listener classes to catch user events and process them. <pre><code>public class MapViewExampleActivity extends AppCompatActivity \nimplements OnMapReadyCallback, VietMapGL.OnMapClickListener, \nVietMapGL.OnMapLongClickListener {\n\n}\n</code></pre></p> <pre><code>* OnMapReadyCallback: Listen when map initial successfully and return a map style\n* VietMapGL.OnMapClickListener, VietMapGL.OnMapLongClickListener, VietMapGL.OnMoveListener: Listen map events\n</code></pre> <p>Define necessary variables <pre><code>    private MapView mapView;\n    private VietMapGL vietmapGL;\n    List&lt;Point&gt; polylineCoordinates = new ArrayList&lt;&gt;();\n    List&lt;Point&gt; polygonCoordinates = new ArrayList&lt;&gt;();\n    private LocationComponent locationComponent;\n</code></pre> At onCreate function, add some necessary code to init the map view <pre><code>    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        Vietmap.getInstance(this);\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_map_view_example);\n        mapView = findViewById(R.id.mapView);\n        mapView.onCreate(savedInstanceState);\n        mapView.getMapAsync(this);\n        Toast.makeText(MapViewExampleActivity.this, \"Long click on map to place a marker\", Toast.LENGTH_LONG).show();\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#onmapready","title":"onMapReady","text":"<p>Add listener function and handle them when SDK receives user actions callback <pre><code>    @Override\n    public void onMapReady(@NonNull VietMapGL vietmapGL) {\n        this.vietmapGL = vietmapGL;\n        vietmapGL.setStyle(new Style.Builder().fromUri(YOUR_MAP_STYLE_GOES_HERE), style -&gt; {\n            enableLocationComponent(style);\n            addPolygonLayer();\n            addPolylineLayer();\n            initMarker();\n//            moveMapToLocation(10.753892, 106.672606, 14);\n        });\n        this.vietmapGL.setOnPolylineClickListener(polyline -&gt; Toast.makeText(MapViewExampleActivity.this, \"You clicked on polyline with id \" + polyline.getId(), Toast.LENGTH_LONG).show());\n\n        this.vietmapGL.setOnPolygonClickListener(polygon -&gt; Toast.makeText(MapViewExampleActivity.this, \"You clicked on polygon with id \" + polygon.getId(), Toast.LENGTH_LONG).show());\n\n        this.vietmapGL.setOnMarkerClickListener(marker -&gt; {\n            Toast.makeText(MapViewExampleActivity.this, \"You clicked on marker with location \" + marker.getPosition().toString(), Toast.LENGTH_LONG).show();\n            return false;\n        });\n        this.vietmapGL.addOnMapClickListener(this);\n        this.vietmapGL.addOnMapLongClickListener(this);\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#show-the-user-current-location","title":"Show the user current location.","text":"<pre><code>    private void enableLocationComponent(Style style) {\n        locationComponent = vietmapGL.getLocationComponent();\n        if (locationComponent != null) {\n            locationComponent.activateLocationComponent(LocationComponentActivationOptions.builder(this, style).build());\n            if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                return;\n            }\n            locationComponent.setCameraMode(CameraMode.TRACKING_GPS_NORTH, 750L, 18.0, 10000.0, 10000.0, null);\n            locationComponent.setLocationComponentEnabled(true);\n            locationComponent.zoomWhileTracking(14);\n            locationComponent.setRenderMode(RenderMode.GPS);\n\n            LocationComponentOptions locationComponentOptions = LocationComponentOptions.builder(this)\n                    .pulseEnabled(true)\n                    .pulseColor(Color.BLUE)\n                    .pulseAlpha(0.4f)\n                    //Customize gps location icon here\n                    .gpsDrawable(R.drawable.custom_location)\n                    .accuracyAlpha(0.0f)\n                    .build();\n\n            locationComponent.applyStyle(locationComponentOptions);\n        }\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-polyline","title":"Add polyline","text":"<pre><code>    private void addPolylineLayer() {\n        polylineCoordinates.add(Point.fromLngLat(106.659260, 10.759879));\n        polylineCoordinates.add(Point.fromLngLat(106.675439, 10.752163));\n        polylineCoordinates.add(Point.fromLngLat(106.670375, 10.765950));\n        polylineCoordinates.add(Point.fromLngLat(106.658702, 10.775183));\n        polylineCoordinates.add(Point.fromLngLat(106.651228, 10.778732));\n        polylineCoordinates.add(Point.fromLngLat(106.659260, 10.759879));\n        LineString lineString = LineString.fromLngLats(polylineCoordinates);\n        LineLayer lineLayer = new LineLayer(\"polyline-layer\", \"polyline-source-id\");\n        lineLayer.setProperties(\n                PropertyFactory.lineColor(Color.RED),\n                PropertyFactory.lineWidth(5f),\n                PropertyFactory.lineOpacity(0.7f)\n        );\n\n        Style style = vietmapGL.getStyle();\n        if (style != null) {\n            style.addSource(new GeoJsonSource(\"polyline-source-id\", lineString));\n            style.addLayer(lineLayer);\n        }\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-polygon","title":"Add polygon","text":"<pre><code>    private void addPolygonLayer() {\n        polygonCoordinates.add(Point.fromLngLat(106.653561, 10.755427));\n        polygonCoordinates.add(Point.fromLngLat(106.666822, 10.737105));\n        polygonCoordinates.add(Point.fromLngLat(106.689939, 10.760373));\n        polygonCoordinates.add(Point.fromLngLat(106.665687, 10.807393));\n        polygonCoordinates.add(Point.fromLngLat(106.619878, 10.821045));\n        polygonCoordinates.add(Point.fromLngLat(106.650261, 10.766545));\n        Polygon polygon = Polygon.fromLngLats(Collections.singletonList(polygonCoordinates));\n        FillLayer fillLayer = new FillLayer(\"polygon-layer\", \"polygon-source-id\");\n        fillLayer.setProperties(\n                PropertyFactory.fillColor(Color.BLUE),\n                PropertyFactory.fillOpacity(0.8f)\n        );\n        Style style = vietmapGL.getStyle();\n        if (style != null) {\n            style.addSource(new GeoJsonSource(\"polygon-source-id\", polygon));\n            style.addLayer(fillLayer);\n        }\n\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-marker","title":"Add marker","text":"<p><pre><code>    private void initMarker() {\n        Bitmap iconBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.custom_marker);\n        vietmapGL.getStyle().addImage(\"custom_marker\", iconBitmap);\n    }\n    private void addMarker(LatLng position) {\n        SymbolManager symbolManager = new SymbolManager(mapView, vietmapGL, vietmapGL.getStyle());\n        SymbolOptions symbolOptions = new SymbolOptions()\n                .withLatLng(position)\n                .withIconImage(\"custom_marker\")\n                .withIconSize(0.3f);\n        symbolManager.create(symbolOptions);\n    }\n</code></pre> On long click callback function <pre><code>@Override\n    public boolean onMapLongClick(@NonNull LatLng latLng) {\n        addMarker(latLng);\n        return false;\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#move-map-camera-to-a-specific-location","title":"Move map camera to a specific location","text":"<pre><code>    private void moveMapToLocation(double latitude, double longitude, Integer zoom) {\n        vietmapGL.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(latitude, longitude), zoom));\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-some-necessary-function","title":"Add some necessary function","text":"<pre><code>    @Override\n    public void onStart() {\n        super.onStart();\n        mapView.onStart();\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        mapView.onResume();\n    }\n\n    @Override\n    public void onLowMemory() {\n        super.onLowMemory();\n        mapView.onLowMemory();\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        mapView.onPause();\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        mapView.onStop();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        mapView.onDestroy();\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        mapView.onSaveInstanceState(outState);\n        super.onSaveInstanceState(outState);\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#location-permission","title":"Location permission","text":"<p>Add the code below to MainActivity class to request location permission <pre><code>public class MainActivity extends AppCompatActivity implements PermissionsListener{\n\n    private PermissionsManager permissionsManager;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button button =  findViewById(R.id.pushToMapViewScreen);\n        Intent it = new Intent(this, MapViewExampleActivity.class);\n        button.setOnClickListener(view -&gt; startActivity(it));\n\n        permissionsManager = new PermissionsManager(this);\n        if (!PermissionsManager.areLocationPermissionsGranted(this)) {\n            permissionsManager.requestLocationPermissions(this);\n        }\n    }\n\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n                                           @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        permissionsManager.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n\n    @Override\n    public void onExplanationNeeded(List&lt;String&gt; permissionsToExplain) {\n        Toast.makeText(this, \"This app needs location permissions in order to show its functionality.\",\n                Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onPermissionResult(boolean granted) {\n        if (granted) {\n        } else {\n            Toast.makeText(this, \"You didn't grant location permissions.\",\n                    Toast.LENGTH_LONG).show();\n        }\n    }\n}\n</code></pre></p> <p>Add navigate page button for the MainActivity xml file <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\"&gt;\n\n    &lt;Button\n        android:id=\"@+id/pushToMapViewScreen\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"Start to VietMapAndroidMapScreen\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        /&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#navigation","title":"Navigation","text":""},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#gradle-and-androidmanifest-configure","title":"Gradle and AndroidManifest configure","text":"<p>Add dependencies below to build.gradle module app <pre><code>    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\n    implementation \"androidx.cardview:cardview:1,0,0\"\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.2.0\"\n    implementation \"com.google.android.gms:play-services-location:21.0.1\"\n    implementation \"com.jakewharton:butterknife:10.2.3\"\n    implementation 'androidx.core:core-ktx:1.7.0'\n    implementation 'com.github.vietmap-company:maps-sdk-android:2.0.0'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-ui-android:2.0.2'\n    implementation 'com.github.vietmap-company:maps-sdk-navigation-android:2.0.1'\n    implementation 'com.github.vietmap-company:vietmap-services-core:1.0.0'\n    implementation 'com.github.vietmap-company:vietmap-services-directions-models:1.0.1'\n    implementation 'com.github.vietmap-company:vietmap-services-turf-android:1.0.2'\n    implementation 'com.github.vietmap-company:vietmap-services-android:1.1.2'\n    implementation 'com.squareup.picasso:picasso:2.8'\n    implementation 'com.github.vietmap-company:vietmap-services-geojson-android:1.0.0'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.2.0'\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n    implementation 'com.google.code.gson:gson:2.10.1'\n    implementation 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'  \n</code></pre></p> <p>Configure the jitpack repository in the setting.gradle file <pre><code>dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        // Add two lines below to the repositories block (In setting.gradle file)\n        maven { url 'https://plugins.gradle.org/m2' }\n        maven { url 'https://jitpack.io' }\n    }\n}\n</code></pre></p> <p>With older projects, add to the build.gradle file at module project <pre><code>allprojects {\n    repositories {\n        google()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre> Upgrade the compileSdk and targetSdk to version 33 <pre><code>compileSdk 33\n</code></pre> <pre><code>targetSdk 33\n</code></pre></p> <p>Add the below permission request to the AndroidManifest.xml file <pre><code>    &lt;uses-permission android:name=\"android.permission.VIBRATE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /&gt;\n    &lt;uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-configuration-values-for-project","title":"Add configuration values for project","text":"<p>Add below colors to res/values/colors.xml file <pre><code>    &lt;color name=\"colorPrimary\"&gt;#8D64F9&lt;/color&gt;\n    &lt;color name=\"colorPrimaryDark\"&gt;#7845F3&lt;/color&gt;\n    &lt;color name=\"colorAccent\"&gt;#F56FA3&lt;/color&gt;\n    &lt;color name=\"red\"&gt;#FF0000&lt;/color&gt;\n</code></pre> Create styles.xml file at res/values folder and add the code below <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;resources&gt;\n    &lt;style name=\"CustomNavigationMapRoute\" parent=\"NavigationMapRoute\"&gt;\n        &lt;item name=\"upcomingManeuverArrowBorderColor\"&gt;@color/red&lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"CustomNavigationView\" parent=\"NavigationViewLight\"&gt;\n        &lt;item name=\"navigationViewRouteStyle\"&gt;@style/CustomNavigationMapRoute&lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"customInstructionView\"&gt;\n        &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/NavigationLocationLayerStyle&lt;/item&gt;\n        &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"CustomInstructionView\" parent=\"Theme.AppCompat.Light.NoActionBar\"&gt;\n        &lt;item name=\"navigationViewPrimary\"&gt;@color/vietmap_navigation_view_color_primary&lt;/item&gt;\n        &lt;item name=\"navigationViewSecondary\"&gt;@color/vietmap_navigation_view_color_secondary&lt;/item&gt;\n        &lt;item name=\"navigationViewAccent\"&gt;@color/vietmap_navigation_view_color_accent&lt;/item&gt;\n        &lt;item name=\"navigationViewPrimaryText\"&gt;@color/vietmap_navigation_view_color_secondary&lt;/item&gt;\n        &lt;item name=\"navigationViewSecondaryText\"&gt;@color/vietmap_navigation_view_color_accent_text&lt;/item&gt;\n        &lt;item name=\"navigationViewDivider\"&gt;@color/vietmap_navigation_view_color_divider&lt;/item&gt;\n\n        &lt;item name=\"navigationViewListBackground\"&gt;@color/vietmap_navigation_view_color_list_background&lt;/item&gt;\n\n        &lt;item name=\"navigationViewBannerBackground\"&gt;@color/vietmap_navigation_view_color_banner_background&lt;/item&gt;\n        &lt;item name=\"navigationViewBannerPrimaryText\"&gt;@color/vietmap_navigation_view_color_banner_primary_text&lt;/item&gt;\n        &lt;item name=\"navigationViewBannerSecondaryText\"&gt;@color/vietmap_navigation_view_color_banner_secondary_text&lt;/item&gt;\n        &lt;item name=\"navigationViewBannerManeuverPrimary\"&gt;@color/vietmap_navigation_view_color_banner_maneuver_primary&lt;/item&gt;\n        &lt;item name=\"navigationViewBannerManeuverSecondary\"&gt;@color/vietmap_navigation_view_color_banner_maneuver_secondary&lt;/item&gt;\n\n        &lt;item name=\"navigationViewProgress\"&gt;@color/vietmap_navigation_view_color_progress&lt;/item&gt;\n        &lt;item name=\"navigationViewProgressBackground\"&gt;@color/vietmap_navigation_view_color_progress_background&lt;/item&gt;\n\n        &lt;item name=\"navigationViewRouteStyle\"&gt;@style/NavigationMapRoute&lt;/item&gt;\n\n        &lt;item name=\"navigationViewLocationLayerStyle\"&gt;@style/mapbox_LocationLayer&lt;/item&gt;\n\n        &lt;item name=\"navigationViewDestinationMarker\"&gt;@drawable/map_marker_light&lt;/item&gt;\n\n        &lt;item name=\"navigationViewRouteOverviewDrawable\"&gt;@drawable/ic_route_preview&lt;/item&gt;\n\n        &lt;item name=\"navigationViewMapStyle\"&gt;@string/navigation_guidance_day&lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;!-- Base application theme. --&gt;\n    &lt;style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\"&gt;\n        &lt;!-- Customize your theme here. --&gt;\n        &lt;item name=\"colorPrimary\"&gt;@color/colorPrimary&lt;/item&gt;\n        &lt;item name=\"colorPrimaryDark\"&gt;@color/colorPrimaryDark&lt;/item&gt;\n        &lt;item name=\"colorAccent\"&gt;@color/colorAccent&lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"TestNavigationViewDark\" parent=\"NavigationViewDark\"&gt;\n        &lt;!-- Map style URL --&gt;\n        &lt;item name=\"navigationViewMapStyle\"&gt;\n            YOUR STYLE URL HERE\n        &lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"TestNavigationViewLight\" parent=\"NavigationViewLight\"&gt;\n        &lt;!-- Map style URL --&gt;\n        &lt;item name=\"navigationViewMapStyle\"&gt;\n            YOUR STYLE URL HERE\n        &lt;/item&gt;\n    &lt;/style&gt;\n\n    &lt;style name=\"progressBarBlue\" parent=\"@style/Theme.AppCompat\"&gt;\n        &lt;item name=\"colorAccent\"&gt;@color/blue&lt;/item&gt;\n    &lt;/style&gt;\n&lt;/resources&gt;\n</code></pre></p> <p>Add the code below to string.xml file <pre><code>&lt;resources&gt;\n&lt;string name=\"app_name\"&gt;VietMap Navigation&lt;/string&gt;\n\n&lt;string name=\"title_mock_navigation\"&gt;Mock Navigation&lt;/string&gt;\n&lt;string name=\"description_mock_navigation\"&gt;Mock a navigation session using a mock location provider.&lt;/string&gt;\n\n&lt;string name=\"title_off_route_detection\"&gt;Off-route detection&lt;/string&gt;\n&lt;string name=\"description_off_route_detection\"&gt;Use the RouteUtils class to detect when a user has gone off-route.&lt;/string&gt;\n\n&lt;string name=\"title_reroute\"&gt;Reroute&lt;/string&gt;\n&lt;string name=\"description_reroute\"&gt;Try out the reroute feature in the Navigation SDK.&lt;/string&gt;\n\n&lt;string name=\"title_navigation_route_ui\"&gt;Navigation Route UI&lt;/string&gt;\n&lt;string name=\"description_navigation_route_ui\"&gt;Draw a route on the map.&lt;/string&gt;\n\n&lt;string name=\"title_navigation_launcher\"&gt;Navigation Launcher&lt;/string&gt;\n&lt;string name=\"description_navigation_launcher\"&gt;An interactive user experience.&lt;/string&gt;\n\n&lt;string name=\"title_end_navigation\"&gt;End Navigation&lt;/string&gt;\n&lt;string name=\"description_end_navigation\"&gt;Show how to end navigation using NavigationView.&lt;/string&gt;\n\n&lt;string name=\"title_dual_navigation_map\"&gt;Dual Navigation Map&lt;/string&gt;\n&lt;string name=\"description_dual_navigation_map\"&gt;Show how to add a NavigationView and a MapView to the same layout.&lt;/string&gt;\n\n&lt;string name=\"title_waypoint_navigation\"&gt;Waypoint Navigation&lt;/string&gt;\n&lt;string name=\"description_waypoint_navigation\"&gt;Navigate between waypoints.&lt;/string&gt;\n\n&lt;string name=\"title_embedded_navigation\"&gt;Embedded Navigation&lt;/string&gt;\n&lt;string name=\"description_embedded_navigation\"&gt;Navigation in a view that contains other views.&lt;/string&gt;\n\n&lt;string name=\"title_fragment_navigation\"&gt;NavigationView implemented using Fragment&lt;/string&gt;\n&lt;string name=\"description_fragment_navigation\"&gt;NavigationView implemented using Fragment&lt;/string&gt;\n\n&lt;string name=\"settings\"&gt;Settings&lt;/string&gt;\n&lt;string name=\"simulate_route\"&gt;Simulate Route&lt;/string&gt;\n&lt;string name=\"language\"&gt;Language&lt;/string&gt;\n&lt;string name=\"unit_type\"&gt;Unit type&lt;/string&gt;\n&lt;string name=\"route_profile\"&gt;Route profile&lt;/string&gt;\n\n&lt;string name=\"error_route_not_available\"&gt;The current route is not available.&lt;/string&gt;\n&lt;string name=\"error_select_longer_route\"&gt;Please select a longer route.&lt;/string&gt;\n&lt;string name=\"error_valid_route_not_found\"&gt;No valid route was found.&lt;/string&gt;\n&lt;string name=\"explanation_long_press_waypoint\"&gt;Long press on the map to drop a waypoint pin.&lt;/string&gt;\n\n&lt;string name=\"title_navigation_ui\"&gt;Navigation UI&lt;/string&gt;\n&lt;string name=\"description_navigation_ui\"&gt;Showcase a Navigation UI session. Optional with simulation.&lt;/string&gt;\n\n\n&lt;string name=\"title_component_navigation\"&gt;VietMapNavigation with UI components&lt;/string&gt;\n&lt;string name=\"description_component_navigation\"&gt;VietMapNavigation with UI components&lt;/string&gt;\n\n&lt;string name=\"unit_type_key\" translatable=\"false\"&gt;unit_type&lt;/string&gt;\n&lt;string name=\"simulate_route_key\" translatable=\"false\"&gt;simulate_route&lt;/string&gt;\n&lt;string name=\"language_key\" translatable=\"false\"&gt;language&lt;/string&gt;\n&lt;string name=\"route_profile_key\" translatable=\"false\"&gt;route_profile&lt;/string&gt;\n&lt;string name=\"default_locale\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n&lt;string name=\"default_unit_type\" translatable=\"false\"&gt;default_for_device&lt;/string&gt;\n&lt;string name=\"current_night_mode\" translatable=\"false\"&gt;current_night_mode&lt;/string&gt;\n\n&lt;string name=\"new_location\"&gt;Latitude: %1$s Longitude: %2$s&lt;/string&gt;\n&lt;string name=\"map_view_style_url\" translatable=\"false\"&gt;YOUR_STYLE_URL_HERE&lt;/string&gt;\n\n&lt;string name=\"user_location_permission_explanation\"&gt;This app needs to use location permission to function correctly.&lt;/string&gt;\n&lt;string name=\"user_location_permission_not_granted\"&gt;You have not granted\n&lt;string name=\"tts_guide\"&gt;If the app doesn't provide voice-guided navigation, please press the settings button below and choose the text-to-speech tool by Google to convert text into speech, then try again&lt;/string&gt;\n</code></pre></p> <p>NOTE: Need to add styleUrl in position YOUR_STYLE_URL_HERE for key map_view_style_url to run navigation</p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#create-a-navigation-activity","title":"Create a navigation activity","text":"<p>Create new VietMapNavigationActivity Add the code below to xml file of created activity <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/vietmapNavigation\"&gt;\n\n    &lt;vn.vietmap.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"invisible\"\n        app:maplibre_cameraZoom=\"16\"\n        app:layout_constraintHeight_percent=\"0.5\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n\n    &lt;vn.vietmap.vietmapsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:maplibre_cameraZoom=\"16\"\n        android:visibility=\"visible\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintHeight_percent=\"1\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"invisible\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"invisible\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre></p> <p>Activity needs to implement some of the following Listener classes to catch user events, navigation event and process them. <pre><code>public class VietMapNavigationActivity extends AppCompatActivity\n        implements OnNavigationReadyCallback,\n        ProgressChangeListener, OnMapReadyCallback,\n        NavigationListener, Callback&lt;DirectionsResponse&gt;, \n        VietMapGL.OnMapClickListener, VietMapGL.OnMapLongClickListener,\n        VietMapGL.OnMoveListener, OnRouteSelectionChangeListener,\n        OffRouteListener, RouteListener, NavigationEventListener\n{\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        Vietmap.getInstance(this);\n        super.onCreate(savedInstanceState);\n    }\n}\n</code></pre></p> <pre><code>* OnNavigationReadyCallback: Listens when the SDK starts navigation.\n* ProgressChangeListener(location, routeProgress): Continuously listens to the user's current location, current route information, next route, and remaining distance that the user needs to travel.\n* NavigationListener: Includes three functions:\n* onCancelNavigation: Listens when the user cancels the navigation.\n* onNavigationFinished: Listens when the user completes the journey.\n* onNavigationRunning: Listens when the user is actively navigating.\n* Callback(DirectionsResponse): Returns the result when the getRoute operation is completed.\n* OnMapReadyCallback: Listens when the map initialization is completed and applies the style to the map.\n* MapboxMap.OnMapClickListener, MapboxMap.OnMapLongClickListener, MapboxMap.OnMoveListener: Listen to map events such as click, long click, and move.\n* OnRouteSelectionChangeListener(DirectionsRoute newRouteSelected):\n* onNewPrimaryRouteSelected: Listens when the user selects a different route from the current route and returns the newly selected route.\n* OffRouteListener: Listens when the user deviates from the intended route and needs to find an alternative route based on the user's current location.\n* userOffRoute(Location currentLocation): Called when the user deviates from the intended route, providing the current location to find a new route.\n* RouteListener: Listens when the user arrives at the destination.\n* onArrival(): Called when the user reaches the destination.\n</code></pre> <p>Define necessary variables <pre><code>    private static final int DEFAULT_CAMERA_ZOOM = 18;\n    private ConstraintLayout customUINavigation;\n    private NavigationView navigationView;\n    private MapView mapView;\n    private ProgressBar loading;\n    private FloatingActionButton launchNavigationFab;\n    private Point origin = Point.fromLngLat(106.675789, 10.759050);\n    private Point destination = Point.fromLngLat(106.686777, 10.775056);\n    private DirectionsRoute route;\n    private boolean isNavigationRunning;\n    private VietmapNavigation vietmapNavigation;\n    private LocationEngine locationEngine;\n    private NavigationMapRoute mapRoute;\n    private VietMapGL vietmapGL;\n    private ConstraintSet navigationMapConstraint;\n    private ConstraintSet navigationMapExpandedConstraint;\n    private boolean[] constraintChanged;\n    private LocationComponent locationComponent;\n    private ReplayRouteLocationEngine mockLocationEngine;\n    private FusedLocationProviderClient fusedLocationClient;\n    private int BEGIN_ROUTE_MILESTONE = 1001;\n    private boolean reRoute = false;\n    private boolean isArrived = false;\n    private NavigationViewOptions.Builder mapviewNavigationOptions; \n</code></pre></p> <p>Call necessary function in onCreate callback <pre><code>    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        CustomNavigationNotification customNotification = new CustomNavigationNotification(this);\n        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {\n            customNotification.createNotificationChannel(this);\n        }\n        VietmapNavigationOptions options = VietmapNavigationOptions.builder()\n                .navigationNotification(customNotification).build();\n        vietmapNavigation = new VietmapNavigation(this, options);\n        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\n        initializeViews(savedInstanceState);\n        navigationView.initialize(this);\n        navigationMapConstraint = new ConstraintSet();\n        navigationMapConstraint.clone(customUINavigation);\n        navigationMapExpandedConstraint = new ConstraintSet();\n        navigationMapExpandedConstraint.clone(this, R.layout.vietmap_navigation_expand);\n        constraintChanged = new boolean[]{false};\n    }\n</code></pre> initializeViews function <pre><code>    private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#in-onmapready-callback-function","title":"In onMapReady callback function","text":"<p><pre><code>    @Override\n    public void onMapReady(@NonNull VietMapGL vietmapGL) {\n        this.vietmapGL = vietmapGL;\n        vietmapGL.setStyle(new Style.Builder().fromUri(YOUR_STYLE_URL_HERE), style -&gt; {\n            initLocationEngine();\n            getCurrentLocation();\n            enableLocationComponent(style);\n            initMapRoute();\n        });\n        this.vietmapGL.addOnMapClickListener(this);\n    }\n</code></pre> <pre><code>    private void initLocationEngine() {\n        mockLocationEngine = new ReplayRouteLocationEngine();\n        locationEngine = LocationEngineProvider.getBestLocationEngine(this);\n        long DEFAULT_INTERVAL_IN_MILLISECONDS = 5000;\n        long DEFAULT_MAX_WAIT_TIME = 30000;\n        LocationEngineRequest request = new LocationEngineRequest.Builder(DEFAULT_INTERVAL_IN_MILLISECONDS)\n                .setPriority(LocationEngineRequest.PRIORITY_HIGH_ACCURACY)\n                .setMaxWaitTime(DEFAULT_MAX_WAIT_TIME)\n                .build();\n\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            mockLocationEngine.assignLastLocation(origin);\n            return;\n        }\n    }\n\n    private void initMapRoute() {\n        mapRoute = new NavigationMapRoute(mapView, vietmapGL);\n        mapRoute.setOnRouteSelectionChangeListener(this);\n        mapRoute.addProgressChangeListener(new VietmapNavigation(this));\n    }\n\n    private void getCurrentLocation() {\n        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) == PackageManager.PERMISSION_GRANTED) {\n            fusedLocationClient.getLastLocation()\n                    .addOnSuccessListener(this, location -&gt; {\n                        if (location != null) {\n                            origin = Point.fromLngLat(location.getLongitude(), location.getLatitude());\n                        }\n                    });\n            return;\n        }\n    }\n\n    private void enableLocationComponent(Style style) {\n        locationComponent = vietmapGL.getLocationComponent();\n\n        if (locationComponent != null) {\n            locationComponent.activateLocationComponent(LocationComponentActivationOptions.builder(this, style).build());\n            if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                return;\n            }\n            locationComponent.setLocationComponentEnabled(true);\n            locationComponent.setCameraMode(CameraMode.TRACKING_GPS_NORTH);\n            locationComponent.zoomWhileTracking(DEFAULT_CAMERA_ZOOM);\n            locationComponent.setRenderMode(RenderMode.GPS);\n            locationComponent.setLocationEngine(locationEngine);\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#create-layout-xml-named-vietmap_navigation_expand","title":"Create layout xml named vietmap_navigation_expand","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:id=\"@+id/vietmapNavigationExpand\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"&gt;\n\n\n    &lt;vn.vietmap.services.android.navigation.ui.v5.NavigationView\n        android:id=\"@+id/navigationView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:visibility=\"visible\"\n        app:vietmap_cameraZoom=\"15\"\n        app:layout_constraintHeight_percent=\"1\"\n        app:layout_constraintTop_toTopOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:navigationDarkTheme=\"@style/NavigationViewDark\"\n        app:navigationLightTheme=\"@style/NavigationViewLight\"/&gt;\n    &lt;vn.vietmap.vietmapsdk.maps.MapView\n        android:id=\"@+id/mapView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        app:vietmap_cameraZoom=\"15\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/vietmapNavigationExpand\"\n        app:layout_constraintHeight_percent=\"0\"/&gt;\n\n    &lt;ProgressBar\n        android:id=\"@+id/loading\"\n        style=\"?android:attr/progressBarStyle\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:indeterminate=\"true\"\n        android:visibility=\"gone\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"/&gt;\n\n    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/launchNavigation\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"16dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:src=\"@drawable/ic_navigation\"\n        android:tint=\"@android:color/white\"\n        android:visibility=\"gone\"\n        app:backgroundTint=\"@color/colorPrimary\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"/&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#expandcollapse","title":"expandCollapse","text":"<pre><code>    private void expandCollapse() {\n        TransitionManager.beginDelayedTransition(customUINavigation);\n        ConstraintSet constraint;\n        if (constraintChanged[0]) {\n            constraint = navigationMapConstraint;\n        } else {\n            constraint = navigationMapExpandedConstraint;\n        }\n        constraint.applyTo(customUINavigation);\n        constraintChanged[0] = !constraintChanged[0];\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#stopnavigationfunction","title":"stopNavigationFunction","text":"<pre><code>    void stopNavigationFunction() {\n        navigationView.stopNavigation();\n        vietmapNavigation.stopNavigation();\n        launchNavigationFab.show();\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#oncancelnavigation","title":"onCancelNavigation","text":"<p>Listener when user click on cancel navigation button <pre><code>    @Override\n    public void onCancelNavigation() {\n        isNavigationRunning=false;\n        expandCollapse();\n        stopNavigationFunction();\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#onrunning-and-onnavigationready","title":"onRunning and onNavigationReady","text":"<pre><code>    @Override\n    public void onRunning(boolean b) {\n        isNavigationRunning = b;\n    }\n\n    @Override\n    public void onNavigationReady(boolean b) {\n        isNavigationRunning = b;\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#onnewprimaryrouteselected","title":"onNewPrimaryRouteSelected","text":"<p>Listen when user select a new direction route <pre><code>    @Override\n    public void onNewPrimaryRouteSelected(DirectionsRoute directionsRoute) {\n        route=directionsRoute;\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#customnavigationnotification","title":"CustomNavigationNotification","text":"<p>Show notification about current routing information <pre><code>public class CustomNavigationNotification implements NavigationNotification {\n\n    private static final int CUSTOM_NOTIFICATION_ID = 91234821;\n    private static final String STOP_NAVIGATION_ACTION = \"stop_navigation_action\";\n    private final Notification customNotification;\n    private final NotificationCompat.Builder customNotificationBuilder;\n    private final NotificationManager notificationManager;\n    private BroadcastReceiver stopNavigationReceiver;\n    private int numberOfUpdates;\n\n    public CustomNavigationNotification(Context applicationContext) {\n        notificationManager = (NotificationManager) applicationContext.getSystemService(Context.NOTIFICATION_SERVICE);\n        customNotificationBuilder = new NotificationCompat.Builder(applicationContext, NAVIGATION_NOTIFICATION_CHANNEL)\n                .setSmallIcon(R.drawable.ic_launcher_foreground)\n                .setContentTitle(\"Custom Navigation Notification\")\n                .setContentText(\"Display your own content here!\")\n                .setContentIntent(createPendingStopIntent(applicationContext));\n        customNotification = customNotificationBuilder.build();\n    }\n\n    @Override\n    public Notification getNotification() {\n        return customNotification;\n    }\n\n    @Override\n    public int getNotificationId() {\n        return CUSTOM_NOTIFICATION_ID;\n    }\n\n    @Override\n    public void updateNotification(RouteProgress routeProgress) {\n        // Update the builder with a new number of updates\n        customNotificationBuilder.setContentText(\"Number of updates: \" + numberOfUpdates++);\n        notificationManager.notify(CUSTOM_NOTIFICATION_ID, customNotificationBuilder.build());\n    }\n\n    @Override\n    public void onNavigationStopped(Context context) {\n        try {\n            context.unregisterReceiver(stopNavigationReceiver);\n        }catch(Exception e){}\n        notificationManager.cancel(CUSTOM_NOTIFICATION_ID);\n    }\n\n    public void register(BroadcastReceiver stopNavigationReceiver, Context applicationContext) {\n        this.stopNavigationReceiver = stopNavigationReceiver;\n        applicationContext.registerReceiver(stopNavigationReceiver, new IntentFilter(STOP_NAVIGATION_ACTION));\n    }\n\n    private PendingIntent createPendingStopIntent(Context context) {\n        Intent stopNavigationIntent = new Intent(STOP_NAVIGATION_ACTION);\n        return PendingIntent.getBroadcast(context, 0, stopNavigationIntent, PendingIntent.FLAG_IMMUTABLE);\n    }\n\n    @RequiresApi(Build.VERSION_CODES.O)\n    public void createNotificationChannel(Context context) {\n        NotificationChannel chan = new NotificationChannel(NAVIGATION_NOTIFICATION_CHANNEL, \"CustomNavigationNotification\", NotificationManager.IMPORTANCE_NONE);\n        chan.setLightColor(Color.BLUE);\n        chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);\n        NotificationManager service = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n        if (service != null) {\n            service.createNotificationChannel(chan);\n        }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#fetch-route-find-a-route-between-two-coordinates","title":"Fetch route (Find a route between two coordinates)","text":"<p>Fetch route API required two params is <code>origin</code> and <code>destination</code>, is the current position of the user and the target location.</p> <p>Example: <pre><code>    Point origin = Point.fromLngLat(106.675884,10.759197);\n    Point destination = Point.fromLngLat( 105.577136, 18.932147);\n</code></pre></p> <p>From point and destination point, let call fetchRoute function as below code: <pre><code>    private void fetchRoute(Point origin, Point destination, @Nullable Double bearing) {\n        NavigationRoute.Builder builder = NavigationRoute\n                .builder(this)\n                .apikey(YOUR_VIETMAP_APIKEY_HERE)\n                .origin(origin, bearing, bearing)\n                .destination(destination, bearing, bearing);\n\n        builder.build().getRoute(this);\n    }\n</code></pre> Handle response of fetchRoute function: <pre><code>    @Override\n    public void onResponse(Call&lt;DirectionsResponse&gt; call, Response&lt;DirectionsResponse&gt; response) {\n\n        if (validRouteResponse(response)) {\n            if (reRoute) {\n                route = response.body().routes().get(0);\n                initNavigationOptions();\n                navigationView.updateCameraRouteOverview();\n                vietmapNavigation.addNavigationEventListener(this);\n                vietmapNavigation.startNavigation(route);\n                navigationView.startNavigation(this.mapviewNavigationOptions.build());\n                reRoute = false;\n                isArrived = false;\n            } else {\n                launchNavigationFab.show();\n                route = response.body().routes().get(0);\n                mapRoute.addRoutes(response.body().routes());\n                if (isNavigationRunning) {\n                    launchNavigation();\n                }\n            }\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#start-navigation","title":"Start navigation","text":"<p>After called the fetch route API, you should configure some options to start navigation <pre><code>    void initNavigationOptions() {\n        VietmapNavigationOptions navigationOptions = VietmapNavigationOptions.builder()\n                .build();\n\n        mapviewNavigationOptions = NavigationViewOptions\n                .builder().navigationListener(this)\n                .routeListener(this)\n                .navigationOptions(navigationOptions)\n                .locationEngine(locationEngine)\n                .shouldSimulateRoute(false)\n                .progressChangeListener(progressChangeListener)\n                .directionsRoute(route)\n                .onMoveListener(this);\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#progresschangelistener","title":"progressChangeListener","text":"<p>Function response location (current location of the user) and routeProgress (Information about the route the user is taking, the direction of the next turn, the distance to the next turn,...) <pre><code>    private ProgressChangeListener progressChangeListener = (location, routeProgress) -&gt; {\n        System.out.println(\"Progress Changing\");\n    };\n</code></pre> <pre><code>    private boolean validRouteResponse(Response&lt;DirectionsResponse&gt; response) {\n        return response.body() != null &amp;&amp; !response.body().routes().isEmpty();\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#initnavigationoptions","title":"initNavigationOptions","text":"<p>Function will be called before starting the navigation <pre><code>    private void launchNavigation() {\n        launchNavigationFab.hide();\n        navigationView.setVisibility(View.VISIBLE);\n        vietmapNavigation.addOffRouteListener(this);\n        initNavigationOptions();\n        vietmapNavigation.startNavigation(route);\n        navigationView.startNavigation(this.mapviewNavigationOptions.build());\n        isArrived = false;\n    }\n</code></pre> <code>launchNavigation</code> should call inside a button In <code>launchNavigation</code> function, there're two startNavigation function called:</p> <p>vietmapNavigation is a controller to listen to all status and information of navigation, and return some navigation callback. navigationView will show the UI of navigation.</p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#useroffroute","title":"userOffRoute","text":"<p>Function return a callback when the user goes wrong with the returned route</p> <pre><code>    @Override\n    public void userOffRoute(Location location) {\n        if(isArrived) return;\n            reRoute = true;\n            fetchRoute(Point.fromLngLat(location.getLongitude(), location.getLatitude()), destination);\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#onprogresschange","title":"onProgressChange","text":"<p>Function listen as the user moves, continuously update information about the route the user is traveling, the remaining distance,... <pre><code>    @Override\n    public void onProgressChange(Location location, RouteProgress routeProgress) {\n\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#onarrival","title":"onArrival","text":"<p>Function listen when user is arrival to the destination location <pre><code>    @Override\n    public void onArrival() {\n        if(isArrived) return;        \n        isArrived=true;\n    }\n</code></pre></p> <p>Adding the following callbacks functions to ensure proper initialization and memory management, as well as handling user actions, the NavigationView component must be linked to the activity's lifecycle using some callbacks below. This allows the NavigationView to properly handle the activity's lifecycle and respond accordingly. <pre><code>    @Override\n    public void onStart() {\n        super.onStart();\n        navigationView.onStart();\n        mapView.onStart();\n    }\n\n    @Override\n        public void onResume() {\n        super.onResume();\n        navigationView.onResume();\n        mapView.onResume();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onLowMemory() {\n        super.onLowMemory();\n        navigationView.onLowMemory();\n        mapView.onLowMemory();\n    }\n\n    @Override\n    public void onBackPressed() {\n        stopNavigationFunction();\n\n        if (!navigationView.onBackPressed()) {\n            super.onBackPressed();\n        }\n    }\n\n    @Override\n    protected void onSaveInstanceState(Bundle outState) {\n        navigationView.onSaveInstanceState(outState);\n        mapView.onSaveInstanceState(outState);\n        super.onSaveInstanceState(outState);\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n        navigationView.onRestoreInstanceState(savedInstanceState);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        navigationView.onPause();\n        mapView.onPause();\n        if (locationEngine != null) {\n        }\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        navigationView.onStop();\n        mapView.onStop();\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        navigationView.onDestroy();\n        mapView.onDestroy();\n        if (locationEngine != null) {\n        }\n    }\n</code></pre></p> <p>At MainActivity, add the function to check location permission and push to the navigation activity <pre><code>public class MainActivity extends AppCompatActivity implements PermissionsListener {\n\n    private PermissionsManager permissionsManager;\n\n    private TextToSpeech textToSpeech;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        Button button =  findViewById(R.id.pushToNavigationScreen);\n        Button ttsButton = findViewById(R.id.testSpeech);\n        Button speechAgain = findViewById(R.id.speechAgain);\n        Intent it = new Intent(this, VietMapNavigationActivity.class);\n        button.setOnClickListener(view -&gt; {\n            startActivity(it);\n            speechAgain.setVisibility(View.GONE);\n        });\n        speechAgain.setOnClickListener(view -&gt; speakOut(\"Ng\u00f4n ng\u1eef: Ti\u1ebfng Vi\u1ec7t\"));\n        ttsButton.setOnClickListener(view-&gt; {\n            startActivity(new Intent(\"com.android.settings.TTS_SETTINGS\"));\n            speechAgain.setVisibility(View.VISIBLE);\n        });\n        permissionsManager = new PermissionsManager(this);\n        if (!PermissionsManager.areLocationPermissionsGranted(this)) {\n            permissionsManager.requestLocationPermissions(this);\n        }\n\n        textToSpeech = new TextToSpeech(getApplicationContext(), status -&gt; setTextToSpeechLanguage());\n    }\n\n    private void setTextToSpeechLanguage() {\n        Locale language =new Locale(\"vi\",\"VN\");\n        int result = textToSpeech.setLanguage(language);\n        if (result == TextToSpeech.LANG_MISSING_DATA) {\n            Toast.makeText(this, \"Kh\u00f4ng c\u00f3 d\u1eef li\u1ec7u ng\u00f4n ng\u1eef\", Toast.LENGTH_LONG).show();\n            return;\n        } else if (result == TextToSpeech.LANG_NOT_SUPPORTED) {\n            Toast.makeText(this, \"Ch\u01b0a h\u1ed7 tr\u1ee3 ng\u00f4n ng\u1eef \"+language.getLanguage() , Toast.LENGTH_LONG).show();\n            return;\n        } else {\n            Toast.makeText(this, \"Ng\u00f4n ng\u1eef: Ti\u1ebfng Vi\u1ec7t\", Toast.LENGTH_LONG).show();\n            speakOut(\"Ng\u00f4n ng\u1eef: Ti\u1ebfng Vi\u1ec7t\");\n        }\n    }\n    private void speakOut(String speechContent) {\n        String utteranceId = UUID.randomUUID().toString();\n        textToSpeech.speak(speechContent, TextToSpeech.QUEUE_FLUSH, null, utteranceId);\n    }\n    @Override\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\n                                           @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n        permissionsManager.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n\n    @Override\n    public void onExplanationNeeded(List&lt;String&gt; permissionsToExplain) {\n        Toast.makeText(this, \"This app needs location permissions in order to show its functionality.\",\n                Toast.LENGTH_LONG).show();\n    }\n\n    @Override\n    public void onPermissionResult(boolean granted) {\n        if (granted) {\n        } else {\n            Toast.makeText(this, \"You didn't grant location permissions.\",\n                    Toast.LENGTH_LONG).show();\n        }\n    }\n}\n</code></pre></p> <p>In activity_main.xml file, add button layout <pre><code>    &lt;Button\n        android:id=\"@+id/pushToNavigationScreen\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"D\u1eabn \u0111\u01b0\u1eddng v\u1edbi VietMap\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n         /&gt;\n\n    &lt;TextView\n        android:id=\"@+id/guideText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:layout_marginLeft=\"15dp\"\n        android:textSize=\"16dp\"\n        android:layout_marginRight=\"15dp\"\n        app:layout_constraintTop_toBottomOf=\"@+id/pushToNavigationScreen\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:text=\"@string/tts_guide\"\n        /&gt;\n\n    &lt;Button\n        android:id=\"@+id/testSpeech\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"C\u00e0i \u0111\u1eb7t text to speech\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/guideText\"\n        /&gt;\n\n    &lt;Button\n        android:id=\"@+id/speechAgain\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"36dp\"\n        android:text=\"Nghe l\u1ea1i\"\n        android:visibility=\"gone\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.494\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/testSpeech\"\n        /&gt;\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#custom-navigation-ui","title":"Custom navigation UI","text":"<pre><code>    navigationView.initViewConfig(true);\n</code></pre> <p>In the <code>onCreate</code> callback, add this code to hide all of the navigation UI, the sdk will show the map and navigation only. <pre><code>    &lt;androidx.appcompat.widget.LinearLayoutCompat\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        android:id=\"@+id/navigationAction\"\n        android:orientation=\"horizontal\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"&gt;\n        &lt;Button\n            android:id=\"@+id/overViewRouteButton\"\n            android:layout_width=\"wrap_content\"\n            app:layout_constraintStart_toEndOf=\"@+id/stopNavigation\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintTop_toBottomOf=\"@id/stopNavigation\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Over View\"\n            app:layout_anchorGravity=\"top|left\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintStart_toStartOf=\"parent\"\n            app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/recenterBtnCustom\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Recenter\"\n            android:visibility=\"gone\"\n            android:textColor=\"@color/black\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n        &lt;Button\n            android:id=\"@+id/stopNavigation\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:textColor=\"@color/black\"\n            app:layout_constraintTop_toBottomOf=\"@id/overViewRouteButton\"\n            android:visibility=\"gone\"\n            app:layout_constraintBottom_toBottomOf=\"parent\"\n            android:layout_gravity=\"top\"\n            android:layout_margin=\"16dp\"\n            android:text=\"Stop\"\n            app:layout_anchorGravity=\"top|left\"\n            app:layout_constraintStart_toStartOf=\"parent\" /&gt;\n    &lt;/androidx.appcompat.widget.LinearLayoutCompat&gt;\n</code></pre> Add this code to xml layout of VietmapNavigationActivity <pre><code>    private Button recenterButton;\n    private Button overViewRouteButton;\n    private Button stopNavigation;\n</code></pre> Define 3 buttons to show 3 action re-center to the navigation, overview all route, cancel navigation.</p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#handling-events-button","title":"Handling events button","text":"<p>Define NavigationPresenter in<code>onCreate</code> function <pre><code>    NavigationPresenter navigationPresenter = navigationView.getNavigationPresenter();\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#recenter-function","title":"recenter Function","text":"<pre><code>    recenterButton.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            navigationPresenter.onRecenterClick();\n            changeNavigationActionState(true);\n        }\n    });\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#routeoverview-function","title":"routeOverView Function","text":"<pre><code>    overViewRouteButton.setOnClickListener(view -&gt; {\n        navigationPresenter.onRouteOverviewClick();\n        changeNavigationActionState(false);\n    });\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#stopnavigation","title":"stopNavigation","text":"<pre><code>    stopNavigation.setOnClickListener(view -&gt; {\n        changeNavigationActionState(false);\n        expandCollapse();\n        stopNavigationFunction();\n    });\n</code></pre> <p>Add below code to <code>stopNavigationFunction</code>: <pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        vietmapNavigation.stopNavigation();\n        launchNavigationFab.show();\n        //Add below code\n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n    }\n</code></pre></p> <p>Listen when user move map, then show the recenter button <code>recenterButton</code>: <pre><code>    @Override\n    public void onMoveBegin(@NonNull MoveGestureDetector moveGestureDetector) {\n        changeNavigationActionState(false);\n    }\n</code></pre></p> <p>Create a function to show/hide 3 button above <code>changeNavigationActionState</code> <pre><code>    void changeNavigationActionState(boolean isNavigationRunning) {\n        if (!isNavigationRunning) {\n            overViewRouteButton.setVisibility(View.GONE);\n            recenterButton.setVisibility(View.VISIBLE);\n            stopNavigation.setVisibility(View.GONE);\n        } else {\n            overViewRouteButton.setVisibility(View.VISIBLE);\n            recenterButton.setVisibility(View.GONE);\n            stopNavigation.setVisibility(View.VISIBLE);\n        }\n    }\n</code></pre></p>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#initializeviews","title":"initializeViews","text":"<pre><code>private void initializeViews(@Nullable Bundle savedInstanceState) {\n        setContentView(R.layout.activity_viet_map_navigation);\n        customUINavigation = findViewById(R.id.vietmapNavigation);\n        mapView = findViewById(R.id.mapView);\n        navigationView = findViewById(R.id.navigationView);\n        loading = findViewById(R.id.loading);\n        launchNavigationFab = findViewById(R.id.launchNavigation);\n        navigationView.onCreate(savedInstanceState);\n        mapView.onCreate(savedInstanceState);\n        launchNavigationFab.setOnClickListener(v -&gt; {\n            expandCollapse();\n            launchNavigation();\n        });\n        mapView.getMapAsync(this);\n        /// Add the below code\n        overViewRouteButton = findViewById(R.id.overViewRouteButton);\n        stopNavigation = findViewById(R.id.stopNavigation);\n        recenterButton = findViewById(R.id.recenterBtnCustom);\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#launchnavigation","title":"launchNavigation","text":"<pre><code>    private void launchNavigation() {\n    ...\n        changeNavigationActionState(true);\n    ...\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#stopnavigation_1","title":"stopNavigation","text":"<pre><code>    void stopNavigationFunction(){\n        navigationView.stopNavigation();\n        vietmapNavigation.stopNavigation();\n        recenterButton.setVisibility(View.GONE);\n        overViewRouteButton.setVisibility(View.GONE);\n        stopNavigation.setVisibility(View.GONE);\n        launchNavigationFab.show();\n    }\n</code></pre>"},{"location":"sdk-mobile/sdk-android/sdk-android-ver2.0/#add-apikey-and-styleurl","title":"Add apikey and styleUrl","text":"<p>To ensure that the application does not crash when running, you need to add the full styleUrl and apikey that VietMap provides at the following locations:</p> <p>Add styleUrl in src/values/string.xml file</p> <p>Add styleUrl in onMapReady function</p> <p>Add apikey in fetchRoute function</p>"},{"location":"sdk-mobile/sdk-ios/map/","title":"SDK iOS","text":""},{"location":"sdk-mobile/sdk-ios/map/#installation-guide-for-vietmap-map-ios-sdk","title":"Installation Guide for VietMap Map iOS SDK","text":""},{"location":"sdk-mobile/sdk-ios/map/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Create Navigation project with Xcode</li> <li>Import Library</li> <li>Events</li> <li>Build Project</li> </ol>"},{"location":"sdk-mobile/sdk-ios/map/#install-ios-sdk-map","title":"Install iOS SDK Map","text":""},{"location":"sdk-mobile/sdk-ios/map/#1-create-navigation-project-with-xcode","title":"1. Create Navigation project with Xcode","text":"<p>Create a project with Swift and Storyboard. Open Xcode, select File &gt; New &gt; Project.</p> <p></p> <p>Ensure the project runs successfully. If successful, you will see the layout as shown below.</p> <p></p>"},{"location":"sdk-mobile/sdk-ios/map/#2-import-library","title":"2. Import Library","text":""},{"location":"sdk-mobile/sdk-ios/map/#environment-settings","title":"Environment Settings","text":"<p>Install Homebrew Check brew <pre><code>$ brew --version\n</code></pre> If Homebrew is not installed, you will see:</p> <pre><code>$ zsh: command not found: brew\n</code></pre> <p>If Homebrew is not installed, use the following command:</p> <pre><code>$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <p>Install pods <pre><code>$ brew install cocoapods\n</code></pre></p> <p>Import libraries with Podfile 1. Go to Terminal and switch to your local project: <pre><code>cd NavigationSample\n</code></pre> 2. Once you are inside the project folder, type the command below to create/initialize your POD files: <pre><code>pod init\n</code></pre> 3. Open the Podfile and write with code below:  <pre><code>pod 'VietMap', '~&gt; 1.2.2'\n</code></pre> 4. Then install library <pre><code>pod install --repo-update\n</code></pre> 5. Double click on the Xcode workspace to open the project</p>"},{"location":"sdk-mobile/sdk-ios/map/#3-events","title":"3. Events.","text":"<ul> <li><code>regionIsChangingWith</code>: Method called when the displayed region of the map view is changing.</li> <li><code>didChange</code>: Method called when the user tracking mode on the map view changes.</li> <li><code>mapViewDidFinishLoadingMap</code>: Method called when the map on the map view has finished loading and displaying.</li> <li><code>mapViewDidStopLocatingUser</code>: Method called when the MGLMapView stops locating the user's position.</li> <li><code>mapViewWillStartLoadingMap</code>: Method called when the MGLMapView begins loading map data.</li> <li><code>mapViewWillStartLocatingUser</code>: Method called when the MGLMapView starts locating the user's position.</li> <li><code>mapViewWillStartRenderingMap</code>: Method called when the MGLMapView starts rendering the map.</li> <li><code>mapViewWillStartRenderingFrame</code>: Method called when the MGLMapView starts rendering a frame of the map.</li> <li><code>didFinishLoading</code>: Method called when the MGLMapView finishes loading data and interface for the map.</li> <li><code>didSelect</code>: Method called when an annotation on the map is selected.</li> <li><code>didDeselect</code>: Method called when an annotation on the map is no longer selected.</li> <li><code>didSingleTapAt</code>: Method called when the user performs a single tap on the map.</li> <li><code>regionDidChangeAnimated</code>: Method called when the displayed region of the map changes, including when the user moves, zooms, or rotates the map.</li> <li><code>regionWillChangeAnimated</code>: Method called before the displayed region of the map is about to change.</li> <li><code>mapViewDidFailLoadingMap</code>: Method called when loading the map fails with a specific error.</li> <li><code>didUpdate: MGLUserLocation</code>: Method called when the user's location information is updated on the map.</li> <li><code>mapViewDidFinishRenderingMap</code>: Method called when the map rendering process is completed.</li> <li><code>mapViewDidBecomeIdle</code>: Method called when the map has finished its activities and becomes idle.</li> <li><code>didFailToLocateUserWithError</code>: Method called when locating the user on the map encounters an error.</li> <li><code>tapOnCalloutFor</code>: Method called when the user taps on the callout of an annotation on the map.</li> <li><code>mapViewDidFinishRenderingFrame</code>: Method called after a frame of the map has been finished rendering on the screen.</li> <li><code>shapeAnnotationIsEnabled</code>: This method allows you to control the activation of shape annotations on the map. Returns true or false to specify whether the shape annotation is enabled.</li> <li><code>didAdd: MGLAnnotationView</code>: Method called after new MGLAnnotationViews are added.</li> <li><code>didSelect: MGLAnnotationView</code>: Method called when an MGLAnnotationView on the map is selected.</li> <li><code>didDeselect: MGLAnnotationView</code>: Method called when an MGLAnnotationView on the map is no longer selected.</li> <li><code>alphaForShapeAnnotation</code>: This method allows you to specify the alpha value (opacity) for an MGLShape on the map. The alpha value is a number from 0.0 to 1.0, with 0.0 being completely transparent and 1.0 being opaque.</li> <li><code>viewFor: MGLAnnotation</code>: This method is used to provide a custom MGLAnnotationView for a specific MGLAnnotation on the map.</li> <li><code>imageFor: MGLAnnotation</code>: This method is used to provide a custom MGLAnnotationImage for a specific MGLAnnotation on the map.</li> <li><code>annotationCanShowCallout</code>: This method is used to determine whether an MGLAnnotation can show a callout. To determine whether a specific MGLAnnotation can show a callout, return true or false.</li> <li><code>calloutViewFor</code>: This method is used to create and customize the callout view interface for a specific MGLAnnotation.</li> <li><code>strokeColorForShapeAnnotation</code>: This method is used to provide the stroke color for a specific MGLShape (such as MGLPolyline or MGLPolygon) on the map.</li> <li><code>fillColorForPolygonAnnotation</code>: This method is used to provide the fill color for a specific MGLPolygon on the map.</li> <li><code>leftCalloutAccessoryViewFor</code>: This method is used to provide a UIView as the left supplementary element of the callout for a specific MGLAnnotation.</li> <li><code>lineWidthForPolylineAnnotation</code>: This method is used to provide the line width of the polyline for a specific MGLPolyline.</li> <li><code>rightCalloutAccessoryViewFor</code>: This method is used to provide a UIView as the right supplementary interface of the callout for a specific MGLAnnotation.</li> <li><code>calloutAccessoryControlTapped</code>: This method is called when the user taps on the supplementary interface elements (accessory control) in the callout for a specific MGLAnnotation.</li> <li><code>shouldChangeFrom</code>: This method is called when the camera state of the map is about to change, allowing you to check and decide whether the change should be made.</li> <li><code>mapViewUserLocationAnchorPoint</code>: This method allows you to determine the anchor point of the user location icon on the map.</li> <li><code>didFailToLoadImage</code>: This method is called when an image with the provided name cannot be loaded.</li> <li><code>shouldRemoveStyleImage</code>: This method is called when an image in the style is being used and there is a request to remove it.</li> <li><code>didChangeLocationManagerAuthorization</code>: This method is called when the user's location access permission changes in the app.</li> <li><code>styleForDefaultUserLocationAnnotationView</code>: This method is used to customize the interface of the default user location annotation on the map.</li> </ul>"},{"location":"sdk-mobile/sdk-ios/map/#4-build-project","title":"4. Build Project.","text":"<p>Requires device location access permission.</p> <pre><code>&lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;UIBackgroundModes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;audio&lt;/string&gt;\n    &lt;string&gt;location&lt;/string&gt;\n&lt;/array&gt;\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/map/#sample-code","title":"Sample Code","text":"<pre><code>import UIKit\nimport VietMap\n\nclass ViewController: UIViewController {\n    var mapView: MGLMapView!\n    var coordinates: [CLLocationCoordinate2D] = []\n    override func viewDidAppear(_ animated: Bool) {\n        super.viewDidAppear(animated)\n\n        if #available(iOS 10.0, *) {\n            UNUserNotificationCenter.current().requestAuthorization(options: [.badge, .alert, .sound]) { _,_ in\n                DispatchQueue.main.async {\n                    CLLocationManager().requestWhenInUseAuthorization()\n                }\n            }\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        startMapView()\n        drawPolygon()\n    }\n\n\n    func startMapView() {\n        mapView = MGLMapView(frame: view.bounds, styleURL: URL(string: \"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\"))\n        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        mapView.delegate = self\n        mapView.userTrackingMode = .follow\n\n        let singleTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\n        mapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(singleTap.require(toFail:))\n        mapView.addGestureRecognizer(singleTap)\n        view.addSubview(mapView)\n    }\n\n    func drawPolyline() {\n        let polyline = MGLPolyline(coordinates: coordinates, count: UInt(coordinates.count))\n        mapView.addAnnotation(polyline)\n    }\n\n    func drawPolygon() {\n        let coordinates = [\n            CLLocationCoordinate2D(latitude: 10.745863, longitude: 106.655122),\n            CLLocationCoordinate2D(latitude: 10.753557, longitude: 106.649735),\n            CLLocationCoordinate2D(latitude: 10.765662, longitude: 106.681285),\n            CLLocationCoordinate2D(latitude: 10.750961, longitude: 106.683948)\n        ]\n        let polygon = MGLPolygon(coordinates: coordinates, count: UInt(coordinates.count))\n        mapView.addAnnotation(polygon)\n    }\n\n    // MARK: Gesture Recognizer Handlers\n    @objc func didLongPress(tap: UILongPressGestureRecognizer) {\n        guard let mapView = mapView else { return }\n        if (coordinates.isEmpty) {\n            coordinates.append((mapView.userLocation?.location?.coordinate)!)\n        }\n        let point = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n        let annotation = MGLPointAnnotation()\n        annotation.coordinate = point\n        annotation.title = \"Point Here\"\n        coordinates.append(point)\n        mapView.addAnnotation(annotation)\n        drawPolyline()\n    }\n}\n\nextension ViewController: MGLMapViewDelegate {\n    func mapView(_ mapView: MGLMapView, imageFor annotation: MGLAnnotation) -&gt; MGLAnnotationImage? {\n        let image = UIImage(systemName: \"car\")!\n        image.withTintColor(UIColor.red)\n        let annotationImage = MGLAnnotationImage(image: image, reuseIdentifier: \"customAnnotation\")\n\n        return annotationImage\n    }\n\n    func mapView(_ mapView: MGLMapView, annotationCanShowCallout annotation: MGLAnnotation) -&gt; Bool {\n        return true\n    }\n\n    func mapView(_ mapView: MGLMapView, leftCalloutAccessoryViewFor annotation: MGLAnnotation) -&gt; UIView? {\n        let imageView = UIImageView(image: UIImage(named: \"leftAccessoryImage\"))\n        return imageView\n    }\n\n    func mapView(_ mapView: MGLMapView, rightCalloutAccessoryViewFor annotation: MGLAnnotation) -&gt; UIView? {\n        let button = UIButton(type: .detailDisclosure)\n        return button\n    }\n\n    func mapView(_ mapView: MGLMapView, fillColorForPolygonAnnotation annotation: MGLPolygon) -&gt; UIColor {\n        return UIColor.red.withAlphaComponent(0.5)\n    }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/navigation/","title":"SDK iOS Version 2.0","text":""},{"location":"sdk-mobile/sdk-ios/navigation/#environment-settings","title":"Environment settings","text":"<p>Install Homebrew Check brew <pre><code>$ brew --version\n</code></pre> If Homebrew is not installed, you will see:</p> <pre><code>$ zsh: command not found: brew\n</code></pre> <p>If Homebrew is not installed, use the following command:</p> <pre><code>$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <p>Install pods <pre><code>$ brew install cocoapods\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#create-navigation-project-with-xcode","title":"Create Navigation project with xcode","text":"<p>Create project with Swift and Storyboard Open xcode, select File &gt; New &gt; Project </p> <p>Make sure the project runs successfully. If successful, you will receive the layout as shown below. </p> <p>Import libraries with Podfile 1. Go to Terminal and switch to your local project: <pre><code>cd NavigationSample\n</code></pre> 2. Once you are inside the project folder, type the command below to create/initialize your POD files: <pre><code>pod init\n</code></pre> 3. Open the Podfile and write with code below:  <pre><code>pod 'VietMap', '~&gt; 1.2.2'\npod 'VietMapNavigation', '~&gt; 2.1.8'\npod 'VietMapCoreNavigation', '~&gt; 2.1.6'\n</code></pre> 4. Then install library <pre><code>pod install --repo-update\n</code></pre> 5. Double click on the Xcode workspace to open the project</p>"},{"location":"sdk-mobile/sdk-ios/navigation/#events","title":"Events","text":"<p>addGestureRecognizer: Register Gesture Recognizer for mapview</p> <p>Directions: Request api to search for directions</p> <p>NavigationViewController: Start navigation</p> <p>Subscribe to the route manager's event listener</p> <p>routeControllerProgressDidChange</p> <p>routeControllerDidReroute</p> <p>Register to listen to events of the NavigationMapViewDelegate map manager</p> <p>didSelect: WayPoint</p> <p>didSelect: Route</p> <p>Register to listen to the navigation manager's NavigationViewControllerDelegate event</p> <p>didArriveAt</p> <p>byCanceling</p>"},{"location":"sdk-mobile/sdk-ios/navigation/#build-project","title":"Build project","text":"<p>Add config to Info.plist</p> <p>Request permission to access device location.</p> <p><pre><code>    &lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;Your request location description&lt;/string&gt;\n    &lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n    &lt;string&gt;Your request location description&lt;/string&gt;\n    &lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;Your request location description&lt;/string&gt;\n    &lt;key&gt;UIBackgroundModes&lt;/key&gt;\n    &lt;array&gt;\n        &lt;string&gt;audio&lt;/string&gt;\n        &lt;string&gt;location&lt;/string&gt;\n    &lt;/array&gt;\n</code></pre> Add config URL Style, URL server and API_KEY.</p> <p><pre><code>    &lt;key&gt;VietMapURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE&lt;/string&gt;\n    &lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/navigations/route/&lt;/string&gt;\n    &lt;key&gt;VietMapAccessToken&lt;/key&gt;\n    &lt;string&gt;YOUR_API_KEY_HERE&lt;/string&gt;\n</code></pre> Create a layout in Main like the image below, in which: UIView: mapView &gt; show mapView UIButton: clearMarker &gt; delete destination marker UIButton: startButton &gt; start navigation Refer to UI or copy paste at NavigationSample/Main.storyboard</p> <p></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#initialize-mapview","title":"Initialize mapView","text":"<pre><code>var mapView: NavigationMapView? {\n    didSet {\n        oldValue?.removeFromSuperview()\n        if let mapView = mapView {\n            configureMapView(mapView)\n            view.insertSubview(mapView, belowSubview: longPressHintView)\n        }\n    }\n}\n\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    startMapView()\n}\n\nfunc startMapView() {\n    self.routes = nil\n    self.waypoints = []\n    self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n    // Reset the navigation styling to the defaults if we are returning from a presentation.\n    if (presentedViewController != nil) {\n        DayStyle().apply()\n    }\n    Locale.localeVoice = \"vi\"\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/navigation/#register-gesture-recognizer-for-mapview","title":"Register Gesture Recognizer for mapView","text":"<p>Create a didLongPress event to request a destination in the map. <pre><code>let longTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\nmapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(longTap.require(toFail:))\nmapView.addGestureRecognizer(longTap)\n</code></pre></p> <p>Get the coordinates and assign a marker to the destination in the didLongPress event. <pre><code>@objc func didLongPress(tap: UILongPressGestureRecognizer) {\n    guard let mapView = mapView, tap.state == .began else { return }\n\n    if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n        mapView.removeAnnotation(annotation)\n    }\n\n    if waypoints.count &gt; 1 {\n        waypoints = Array(waypoints.suffix(1))\n    }\n\n    let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n    // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n    let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n    waypoints.append(waypoint)\n\n    requestRoute()\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#request-api-to-search-for-directions","title":"Request API to search for directions","text":"<p>Request to search for a route with the starting point being the current location, the destination being the location after longPress.</p> <pre><code>func requestRoute() {\n    guard waypoints.count &gt; 0 else { return }\n    guard let mapView = mapView else { return }\n\n    let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n    waypoints.insert(userWaypoint, at: 0)\n\n    let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n    requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n}\n\nfileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n    let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n        if let error = potentialError, let fail = failure { return fail(error) }\n        guard let routes = potentialRoutes else { return }\n        return success(routes)\n    }\n\n    Directions.shared.calculate(options, completionHandler: handler)\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/navigation/#start-navigating","title":"Start navigating","text":"<p>Start navigation, hide the current mapView and replace it with a navigationView. <pre><code>func startStyledNavigation() {\n    guard let route = self.routes?.first else { return }\n    navigationViewController = NavigationViewController(\n        for: route,\n        styles: [NightStyle()],\n        locationManager: NavigationLocationManager()\n    )\n    navigationViewController.delegate = self\n    customStyleMap()\n    configureMapView()\n    addListenerMap()\n    present(navigationViewController, animated: true) {\n        self.mapView?.removeFromSuperview()\n        self.mapView = nil\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#register-to-listen-to-the-progressdidchange-event-and-the-reroute-event","title":"Register to listen to the ProgressDidChange event and the ReRoute event","text":"<pre><code>private func addListenerMap() {\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n}\n</code></pre> <p><code>progressDidChange</code> returns route and location data during movement, used for camera changes and better navigation. The example below saves the current position and adds a direction arrow for the next turn. <pre><code>@objc func progressDidChange(_ notification: NSNotification  ) {\n    let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n    let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n    currentLocation = location\n    setCenterIsFirst(location)\n    addManeuverArrow(routeProgress)\n}\n</code></pre></p> <p><code>progressDidReroute</code> returns new route data when the user's location is different from the original route. <pre><code>@objc func progressDidReroute(_ notification: Notification) {\n  if let userInfo = notification.object as? RouteController {\n      navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n      centerMap(userInfo.locationManager.location!)\n  }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#subscribe-to-didselect-waypoint-and-route-events","title":"Subscribe to didSelect waypoint and route events","text":"<pre><code>extension ViewController: NavigationMapViewDelegate {\n  func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n      guard let routeOptions = routes?.first?.routeOptions else { return }\n      let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n      presentWaypointRemovalActionSheet { _ in\n          self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n      }\n  }\n\n  func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n      guard let routes = routes else { return }\n      guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n      self.routes!.remove(at: index)\n      self.routes!.insert(route, at: 0)\n  }\n\n  private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n      let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n      let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n      let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n      let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n      let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n      let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n      let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n      [remove, cancel].forEach(actionSheet.addAction(_:))\n\n      self.present(actionSheet, animated: true, completion: nil)\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/navigation/#subscribe-to-the-didarriveat-event-and-the-bycanceling-event","title":"Subscribe to the didArriveAt event and the byCanceling event","text":"<p><code>didArriveAt</code> event is emitted when the user reaches the destination, byCanceling is the event emitted when the user cancels navigation. <pre><code>extension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/navigation/#samplecode","title":"SampleCode","text":"<pre><code>import UIKit\nimport VietMapCoreNavigation\nimport VietMapNavigation\nimport VietMapDirections\nimport UserNotifications\n\nprivate typealias RouteRequestSuccess = (([Route]) -&gt; Void)\nprivate typealias RouteRequestFailure = ((NSError) -&gt; Void)\n\nclass ViewController: UIViewController, MGLMapViewDelegate {\n\n    // MARK: - IBOutlets\n    @IBOutlet weak var longPressHintView: UIView!\n    @IBOutlet weak var startButton: UIButton!\n    @IBOutlet weak var bottomBar: UIView!\n    @IBOutlet weak var bottomBarBackground: UIView!\n    @IBOutlet weak var clearMarker: UIButton!\n\n    var navigationViewController: NavigationViewController!\n    var mapboxRouteController: RouteController?\n    var currentLocation: CLLocation!\n    var isFirstRender: Bool = false\n    var styleView = Bundle.main.object(forInfoDictionaryKey: \"VietMapURL\") as! String\n\n    // MARK: Properties\n    var mapView: NavigationMapView? {\n        didSet {\n            oldValue?.removeFromSuperview()\n            if let mapView = mapView {\n                configureMapView(mapView)\n                view.insertSubview(mapView, belowSubview: longPressHintView)\n            }\n        }\n    }\n\n    var waypoints: [Waypoint] = [] {\n        didSet {\n            waypoints.forEach {\n                $0.coordinateAccuracy = -1\n            }\n        }\n    }\n\n    var routes: [Route]? {\n        didSet {\n            startButton.isEnabled = (routes?.count ?? 0 &gt; 0)\n            guard let routes = routes,\n                  let current = routes.first else { mapView?.removeRoutes(); return }\n\n            mapView?.showRoutes(routes)\n            mapView?.showWaypoints(current)\n        }\n    }\n\n    // MARK: Directions Request Handlers\n\n    fileprivate lazy var defaultSuccess: RouteRequestSuccess = { [weak self] (routes) in\n        guard let current = routes.first else { return }\n        self?.clearMarker.isEnabled = true\n        self?.mapView?.removeWaypoints()\n        self?.routes = routes\n        self?.waypoints = current.routeOptions.waypoints\n        self?.longPressHintView.isHidden = true\n    }\n\n    fileprivate lazy var defaultFailure: RouteRequestFailure = { [weak self] (error) in\n        self?.routes = nil //clear routes from the map\n        print(error.localizedDescription)\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        startMapView()\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if #available(iOS 10.0, *) {\n            UNUserNotificationCenter.current().requestAuthorization(options: [.badge, .alert, .sound]) { _,_ in\n                DispatchQueue.main.async {\n                    CLLocationManager().requestWhenInUseAuthorization()\n                }\n            }\n        }\n    }\n\n    func startMapView() {\n        self.routes = nil\n        self.waypoints = []\n        self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n        // Reset the navigation styling to the defaults if we are returning from a presentation.\n        if (presentedViewController != nil) {\n            DayStyle().apply()\n        }\n        Locale.localeVoice = \"vi\"\n    }\n\n    func configureMapView(_ mapView: NavigationMapView) {\n        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        mapView.delegate = self\n        mapView.navigationMapDelegate = self\n        mapView.routeLineColor = UIColor.yellow\n        mapView.userTrackingMode = .follow\n        mapView.showsUserHeadingIndicator = true\n\n        let singleTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\n        mapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(singleTap.require(toFail:))\n        mapView.addGestureRecognizer(singleTap)\n    }\n\n    // MARK: Gesture Recognizer Handlers\n    @objc func didLongPress(tap: UILongPressGestureRecognizer) {\n        guard let mapView = mapView, tap.state == .began else { return }\n\n        if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n            mapView.removeAnnotation(annotation)\n        }\n\n        if waypoints.count &gt; 1 {\n            waypoints = Array(waypoints.suffix(1))\n        }\n\n        let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n        // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n        let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n        waypoints.append(waypoint)\n\n        requestRoute()\n    }\n\n    @IBAction func startButtonPressed(_ sender: Any) {\n        startStyledNavigation()\n    }\n\n    @IBAction func clearMarker(_ sender: Any) {\n        self.clearMarker.isEnabled = false\n        self.startButton.isEnabled = false\n        mapView?.removeRoutes()\n        mapView?.removeWaypoints()\n        waypoints.removeAll()\n        longPressHintView.isHidden = false\n    }\n    // MARK: - Public Methods\n    // MARK: Route Requests\n    func requestRoute() {\n        guard waypoints.count &gt; 0 else { return }\n        guard let mapView = mapView else { return }\n\n        let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n        waypoints.insert(userWaypoint, at: 0)\n\n        let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n        requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n    }\n\n    fileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n        let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n            if let error = potentialError, let fail = failure { return fail(error) }\n            guard let routes = potentialRoutes else { return }\n            return success(routes)\n        }\n\n        Directions.shared.calculate(options, completionHandler: handler)\n    }\n\n    func startStyledNavigation() {\n        guard let route = self.routes?.first else { return }\n        navigationViewController = NavigationViewController(\n            for: route,\n            styles: [NightStyle()],\n            locationManager: NavigationLocationManager()\n        )\n        navigationViewController.delegate = self\n        customStyleMap()\n        configureMapView()\n        addListenerMap()\n        present(navigationViewController, animated: true) {\n            self.mapView?.removeFromSuperview()\n            self.mapView = nil\n        }\n    }\n\n    private func customStyleMap() {\n        navigationViewController.mapView?.styleURL = URL(string: styleView);\n        navigationViewController.mapView?.routeLineColor = UIColor.yellow\n        navigationViewController.mapView?.userTrackingMode = .follow\n        navigationViewController.mapView?.showsUserHeadingIndicator = true\n    }\n\n    private func configureMapView() {\n        navigationViewController.mapView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        navigationViewController.routeController.reroutesProactively = true\n    }\n\n    @objc func progressDidReroute(_ notification: Notification) {\n        if let userInfo = notification.object as? RouteController {\n            navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n        }\n   }\n\n    @objc func progressDidChange(_ notification: NSNotification  ) {\n        let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n        let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n        currentLocation = location\n        setCenterIsFirst(location)\n        addManeuverArrow(routeProgress)\n    }\n\n    private func setCenterIsFirst(_ location: CLLocation) {\n        if !isFirstRender {\n            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {\n                let camera = MGLMapCamera(\n                    lookingAtCenter: location.coordinate,\n                    acrossDistance: 500,\n                    pitch: 75,\n                    heading: location.course\n                )\n                self.navigationViewController.mapView?.setCamera(camera, animated: true)\n            }\n            isFirstRender = true\n        }\n    }\n\n\n    private func addManeuverArrow(_ routeProgress: RouteProgress) {\n        if routeProgress.currentLegProgress.followOnStep != nil {\n            navigationViewController.mapView?.addArrow(route: routeProgress.route, legIndex: routeProgress.legIndex, stepIndex: routeProgress.currentLegProgress.stepIndex + 1)\n        } else {\n            navigationViewController.mapView?.removeArrow()\n        }\n    }\n\n    private func addListenerMap() {\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n    }\n\n    public func cancelListener() {\n        NotificationCenter.default.removeObserver(self, name: .routeControllerDidReroute, object: nil)\n        NotificationCenter.default.removeObserver(self, name: .routeControllerProgressDidChange, object: nil)\n    }\n}\n\n// MARK: - NavigationMapViewDelegate\nextension ViewController: NavigationMapViewDelegate {\n    func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n        guard let routeOptions = routes?.first?.routeOptions else { return }\n        let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n        presentWaypointRemovalActionSheet { _ in\n            self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n        }\n    }\n\n    func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n        guard let routes = routes else { return }\n        guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n        self.routes!.remove(at: index)\n        self.routes!.insert(route, at: 0)\n    }\n\n    private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n        let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n        let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n        let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n        let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n        let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n        let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n        let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n        [remove, cancel].forEach(actionSheet.addAction(_:))\n\n        self.present(actionSheet, animated: true, completion: nil)\n    }\n}\n\n// MARK: - NavigationViewControllerDelegate\nextension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/","title":"SDK iOS","text":""},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#setup-environment","title":"Setup environment","text":"<p>Install <code>Hombrew</code> First, check if <code>brew</code> is available If <code>Homebrew</code> is not installed, you will see  <pre><code>$ zsh: command not found: brew\n</code></pre> For <code>Homebrew</code> installation <pre><code>$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> Install <code>Carthage</code> <pre><code>$ brew install carthage\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#create-a-navigation-project-with-xcode","title":"Create a Navigation project with Xcode","text":"<p>Create a new project using Swift and Storyboard File &gt; New &gt; Project</p> <p></p> <p>If run successfully </p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#import-libraries","title":"Import libraries","text":"<p>Create Cartfile  <pre><code>$ cd ~/path/to/NavigationSample\n$ touch Cartfile\n</code></pre> In order to ensure that Cartfile has the necessary permissions to build the library, use the following command <pre><code>$ chmod +x Cartfile\n</code></pre> Then <pre><code>$ carthage bootstrap --platform iOS --use-xcframeworks\n</code></pre> Finally, new file will be created <pre><code>Cartfile.resolve: The specified framework will be fetched/built.\nCarthage: Contain all the built frameworks.\n</code></pre> </p> <p>Pay attention </p> <p>Add Package Dependencies and these libraries: <code>https://github.com/vietmap-company/maps-sdk-ios.git</code></p> <p></p> <p>Select Dependency Rule &gt; Branch &gt; Main in order to use latest libraries </p> <p>Finally,   </p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#events","title":"Events","text":"<p>addGestureRecognizer: Register Gesture Recognizer for map view</p> <p>Directions: Request API to find directions</p> <p>NavigationViewController: Start navigation</p> <p>Register listening to events of route manager</p> <p>routeControllerProgressDidChange</p> <p>routeControllerDidReroute</p> <p>Register listening to events of map manager NavigationMapViewDelegate</p> <p>didSelect: WayPoint</p> <p>didSelect: Route</p> <p>Register listening to events of navigation manager <code>NavigationViewControllerDelegate</code></p> <p>didArriveAt</p> <p>byCanceling: Canceling</p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#create-project","title":"Create project","text":"<p>Info.plist configuration Request for device location <pre><code>&lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;UIBackgroundModes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;audio&lt;/string&gt;\n    &lt;string&gt;location&lt;/string&gt;\n&lt;/array&gt;\n</code></pre></p> <p>Add config Style URL, server URL, and API_KEY</p> <p><pre><code>&lt;key&gt;VietMapURL&lt;/key&gt;\n&lt;string&gt;YOUR_STYLE_HERE&lt;/string&gt;\n&lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n&lt;string&gt;YOUR_SERVER_URL&lt;/string&gt;\n&lt;key&gt;VietMapAccessToken&lt;/key&gt;\n&lt;string&gt;YOUR_API_KEY&lt;/string&gt;\n</code></pre> Create a layout with:</p> <p>UIView: mapView &gt; display mapView</p> <p>UIButton: clearMarker &gt; delete destination marker </p> <p>UIButton: startButton &gt; start navigation</p> <p></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#create-mapview","title":"Create mapview","text":"<pre><code>var mapView: NavigationMapView? {\n    didSet {\n        oldValue?.removeFromSuperview()\n        if let mapView = mapView {\n            configureMapView(mapView)\n            view.insertSubview(mapView, belowSubview: longPressHintView)\n        }\n    }\n}\n\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    startMapView()\n}\n\nfunc startMapView() {\n    self.routes = nil\n    self.waypoints = []\n    self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n    // Reset the navigation styling to the defaults if we are returning from a presentation.\n    if (presentedViewController != nil) {\n        DayStyle().apply()\n    }\n    Locale.localeVoice = \"vi\"\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#register-gesture-recognizer-for-mapview","title":"Register Gesture Recognizer for mapView.","text":"<p>Create a <code>didLongPress</code> event to request finding a destination on the map <pre><code>let longTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\nmapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(longTap.require(toFail:))\nmapView.addGestureRecognizer(longTap)\n</code></pre> Retrieve coordinates and set a marker for the destination in the <code>didLongPress</code> event</p> <pre><code>@objc func didLongPress(tap: UILongPressGestureRecognizer) {\n    guard let mapView = mapView, tap.state == .began else { return }\n\n    if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n        mapView.removeAnnotation(annotation)\n    }\n\n    if waypoints.count &gt; 1 {\n        waypoints = Array(waypoints.suffix(1))\n    }\n\n    let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n    // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n    let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n    waypoints.append(waypoint)\n\n    requestRoute()\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#request-an-api-to-search-for-directions","title":"Request an API to search for directions","text":"<p>Request to search for directions with the starting point as the current location and the destination as the location after longPress. <pre><code>func requestRoute() {\n    guard waypoints.count &gt; 0 else { return }\n    guard let mapView = mapView else { return }\n\n    let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n    waypoints.insert(userWaypoint, at: 0)\n\n    let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n    requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n}\n\nfileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n    let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n        if let error = potentialError, let fail = failure { return fail(error) }\n        guard let routes = potentialRoutes else { return }\n        return success(routes)\n    }\n\n    Directions.shared.calculate(options, completionHandler: handler)\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#start-navigation","title":"Start navigation","text":"<p>Start navigation, hide the current mapView, and replace it with a <code>navigationView</code>.</p> <pre><code>func startStyledNavigation() {\n    guard let route = self.routes?.first else { return }\n    navigationViewController = NavigationViewController(\n        for: route,\n        styles: [NightStyle()],\n        locationManager: NavigationLocationManager()\n    )\n    navigationViewController.delegate = self\n    customStyleMap()\n    configureMapView()\n    addListenerMap()\n    present(navigationViewController, animated: true) {\n        self.mapView?.removeFromSuperview()\n        self.mapView = nil\n    }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#register-the-progressdidchange-and-reroute-events","title":"Register the ProgressDidChange and ReRoute events.","text":"<p><pre><code>private func addListenerMap() {\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n}\n</code></pre> <code>progressDidChange</code> event returns route and location data during movement, which can be used to improve camera and navigation. The example below shows how to store the current location and add a directional arrow for the next turn: <pre><code>@objc func progressDidChange(_ notification: NSNotification  ) {\n    let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n    let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n    currentLocation = location\n    setCenterIsFirst(location)\n    addManeuverArrow(routeProgress)\n}\n</code></pre></p> <p><code>progressDidReroute</code> event returns new route data when the user's location deviates from the original route. Here's an example of how to handle this event: <pre><code>@objc func progressDidReroute(_ notification: Notification) {\n  if let userInfo = notification.object as? RouteController {\n      navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n      centerMap(userInfo.locationManager.location!)\n  }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#register-for-the-didselectwaypoint-and-didselectroute-events","title":"Register for the didSelectWaypoint and didSelectRoute events","text":"<pre><code>extension ViewController: NavigationMapViewDelegate {\n  func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n      guard let routeOptions = routes?.first?.routeOptions else { return }\n      let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n      presentWaypointRemovalActionSheet { _ in\n          self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n      }\n  }\n\n  func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n      guard let routes = routes else { return }\n      guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n      self.routes!.remove(at: index)\n      self.routes!.insert(route, at: 0)\n  }\n\n  private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n      let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n      let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n      let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n      let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n      let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n      let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n      let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n      [remove, cancel].forEach(actionSheet.addAction(_:))\n\n      self.present(actionSheet, animated: true, completion: nil)\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver1.1/#register-for-didarriveat-and-bycanceling-events","title":"Register for didArriveAt and byCanceling events","text":"<p><code>didArriveAt</code> event is emitted when the user reaches the destination during navigation. On the other hand, <code>byCanceling</code> event is emitted when the user cancels the navigation <pre><code>extension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre> Here is the sample code: <pre><code>import UIKit\nimport MapboxCoreNavigation\nimport MapboxNavigation\nimport MapboxDirections\nimport UserNotifications\n\nprivate typealias RouteRequestSuccess = (([Route]) -&gt; Void)\nprivate typealias RouteRequestFailure = ((NSError) -&gt; Void)\n\nclass ViewController: UIViewController, MGLMapViewDelegate {\n\n    // MARK: - IBOutlets\n    @IBOutlet weak var longPressHintView: UIView!\n    @IBOutlet weak var startButton: UIButton!\n    @IBOutlet weak var bottomBar: UIView!\n    @IBOutlet weak var bottomBarBackground: UIView!\n    @IBOutlet weak var clearMarker: UIButton!\n\n    var navigationViewController: NavigationViewController!\n    var mapboxRouteController: RouteController?\n    var currentLocation: CLLocation!\n    var isFirstRender: Bool = false\n    var styleView = Bundle.main.object(forInfoDictionaryKey: \"VietMapURL\") as! String\n\n    // MARK: Properties\n    var mapView: NavigationMapView? {\n        didSet {\n            oldValue?.removeFromSuperview()\n            if let mapView = mapView {\n                configureMapView(mapView)\n                view.insertSubview(mapView, belowSubview: longPressHintView)\n            }\n        }\n    }\n\n    var waypoints: [Waypoint] = [] {\n        didSet {\n            waypoints.forEach {\n                $0.coordinateAccuracy = -1\n            }\n        }\n    }\n\n    var routes: [Route]? {\n        didSet {\n            startButton.isEnabled = (routes?.count ?? 0 &gt; 0)\n            guard let routes = routes,\n                  let current = routes.first else { mapView?.removeRoutes(); return }\n\n            mapView?.showRoutes(routes)\n            mapView?.showWaypoints(current)\n        }\n    }\n\n    // MARK: Directions Request Handlers\n\n    fileprivate lazy var defaultSuccess: RouteRequestSuccess = { [weak self] (routes) in\n        guard let current = routes.first else { return }\n        self?.clearMarker.isEnabled = true\n        self?.mapView?.removeWaypoints()\n        self?.routes = routes\n        self?.waypoints = current.routeOptions.waypoints\n        self?.longPressHintView.isHidden = true\n    }\n\n    fileprivate lazy var defaultFailure: RouteRequestFailure = { [weak self] (error) in\n        self?.routes = nil //clear routes from the map\n        print(error.localizedDescription)\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        startMapView()\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if #available(iOS 10.0, *) {\n            UNUserNotificationCenter.current().requestAuthorization(options: [.badge, .alert, .sound]) { _,_ in\n                DispatchQueue.main.async {\n                    CLLocationManager().requestWhenInUseAuthorization()\n                }\n            }\n        }\n    }\n\n    func startMapView() {\n        self.routes = nil\n        self.waypoints = []\n        self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n        // Reset the navigation styling to the defaults if we are returning from a presentation.\n        if (presentedViewController != nil) {\n            DayStyle().apply()\n        }\n        Locale.localeVoice = \"vi\"\n    }\n\n    func configureMapView(_ mapView: NavigationMapView) {\n        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        mapView.delegate = self\n        mapView.navigationMapDelegate = self\n        mapView.routeLineColor = UIColor.yellow\n        mapView.userTrackingMode = .follow\n        mapView.showsUserHeadingIndicator = true\n\n        let singleTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\n        mapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(singleTap.require(toFail:))\n        mapView.addGestureRecognizer(singleTap)\n    }\n\n    // MARK: Gesture Recognizer Handlers\n    @objc func didLongPress(tap: UILongPressGestureRecognizer) {\n        guard let mapView = mapView, tap.state == .began else { return }\n\n        if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n            mapView.removeAnnotation(annotation)\n        }\n\n        if waypoints.count &gt; 1 {\n            waypoints = Array(waypoints.suffix(1))\n        }\n\n        let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n        // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n        let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n        waypoints.append(waypoint)\n\n        requestRoute()\n    }\n\n    @IBAction func startButtonPressed(_ sender: Any) {\n        startStyledNavigation()\n    }\n\n    @IBAction func clearMarker(_ sender: Any) {\n        self.clearMarker.isEnabled = false\n        self.startButton.isEnabled = false\n        mapView?.removeRoutes()\n        mapView?.removeWaypoints()\n        waypoints.removeAll()\n        longPressHintView.isHidden = false\n    }\n    // MARK: - Public Methods\n    // MARK: Route Requests\n    func requestRoute() {\n        guard waypoints.count &gt; 0 else { return }\n        guard let mapView = mapView else { return }\n\n        let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n        waypoints.insert(userWaypoint, at: 0)\n\n        let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n        requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n    }\n\n    fileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n        let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n            if let error = potentialError, let fail = failure { return fail(error) }\n            guard let routes = potentialRoutes else { return }\n            return success(routes)\n        }\n\n        Directions.shared.calculate(options, completionHandler: handler)\n    }\n\n    func startStyledNavigation() {\n        guard let route = self.routes?.first else { return }\n        navigationViewController = NavigationViewController(\n            for: route,\n            styles: [NightStyle()],\n            locationManager: NavigationLocationManager()\n        )\n        navigationViewController.delegate = self\n        customStyleMap()\n        configureMapView()\n        addListenerMap()\n        present(navigationViewController, animated: true) {\n            self.mapView?.removeFromSuperview()\n            self.mapView = nil\n        }\n    }\n\n    private func customStyleMap() {\n        navigationViewController.mapView?.styleURL = URL(string: styleView);\n        navigationViewController.mapView?.routeLineColor = UIColor.yellow\n        navigationViewController.mapView?.userTrackingMode = .follow\n        navigationViewController.mapView?.showsUserHeadingIndicator = true\n    }\n\n    private func configureMapView() {\n        navigationViewController.mapView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        navigationViewController.routeController.reroutesProactively = true\n    }\n\n    @objc func progressDidReroute(_ notification: Notification) {\n        if let userInfo = notification.object as? RouteController {\n            navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n        }\n   }\n\n    @objc func progressDidChange(_ notification: NSNotification  ) {\n        let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n        let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n        currentLocation = location\n        setCenterIsFirst(location)\n        addManeuverArrow(routeProgress)\n    }\n\n    private func setCenterIsFirst(_ location: CLLocation) {\n        if !isFirstRender {\n            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {\n                let camera = MGLMapCamera(\n                    lookingAtCenter: location.coordinate,\n                    acrossDistance: 500,\n                    pitch: 75,\n                    heading: location.course\n                )\n                self.navigationViewController.mapView?.setCamera(camera, animated: true)\n            }\n            isFirstRender = true\n        }\n    }\n\n\n    private func addManeuverArrow(_ routeProgress: RouteProgress) {\n        if routeProgress.currentLegProgress.followOnStep != nil {\n            navigationViewController.mapView?.addArrow(route: routeProgress.route, legIndex: routeProgress.legIndex, stepIndex: routeProgress.currentLegProgress.stepIndex + 1)\n        } else {\n            navigationViewController.mapView?.removeArrow()\n        }\n    }\n\n    private func addListenerMap() {\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n    }\n\n    public func cancelListener() {\n        NotificationCenter.default.removeObserver(self, name: .routeControllerDidReroute, object: nil)\n        NotificationCenter.default.removeObserver(self, name: .routeControllerProgressDidChange, object: nil)\n    }\n}\n\n// MARK: - NavigationMapViewDelegate\nextension ViewController: NavigationMapViewDelegate {\n    func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n        guard let routeOptions = routes?.first?.routeOptions else { return }\n        let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n        presentWaypointRemovalActionSheet { _ in\n            self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n        }\n    }\n\n    func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n        guard let routes = routes else { return }\n        guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n        self.routes!.remove(at: index)\n        self.routes!.insert(route, at: 0)\n    }\n\n    private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n        let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n        let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n        let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n        let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n        let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n        let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n        let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n        [remove, cancel].forEach(actionSheet.addAction(_:))\n\n        self.present(actionSheet, animated: true, completion: nil)\n    }\n}\n\n// MARK: - NavigationViewControllerDelegate\nextension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/","title":"SDK iOS Version 2.0","text":""},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#environment-settings","title":"Environment settings","text":"<p>Install Homebrew Check brew <pre><code>$ brew --version\n</code></pre> If Homebrew is not installed, you will see:</p> <pre><code>$ zsh: command not found: brew\n</code></pre> <p>If Homebrew is not installed, use the following command:</p> <p><pre><code>$ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> Install Carthage</p> <pre><code>$ brew install carthage\n</code></pre> <p>Install pods <pre><code>$ brew install cocoapods\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#create-navigation-project-with-xcode","title":"Create Navigation project with xcode","text":"<p>Create project with Swift and Storyboard Open xcode, select File &gt; New &gt; Project </p> <p>Make sure the project runs successfully. If successful, you will receive the layout as shown below. </p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#import-library","title":"Import library","text":"<p>Create Cartfile by opening terminal and running the following command:</p> <pre><code>$ cd ~/path/to/NavigationSample\n$ touch Cartfile\n</code></pre> <p>The Cartfile file will be created in the path/to/NavigationSample directory </p> <p>To ensure Cartfile has full permissions to build the library, use the following command: <pre><code>$ chmod +x Cartfile\n</code></pre></p> <p>Open the Cartfile file, add the following 2 lines and save:</p> <p><pre><code>github \"mapbox/turf-swift\" ~&gt; 0.2\ngithub \"ceeK/Solar\" ~&gt; 2.1.0\ngithub \"vietmap-company/maps-sdk-speech-ios\" ~&gt; 1.0.0\ngithub \"vietmap-company/maps-sdk-geocoder-ios\" ~&gt; 1.0.0\ngithub \"vietmap-company/maps-sdk-directions-ios\" ~&gt; 1.0.0\n</code></pre> Then run the following command:</p> <p><pre><code>$ carthage bootstrap --platform iOS --use-xcframeworks\n</code></pre> Note: If building carthage has the error \"file libarclite_iphoneos.a not found\". Please refer to how to fix it here</p> <p>https://stackoverflow.com/questions/75574268/missing-file-libarclite-iphoneos-a-xcode-14-3</p> <p>New file will be created:</p> <ul> <li>Cartfile.resolve: Specifies which framework will be fetched/built</li> <li>Carthage folder: contains all built frameworks</li> </ul> <p>Create the Frameworks folder in NavigationSample Select NavigationSample &gt; Right-click &gt; New group Drag and drop all xcframework folders in the Carthage/Build folder just created above into the Frameworks folder in xcode as shown below:  Note: Make sure to convert Embed to [Embed &amp; sign] </p> <p>Create a Podfile by opening a terminal and running the following command:</p> <p><pre><code>$ cd ~/path/to/NavigationSample\n$ pod init\n</code></pre> Open Podfile and add the following libraries:</p> <p><pre><code>pod 'VietMap', '1.0.14'\npod 'VietMapNavigation', '1.0.0'\npod 'VietMapCoreNavigation', '1.0.0'\n</code></pre> Then run the command: <pre><code>pod install\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#events","title":"Events","text":"<p>addGestureRecognizer: Register Gesture Recognizer for mapview</p> <p>Directions: Request api to search for directions</p> <p>NavigationViewController: Start navigation</p> <p>Subscribe to the route manager's event listener</p> <p>routeControllerProgressDidChange</p> <p>routeControllerDidReroute</p> <p>Register to listen to events of the NavigationMapViewDelegate map manager</p> <p>didSelect: WayPoint</p> <p>didSelect: Route</p> <p>Register to listen to the navigation manager's NavigationViewControllerDelegate event</p> <p>didArriveAt</p> <p>byCanceling</p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#build-project","title":"Build project","text":"<p>Add config to Info.plist</p> <p>Request permission to access device location.</p> <p><pre><code>&lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n&lt;string&gt;Get user location&lt;/string&gt;\n&lt;key&gt;UIBackgroundModes&lt;/key&gt;\n&lt;array&gt;\n    &lt;string&gt;audio&lt;/string&gt;\n    &lt;string&gt;location&lt;/string&gt;\n&lt;/array&gt;\n</code></pre> Add config URL Style, URL server and API_KEY.</p> <p><pre><code>&lt;key&gt;VietMapURL&lt;/key&gt;\n&lt;string&gt;YOUR_STYLE_HERE&lt;/string&gt;\n&lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n&lt;string&gt;YOUR_SERVER_URL&lt;/string&gt;\n&lt;key&gt;VietMapAccessToken&lt;/key&gt;\n&lt;string&gt;YOUR_API_KEY&lt;/string&gt;\n</code></pre> Create a layout in Main like the image below, in which: UIView: mapView &gt; show mapView UIButton: clearMarker &gt; delete destination marker UIButton: startButton &gt; start navigation Refer to UI or copy paste at NavigationSample/Main.storyboard</p> <p></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#initialize-mapview","title":"Initialize mapView","text":"<pre><code>var mapView: NavigationMapView? {\n    didSet {\n        oldValue?.removeFromSuperview()\n        if let mapView = mapView {\n            configureMapView(mapView)\n            view.insertSubview(mapView, belowSubview: longPressHintView)\n        }\n    }\n}\n\noverride func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(animated)\n    startMapView()\n}\n\nfunc startMapView() {\n    self.routes = nil\n    self.waypoints = []\n    self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n    // Reset the navigation styling to the defaults if we are returning from a presentation.\n    if (presentedViewController != nil) {\n        DayStyle().apply()\n    }\n    Locale.localeVoice = \"vi\"\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#register-gesture-recognizer-for-mapview","title":"Register Gesture Recognizer for mapView","text":"<p>Create a didLongPress event to request a destination in the map. <pre><code>let longTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\nmapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(longTap.require(toFail:))\nmapView.addGestureRecognizer(longTap)\n</code></pre></p> <p>Get the coordinates and assign a marker to the destination in the didLongPress event. <pre><code>@objc func didLongPress(tap: UILongPressGestureRecognizer) {\n    guard let mapView = mapView, tap.state == .began else { return }\n\n    if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n        mapView.removeAnnotation(annotation)\n    }\n\n    if waypoints.count &gt; 1 {\n        waypoints = Array(waypoints.suffix(1))\n    }\n\n    let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n    // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n    let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n    waypoints.append(waypoint)\n\n    requestRoute()\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#request-api-to-search-for-directions","title":"Request API to search for directions","text":"<p>Request to search for a route with the starting point being the current location, the destination being the location after longPress.</p> <pre><code>func requestRoute() {\n    guard waypoints.count &gt; 0 else { return }\n    guard let mapView = mapView else { return }\n\n    let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n    waypoints.insert(userWaypoint, at: 0)\n\n    let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n    requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n}\n\nfileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n    let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n        if let error = potentialError, let fail = failure { return fail(error) }\n        guard let routes = potentialRoutes else { return }\n        return success(routes)\n    }\n\n    Directions.shared.calculate(options, completionHandler: handler)\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#start-navigating","title":"Start navigating","text":"<p>Start navigation, hide the current mapView and replace it with a navigationView. <pre><code>func startStyledNavigation() {\n    guard let route = self.routes?.first else { return }\n    navigationViewController = NavigationViewController(\n        for: route,\n        styles: [NightStyle()],\n        locationManager: NavigationLocationManager()\n    )\n    navigationViewController.delegate = self\n    customStyleMap()\n    configureMapView()\n    addListenerMap()\n    present(navigationViewController, animated: true) {\n        self.mapView?.removeFromSuperview()\n        self.mapView = nil\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#register-to-listen-to-the-progressdidchange-event-and-the-reroute-event","title":"Register to listen to the ProgressDidChange event and the ReRoute event","text":"<pre><code>private func addListenerMap() {\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n    NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n}\n</code></pre> <p><code>progressDidChange</code> returns route and location data during movement, used for camera changes and better navigation. The example below saves the current position and adds a direction arrow for the next turn. <pre><code>@objc func progressDidChange(_ notification: NSNotification  ) {\n    let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n    let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n    currentLocation = location\n    setCenterIsFirst(location)\n    addManeuverArrow(routeProgress)\n}\n</code></pre></p> <p><code>progressDidReroute</code> returns new route data when the user's location is different from the original route. <pre><code>@objc func progressDidReroute(_ notification: Notification) {\n  if let userInfo = notification.object as? RouteController {\n      navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n      centerMap(userInfo.locationManager.location!)\n  }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#subscribe-to-didselect-waypoint-and-route-events","title":"Subscribe to didSelect waypoint and route events","text":"<pre><code>extension ViewController: NavigationMapViewDelegate {\n  func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n      guard let routeOptions = routes?.first?.routeOptions else { return }\n      let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n      presentWaypointRemovalActionSheet { _ in\n          self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n      }\n  }\n\n  func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n      guard let routes = routes else { return }\n      guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n      self.routes!.remove(at: index)\n      self.routes!.insert(route, at: 0)\n  }\n\n  private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n      let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n      let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n      let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n      let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n      let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n      let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n      let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n      [remove, cancel].forEach(actionSheet.addAction(_:))\n\n      self.present(actionSheet, animated: true, completion: nil)\n  }\n}\n</code></pre>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#subscribe-to-the-didarriveat-event-and-the-bycanceling-event","title":"Subscribe to the didArriveAt event and the byCanceling event","text":"<p><code>didArriveAt</code> event is emitted when the user reaches the destination, byCanceling is the event emitted when the user cancels navigation. <pre><code>extension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/sdk-ios/sdk-ios-ver2.0/#samplecode","title":"SampleCode","text":"<pre><code>import UIKit\nimport VietMapCoreNavigation\nimport VietMapNavigation\nimport MapboxDirections\nimport UserNotifications\n\nprivate typealias RouteRequestSuccess = (([Route]) -&gt; Void)\nprivate typealias RouteRequestFailure = ((NSError) -&gt; Void)\n\nclass ViewController: UIViewController, MGLMapViewDelegate {\n\n    // MARK: - IBOutlets\n    @IBOutlet weak var longPressHintView: UIView!\n    @IBOutlet weak var startButton: UIButton!\n    @IBOutlet weak var bottomBar: UIView!\n    @IBOutlet weak var bottomBarBackground: UIView!\n    @IBOutlet weak var clearMarker: UIButton!\n\n    var navigationViewController: NavigationViewController!\n    var mapboxRouteController: RouteController?\n    var currentLocation: CLLocation!\n    var isFirstRender: Bool = false\n    var styleView = Bundle.main.object(forInfoDictionaryKey: \"VietMapURL\") as! String\n\n    // MARK: Properties\n    var mapView: NavigationMapView? {\n        didSet {\n            oldValue?.removeFromSuperview()\n            if let mapView = mapView {\n                configureMapView(mapView)\n                view.insertSubview(mapView, belowSubview: longPressHintView)\n            }\n        }\n    }\n\n    var waypoints: [Waypoint] = [] {\n        didSet {\n            waypoints.forEach {\n                $0.coordinateAccuracy = -1\n            }\n        }\n    }\n\n    var routes: [Route]? {\n        didSet {\n            startButton.isEnabled = (routes?.count ?? 0 &gt; 0)\n            guard let routes = routes,\n                  let current = routes.first else { mapView?.removeRoutes(); return }\n\n            mapView?.showRoutes(routes)\n            mapView?.showWaypoints(current)\n        }\n    }\n\n    // MARK: Directions Request Handlers\n\n    fileprivate lazy var defaultSuccess: RouteRequestSuccess = { [weak self] (routes) in\n        guard let current = routes.first else { return }\n        self?.clearMarker.isEnabled = true\n        self?.mapView?.removeWaypoints()\n        self?.routes = routes\n        self?.waypoints = current.routeOptions.waypoints\n        self?.longPressHintView.isHidden = true\n    }\n\n    fileprivate lazy var defaultFailure: RouteRequestFailure = { [weak self] (error) in\n        self?.routes = nil //clear routes from the map\n        print(error.localizedDescription)\n    }\n\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        startMapView()\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        if #available(iOS 10.0, *) {\n            UNUserNotificationCenter.current().requestAuthorization(options: [.badge, .alert, .sound]) { _,_ in\n                DispatchQueue.main.async {\n                    CLLocationManager().requestWhenInUseAuthorization()\n                }\n            }\n        }\n    }\n\n    func startMapView() {\n        self.routes = nil\n        self.waypoints = []\n        self.mapView = NavigationMapView(frame: view.bounds,styleURL: URL(string: styleView))\n        // Reset the navigation styling to the defaults if we are returning from a presentation.\n        if (presentedViewController != nil) {\n            DayStyle().apply()\n        }\n        Locale.localeVoice = \"vi\"\n    }\n\n    func configureMapView(_ mapView: NavigationMapView) {\n        mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        mapView.delegate = self\n        mapView.navigationMapDelegate = self\n        mapView.routeLineColor = UIColor.yellow\n        mapView.userTrackingMode = .follow\n        mapView.showsUserHeadingIndicator = true\n\n        let singleTap = UILongPressGestureRecognizer(target: self, action: #selector(didLongPress(tap:)))\n        mapView.gestureRecognizers?.filter({ $0 is UILongPressGestureRecognizer }).forEach(singleTap.require(toFail:))\n        mapView.addGestureRecognizer(singleTap)\n    }\n\n    // MARK: Gesture Recognizer Handlers\n    @objc func didLongPress(tap: UILongPressGestureRecognizer) {\n        guard let mapView = mapView, tap.state == .began else { return }\n\n        if let annotation = mapView.annotations?.last, waypoints.count &gt; 2 {\n            mapView.removeAnnotation(annotation)\n        }\n\n        if waypoints.count &gt; 1 {\n            waypoints = Array(waypoints.suffix(1))\n        }\n\n        let coordinates = mapView.convert(tap.location(in: mapView), toCoordinateFrom: mapView)\n        // Note: The destination name can be modified. The value is used in the top banner when arriving at a destination.\n        let waypoint = Waypoint(coordinate: coordinates, name: \"Dropped Pin #\\(waypoints.endIndex + 1)\")\n        waypoints.append(waypoint)\n\n        requestRoute()\n    }\n\n    @IBAction func startButtonPressed(_ sender: Any) {\n        startStyledNavigation()\n    }\n\n    @IBAction func clearMarker(_ sender: Any) {\n        self.clearMarker.isEnabled = false\n        self.startButton.isEnabled = false\n        mapView?.removeRoutes()\n        mapView?.removeWaypoints()\n        waypoints.removeAll()\n        longPressHintView.isHidden = false\n    }\n    // MARK: - Public Methods\n    // MARK: Route Requests\n    func requestRoute() {\n        guard waypoints.count &gt; 0 else { return }\n        guard let mapView = mapView else { return }\n\n        let userWaypoint = Waypoint(location: mapView.userLocation!.location!, heading: mapView.userLocation?.heading, name: \"User location\")\n        waypoints.insert(userWaypoint, at: 0)\n\n        let routeOptions = NavigationRouteOptions(waypoints: waypoints)\n\n        requestRoute(with: routeOptions, success: defaultSuccess, failure: defaultFailure)\n    }\n\n    fileprivate func requestRoute(with options: RouteOptions, success: @escaping RouteRequestSuccess, failure: RouteRequestFailure?) {\n        let handler: Directions.RouteCompletionHandler = {(waypoints, potentialRoutes, potentialError) in\n            if let error = potentialError, let fail = failure { return fail(error) }\n            guard let routes = potentialRoutes else { return }\n            return success(routes)\n        }\n\n        Directions.shared.calculate(options, completionHandler: handler)\n    }\n\n    func startStyledNavigation() {\n        guard let route = self.routes?.first else { return }\n        navigationViewController = NavigationViewController(\n            for: route,\n            styles: [NightStyle()],\n            locationManager: NavigationLocationManager()\n        )\n        navigationViewController.delegate = self\n        customStyleMap()\n        configureMapView()\n        addListenerMap()\n        present(navigationViewController, animated: true) {\n            self.mapView?.removeFromSuperview()\n            self.mapView = nil\n        }\n    }\n\n    private func customStyleMap() {\n        navigationViewController.mapView?.styleURL = URL(string: styleView);\n        navigationViewController.mapView?.routeLineColor = UIColor.yellow\n        navigationViewController.mapView?.userTrackingMode = .follow\n        navigationViewController.mapView?.showsUserHeadingIndicator = true\n    }\n\n    private func configureMapView() {\n        navigationViewController.mapView?.autoresizingMask = [.flexibleWidth, .flexibleHeight]\n        navigationViewController.routeController.reroutesProactively = true\n    }\n\n    @objc func progressDidReroute(_ notification: Notification) {\n        if let userInfo = notification.object as? RouteController {\n            navigationViewController.mapView?.showRoutes([userInfo.routeProgress.route])\n        }\n   }\n\n    @objc func progressDidChange(_ notification: NSNotification  ) {\n        let routeProgress = notification.userInfo![RouteControllerNotificationUserInfoKey.routeProgressKey] as! RouteProgress\n        let location = notification.userInfo![RouteControllerNotificationUserInfoKey.locationKey] as! CLLocation\n        currentLocation = location\n        setCenterIsFirst(location)\n        addManeuverArrow(routeProgress)\n    }\n\n    private func setCenterIsFirst(_ location: CLLocation) {\n        if !isFirstRender {\n            DispatchQueue.main.asyncAfter(deadline: .now() + 1.0) {\n                let camera = MGLMapCamera(\n                    lookingAtCenter: location.coordinate,\n                    acrossDistance: 500,\n                    pitch: 75,\n                    heading: location.course\n                )\n                self.navigationViewController.mapView?.setCamera(camera, animated: true)\n            }\n            isFirstRender = true\n        }\n    }\n\n\n    private func addManeuverArrow(_ routeProgress: RouteProgress) {\n        if routeProgress.currentLegProgress.followOnStep != nil {\n            navigationViewController.mapView?.addArrow(route: routeProgress.route, legIndex: routeProgress.legIndex, stepIndex: routeProgress.currentLegProgress.stepIndex + 1)\n        } else {\n            navigationViewController.mapView?.removeArrow()\n        }\n    }\n\n    private func addListenerMap() {\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidChange(_ :)), name: .routeControllerProgressDidChange, object: nil)\n        NotificationCenter.default.addObserver(self, selector: #selector(progressDidReroute(_ :)), name: .routeControllerDidReroute, object: nil)\n    }\n\n    public func cancelListener() {\n        NotificationCenter.default.removeObserver(self, name: .routeControllerDidReroute, object: nil)\n        NotificationCenter.default.removeObserver(self, name: .routeControllerProgressDidChange, object: nil)\n    }\n}\n\n// MARK: - NavigationMapViewDelegate\nextension ViewController: NavigationMapViewDelegate {\n    func navigationMapView(_ mapView: NavigationMapView, didSelect waypoint: Waypoint) {\n        guard let routeOptions = routes?.first?.routeOptions else { return }\n        let modifiedOptions = routeOptions.without(waypoint: waypoint)\n\n        presentWaypointRemovalActionSheet { _ in\n            self.requestRoute(with:modifiedOptions, success: self.defaultSuccess, failure: self.defaultFailure)\n        }\n    }\n\n    func navigationMapView(_ mapView: NavigationMapView, didSelect route: Route) {\n        guard let routes = routes else { return }\n        guard let index = routes.firstIndex(where: { $0 == route }) else { return }\n        self.routes!.remove(at: index)\n        self.routes!.insert(route, at: 0)\n    }\n\n    private func presentWaypointRemovalActionSheet(completionHandler approve: @escaping ((UIAlertAction) -&gt; Void)) {\n        let title = NSLocalizedString(\"Remove Waypoint?\", comment: \"Waypoint Removal Action Sheet Title\")\n        let message = NSLocalizedString(\"Would you like to remove this waypoint?\", comment: \"Waypoint Removal Action Sheet Message\")\n        let removeTitle = NSLocalizedString(\"Remove Waypoint\", comment: \"Waypoint Removal Action Item Title\")\n        let cancelTitle = NSLocalizedString(\"Cancel\", comment: \"Waypoint Removal Action Sheet Cancel Item Title\")\n\n        let actionSheet = UIAlertController(title: title, message: message, preferredStyle: .actionSheet)\n        let remove = UIAlertAction(title: removeTitle, style: .destructive, handler: approve)\n        let cancel = UIAlertAction(title: cancelTitle, style: .cancel, handler: nil)\n        [remove, cancel].forEach(actionSheet.addAction(_:))\n\n        self.present(actionSheet, animated: true, completion: nil)\n    }\n}\n\n// MARK: - NavigationViewControllerDelegate\nextension ViewController: NavigationViewControllerDelegate {\n    // By default, when the user arrives at a waypoint, the next leg starts immediately.\n    // If you implement this method, return true to preserve this behavior.\n    // Return false to remain on the current leg, for example to allow the user to provide input.\n    // If you return false, you must manually advance to the next leg. See the example above in `confirmationControllerDidConfirm(_:)`.\n    public func navigationViewController(_ navigationViewController: NavigationViewController, didArriveAt waypoint: Waypoint) -&gt; Bool {\n        cancelListener()\n        return true\n    }\n\n    // Called when the user hits the exit button.\n    // If implemented, you are responsible for also dismissing the UI.\n    public func navigationViewControllerDidDismiss(_ navigationViewController: NavigationViewController, byCanceling canceled: Bool) {\n        cancelListener()\n        self.navigationViewController.dismiss(animated: true) {\n            self.startMapView()\n        }\n    }\n}\n</code></pre>"},{"location":"sdk-mobile/waste/map/","title":"Vietmap Flutter GL - Flutter map SDK","text":"<p>Contact vietmap.vn to register a valid key.</p>"},{"location":"sdk-mobile/waste/map/#getting-started","title":"Getting started","text":"<p>Add library to pubspec.yaml file <pre><code>  vietmap_flutter_gl: latest_version\n</code></pre></p> <p>Check the latest version at https://pub.dev/packages/vietmap_flutter_gl</p> <p>or run this command in the terminal to add the library to the project: <pre><code>  flutter pub add vietmap_flutter_gl\n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#android-configuration","title":"Android configuration","text":"<p>Add the below code to the build.gradle (project) file at path: android/build.gradle</p> <pre><code> maven { url \"https://jitpack.io\" }\n</code></pre> <p>at the repositories block</p> <p><pre><code>allprojects {\n    repositories {\n        google()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre> Upgrade the minSdkVersion to a minimum is 24 in the build.gradle (app) file, at path android/app/build.gradle <pre><code>  minSdkVersion 24\n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#ios-configuration","title":"iOS configuration","text":"<p>Add the below codes to the Info.plist file. <pre><code>    &lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/navigations/route/&lt;/string&gt;\n    &lt;key&gt;VietMapAccessToken&lt;/key&gt;\n    &lt;string&gt;YOUR_API_KEY_HERE&lt;/string&gt;\n    &lt;key&gt;VietMapURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE&lt;/string&gt;\n    &lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n    &lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n    &lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#main-characteristics","title":"Main characteristics","text":""},{"location":"sdk-mobile/waste/map/#show-the-map","title":"Show the map","text":"<pre><code>    VietmapGL(\n      styleString:\n          'https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE',\n      initialCameraPosition:\n          CameraPosition(target: LatLng(10.762317, 106.654551)),\n      onMapCreated: (VietmapController controller) {\n          setState(() {\n            _mapController = controller;\n          });\n        },\n    );\n</code></pre>"},{"location":"sdk-mobile/waste/map/#map-interactions","title":"Map Interactions","text":"<p>The VietmapGL Maps Flutter SDK allows you to define interactions that you can activate on the map to enable gestures and click events. The following interactions are supported</p>"},{"location":"sdk-mobile/waste/map/#zoom-controls","title":"Zoom Controls","text":"<p>The map supports the familiar two-finger pinch and zooms to change the zoom level as well as double tap to zoom in. Set zoom to 4 for country-level display and 18 for house number display. In this SDK the camera position plays an important role</p> <p>And following operations can be performed using the CameraPosition</p>"},{"location":"sdk-mobile/waste/map/#target","title":"Target","text":"<p>The target is single latitude and longitude coordinate that the camera centers it on. Changing the camera's target will move the camera to the inputted coordinates. The target is a LatLng object. The target coordinate is always at the center of the viewport.</p>"},{"location":"sdk-mobile/waste/map/#tilt","title":"Tilt","text":"<p>Tilt is the camera's angle from the nadir (directly facing the Earth) and uses unit degrees. The camera's minimum (default) tilt is 0 degrees, and the maximum tilt is 60. Tilt levels use six decimal points of precision, which enables you to restrict/set/lock a map's bearing with extreme precision.</p> <p>The map camera tilt can also adjust by placing two fingertips on the map and moving both fingers up and down in parallel at the same time or</p>"},{"location":"sdk-mobile/waste/map/#bearing","title":"Bearing","text":"<p>Bearing represents the direction that the camera is pointing in and is measured in degrees  clockwise from north.</p> <p>The camera's default bearing is 0 degrees (i.e. \"true north\") causing the map compass to hide until the camera bearing becomes a non-zero value. Bearing levels use six decimal point precision, which enables you to restrict/set/lock a map's bearing with extreme precision. In addition to programmatically adjusting the camera bearing, the user can place two fingertips on the map and rotate their fingers.</p>"},{"location":"sdk-mobile/waste/map/#zoom","title":"Zoom","text":"<p>Zoom controls the scale of the map and consumes any value between 0 and 22. At zoom level 0, the viewport shows continents and other world features. A middle value of 11 will show city-level details. At a higher zoom level, the map will begin to show buildings and points of interest. The camera can zoom in the following ways:</p> <ul> <li>Pinch motion two fingers to zoom in and out.</li> <li>Quickly tap twice on the map with a single finger to zoom in.</li> <li>Quickly tap twice on the map with a single finger and hold your finger down on the screen after the second tap.</li> <li>Then slide the finger up to zoom out and down to zoom out.</li> </ul> <p>SDK allows various methods to move, and animate the camera to a particular location : <pre><code>_mapController?.moveCamera(CameraUpdate.newLatLngZoom(LatLng(22.553147478403194, 77.23388671875), 14));  \n_mapController?.animateCamera(CameraUpdate.newLatLngZoom(LatLng(28.698791, 77.121243), 14));  \n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#map-events","title":"Map Events","text":""},{"location":"sdk-mobile/waste/map/#map-clicklong-click","title":"Map Click/Long click","text":"<p>If you want to respond to a user tapping on a point on the map, you can use an onMapClick callback.</p> <p>It sets a callback that's invoked when the user clicks on the map: <pre><code>VietmapGL(    \n  initialCameraPosition: _kInitialPosition,    \n  onMapClick: (point, latlng) =&gt;{    \n    print(latlng.toString())  \n }, )  \n</code></pre></p> <p>Sets a callback that's invoked when the user long clicks on the map view. <pre><code>VietmapGL(    \n  initialCameraPosition: _kInitialPosition,    \n  onMapLongClick: (point, latlng) =&gt;{    \n    print(latlng.toString())  \n }, )  \n</code></pre></p> <p>Sets a callback that's invoked when the map is completely rendered. Encourage this callback to call some action on the initial, after the map is completely loaded <pre><code>VietmapGL(    \n  initialCameraPosition: _kInitialPosition,    \n  onMapRenderedCallback: () {\n            _mapController?.animateCamera(CameraUpdate.newCameraPosition(\n                CameraPosition(\n                    target: LatLng(10.739031, 106.680524),\n                    zoom: 10,\n                    tilt: 60)));\n    },\n  )  \n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#map-overlays","title":"Map Overlays","text":""},{"location":"sdk-mobile/waste/map/#add-a-marker-marked-a-point-in-the-map-with-a-custom-widget","title":"Add a Marker (Marked a point in the map with a custom widget)","text":"<p><pre><code>  Stack(\n    children: [\n      VietmapGL(\n        trackCameraPosition: true, // Will track the map change to update the marker position in realtime\n        ...\n        ),\n      MarkerLayer\n        ignorePointer: true, // Will ignore all user gestures on the marker\n        mapController: _mapController!,\n        markers: [\n              Marker(\n                  child: Container(\n                    width: 50,\n                    height: 50,\n                    decoration: BoxDecoration(\n                        color: Colors.red,\n                        shape: BoxShape.circle),\n                    child: Center(\n                      child: Text(\n                        'Simple text marker',\n                        style: TextStyle(\n                            color: Colors.white,\n                            fontSize: 20,\n                            fontWeight: FontWeight.bold),\n                      ),\n                    ),\n                  ),\n                  latLng: LatLng(10.727416, 106.735597)),\n              Marker(\n                  child: Icon(Icons.location_on),\n                  latLng: LatLng(10.792765, 106.674143)),\n        ]\n  ])\n</code></pre> Note: You must enable trackCameraPosition: true, at VietmapGL, which ensured the MarkerLayer renders normally - The marker support anchor with input is an alignment, which required width and height to calculate the position of the marker, the default for both of them is 20 - Make sure your width and height are correct to the marker display exactly <pre><code>    Marker(\n        width: 40,\n        height:40,\n        alignment: Alignment.bottomCenter,\n        child: Icon(Icons.location_on, size:40),\n        latLng: LatLng(10.792765, 106.674143)),\n</code></pre></p>"},{"location":"sdk-mobile/waste/map/#add-a-linepolyline-a-line-connects-2-points-on-the-map","title":"Add a Line/Polyline (A line connects 2 points on the map)","text":"<pre><code>_mapController?.addPolyline(\n      PolylineOptions(\n          geometry: [\n            LatLng(10.736657, 106.672240),\n            LatLng(10.766543, 106.742378),\n            LatLng(10.775818, 106.640497),\n            LatLng(10.727416, 106.735597),\n            LatLng(10.792765, 106.674143),\n            LatLng(10.736657, 106.672240),\n          ],\n          polylineColor: Colors.red,\n          polylineWidth: 14.0,\n          polylineOpacity: 0.5,\n          draggable: true),\n    );\n</code></pre>"},{"location":"sdk-mobile/waste/map/#remove-a-polyline","title":"Remove a Polyline","text":"<pre><code>    _mapController?.removePolyline(line);  \n</code></pre>"},{"location":"sdk-mobile/waste/map/#remove-all-polyline","title":"Remove all Polyline","text":"<pre><code>    _mapController?.clearLines();\n</code></pre>"},{"location":"sdk-mobile/waste/map/#add-a-fillpolygon","title":"Add a Fill/Polygon","text":"<pre><code>    _mapController?.addPolygon(\n      PolygonOptions(\n          geometry: [\n            [\n              LatLng(10.736657, 106.672240),\n              LatLng(10.766543, 106.742378),\n              LatLng(10.775818, 106.640497),\n              LatLng(10.727416, 106.735597),\n              LatLng(10.792765, 106.674143),\n              LatLng(10.736657, 106.672240),\n            ]\n          ],\n          polygonColor: Colors.red,\n          polygonOpacity: 0.5,\n          draggable: true),\n    );\n</code></pre>"},{"location":"sdk-mobile/waste/map/#remove-a-polygon","title":"Remove a Polygon","text":"<pre><code>    _mapController?.removePolygon(polygon);  \n</code></pre>"},{"location":"sdk-mobile/waste/map/#remove-all-polygon","title":"Remove all Polygon","text":"<pre><code>    _mapController?.clearPolygons();\n</code></pre>"},{"location":"sdk-mobile/waste/map/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Our SDK uses the key to identify the markers and update their location while the user does some gestures, so we strongly recommend you add the key for all of the widgets in the screen which use the map SDK:  <pre><code>Stack(\n children:[\n   MarkerLayer(\n     ...\n   ),\n   Positioned(\n     key: const Key('yourWidgetKey'),\n     ...\n   ),\n ]\n)\n</code></pre></li> </ul>"},{"location":"sdk-mobile/waste/map/#note-replace-apikey-which-is-provided-by-vietmap-to-all-your_api_key_here-tag-to-the-application-work-normally","title":"Note: Replace apikey which is provided by VietMap to all YOUR_API_KEY_HERE tag to the application work normally","text":"<p>  Email us: maps-api.support@vietmap.vn</p> <p>Contact for support</p> <p>Vietmap API document here</p> <p>Have a bug to report? Open an issue. If possible, include a full log and information which shows the issue. Have a feature request? Open an issue. Tell us what the feature should do and why you want the feature.</p> <p>T\u00e0i li\u1ec7u ti\u1ebfng Vi\u1ec7t</p>"},{"location":"sdk-mobile/waste/navigation/","title":"Vietmap Flutter Navigation","text":""},{"location":"sdk-mobile/waste/navigation/#getting-started","title":"Getting started","text":"<p>Add library to pubspec.yaml file</p> <pre><code>vietmap_flutter_navigation: latest_version\n</code></pre> <p>Check the latest version at https://pub.dev/packages/vietmap_flutter_navigation</p> <p>or run this command in the terminal to add the library to the project: <pre><code>flutter pub add vietmap_flutter_navigation\n</code></pre></p>"},{"location":"sdk-mobile/waste/navigation/#android-configuration","title":"Android configuration","text":"<p>Add the below code to the build.gradle (project) file at path android/build.gradle <pre><code>maven { url \"https://jitpack.io\" }\n</code></pre></p> <p>At the repositories block <pre><code>allprojects {\n    repositories {\n        google()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n</code></pre></p>"},{"location":"sdk-mobile/waste/navigation/#ios-configuration","title":"iOS configuration","text":"<p>Add the below codes to the Info.plist file <pre><code>&lt;key&gt;VietMapAPIBaseURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/navigations/route/&lt;/string&gt;\n    &lt;key&gt;VietMapAccessToken&lt;/key&gt;\n    &lt;string&gt;YOUR_API_KEY_HERE&lt;/string&gt;\n    &lt;key&gt;VietMapURL&lt;/key&gt;\n    &lt;string&gt;https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE&lt;/string&gt;\n\n    &lt;key&gt;NSLocationAlwaysAndWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n    &lt;key&gt;NSLocationAlwaysUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n    &lt;key&gt;NSLocationWhenInUseUsageDescription&lt;/key&gt;\n    &lt;string&gt;This app requires location permission to working normally&lt;/string&gt;\n</code></pre></p>"},{"location":"sdk-mobile/waste/navigation/#main-characteristics","title":"Main characteristics","text":"<pre><code>late MapOptions _navigationOption;\n  final _vietmapNavigationPlugin = VietMapNavigationPlugin();\n\n  List&lt;WayPoint&gt; wayPoints = [\n    WayPoint(name: \"origin point\", latitude: 10.759091, longitude: 106.675817),\n    WayPoint(\n        name: \"destination point\", latitude: 10.762528, longitude: 106.653099)\n  ];\n  /// Display the guide instruction image to the next turn\n  Widget instructionImage = const SizedBox.shrink();\n\n  Widget recenterButton = const SizedBox.shrink();\n  RouteProgressEvent? routeProgressEvent;\n\n  @override\n  void initState() {\n    super.initState();\n    initialize();\n  }\n\n  Future&lt;void&gt; initialize() async {\n    if (!mounted) return;\n    _navigationOption = _vietmapNavigationPlugin.getDefaultOptions();\n    _navigationOption.simulateRoute = false;\n\n    _navigationOption.apiKey =\n        'YOUR_API_KEY_HERE';\n    _navigationOption.mapStyle =\n        \"https://maps.vietmap.vn/api/maps/light/styles.json?apikey=YOUR_API_KEY_HERE\";\n\n    _vietmapNavigationPlugin.setDefaultOptions(_navigationOption);\n  }\n</code></pre> <p>Display the Navigation view, include map view, route and navigation <pre><code>NavigationView(\n            mapOptions: _navigationOption,\n            onMapCreated: (controller) {\n              _controller = controller;\n            },\n            onRouteProgressChange: (RouteProgressEvent routeProgressEvent) {\n              setState(() {\n                this.routeProgressEvent = routeProgressEvent;\n              });\n              _setInstructionImage(routeProgressEvent.currentModifier,\n                  routeProgressEvent.currentModifierType);\n            },\n          ),\n</code></pre></p> <p>Add banner instruction to display icon, route name,... <pre><code>BannerInstructionView(\n              routeProgressEvent: routeProgressEvent,\n              instructionIcon: instructionImage,\n            )\n</code></pre></p> <p>Set instruction icon from routeProgress data <pre><code>_setInstructionImage(String? modifier, String? type) {\n    if (modifier != null &amp;&amp; type != null) {\n      List&lt;String&gt; data = [\n        type.replaceAll(' ', '_'),\n        modifier.replaceAll(' ', '_')\n      ];\n      String path = 'assets/navigation_symbol/${data.join('_')}.svg';\n      setState(() {\n        instructionImage = SvgPicture.asset(path, color: Colors.white);\n      });\n    }\n  }\n</code></pre></p> <p>Instruction icon here, copy and paste to your project.</p> <p>Figma design hereAdd the Bottom view, which contains the overview route, recenter and stop navigation button. <pre><code>BottomActionView(\n              recenterButton: recenterButton,\n              controller: _controller,\n              onOverviewCallback: _showRecenterButton,\n              onStopNavigationCallback: _onStopNavigation,\n              routeProgressEvent: routeProgressEvent\n            )\n</code></pre></p> <p>Add the dispose function for the navigation controller <pre><code>@override\n  void dispose() {\n    _controller?.dispose();\n    super.dispose();\n  }\n</code></pre></p> <p>Useful function <pre><code>/// Find a new route between two locations, \n          /// waypoint1 is origin, waypoint2 is destination.\n            _controller?.buildRoute(wayPoints: &lt;Waypoint&gt;[waypoint1,waypoint2]);\n\n          /// Start navigation, call after the buildRoute have a response.\n            _controller?.startNavigation();\n\n\n          /// Find route and start when the api response at least 1 route\n            _controller?.buildAndStartNavigation(\n                wayPoints: wayPoints: &lt;Waypoint&gt;[waypoint1,waypoint2],\n                profile: DrivingProfile.drivingTraffic);\n\n          /// recenter to the navigation\n          _controller?.recenter();\n\n          /// Overview the route\n          _controller?.overview();\n\n          /// Turn on/off the navigation voice guide\n          _controller?.mute();\n\n          /// Stop the navigation\n          _controller?.finishNavigation();\n</code></pre></p>"},{"location":"sdk-mobile/waste/navigation/#troubleshooting","title":"Troubleshooting","text":"<p>We strongly recommend you call the <code>_controller?.buildRouteAndStartNavigation()</code> in a button or <code>onMapRendered</code> callback, which is called when the map is rendered successfully. <pre><code>onMapRendered: () {\n      _controller?.buildAndStartNavigation(\n      wayPoints: wayPoints: &lt;Waypoint&gt;[waypoint1,waypoint2],\n      profile: DrivingProfile.drivingTraffic);  \n    }\n</code></pre></p> <p>Demo code here</p>"},{"location":"sdk-mobile/waste/navigation/#note","title":"Note","text":"<p>Replace apikey which is provided by VietMap to all YOUR_API_KEY_HERE tag to the application work normally</p>"},{"location":"sdk-web-gl/demo/","title":"Demo - Examples","text":""},{"location":"sdk-web-gl/demo/#sdk-examples","title":"SDK EXAMPLES","text":""},{"location":"sdk-web-gl/demo/#display-a-map","title":"Display a map","text":"<p>Initialize a map in an HTML element with MapLibre GL JS. </p> <p></p> <p>Source code demo: </p> <p> </p>"},{"location":"sdk-web-gl/demo/#add-a-geojson-line","title":"Add a GeoJSON line","text":"<p>Add a GeoJSON line to a map using addSource, then style it using addLayer\u2019s paint properties.</p> <p></p> <p>Source code demo:</p> <p> </p>"},{"location":"sdk-web-gl/demo/#add-a-geojson-polygon","title":"Add a GeoJSON polygon","text":"<p>Add a GeoJSON polygon to a map using addSource, then style a polygon with the fill layer type.</p> <p></p> <p>Source code demo:</p> <p> </p>"},{"location":"sdk-web-gl/events/","title":"Events","text":"<p>The different types of events that vietmap GL JS can raise.</p> <p>You can also find additional event documentation for: Map, Marker, Popup, and GeolocationControl.</p>"},{"location":"sdk-web-gl/events/#mapmouseevent","title":"MapMouseEvent","text":"<p>MapMouseEvent is the event type for mouse-related map events.</p> <p>Extends Event.</p> <p>Example</p> <pre><code>// The `click` event is an example of a `MapMouseEvent`.\n// Set up an event listener on the map.\nmap.on('click', function(e) {\n// The event object (e) contains information like the\n// coordinates of the point on the map that was clicked.\nconsole.log('A click event has occurred at ' + e.lngLat);\n});\n</code></pre>"},{"location":"sdk-web-gl/events/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/events/#lnglat","title":"lngLat","text":"<p>The geographic location on the map of the mouse cursor.</p>"},{"location":"sdk-web-gl/events/#originalevent","title":"originalEvent","text":"<p>The DOM event which caused the map event.</p>"},{"location":"sdk-web-gl/events/#point","title":"point","text":"<p>The pixel coordinates of the mouse cursor, relative to the map and measured from the top left corner.</p>"},{"location":"sdk-web-gl/events/#preventdefault","title":"preventDefault()","text":"<p>Prevents subsequent default processing of the event by the map. Calling this method will prevent the following default map behaviors:</p> <ul> <li> <p>On mousedown events, the behavior of DragPanHandler</p> </li> <li> <p>On mousedown events, the behavior of DragRotateHandler</p> </li> <li> <p>On mousedown events, the behavior of BoxZoomHandler</p> </li> <li> <p>On dblclick events, the behavior of DoubleClickZoomHandler</p> </li> </ul>"},{"location":"sdk-web-gl/events/#target","title":"target","text":"<p>The Map object that fired the event.</p>"},{"location":"sdk-web-gl/events/#type","title":"type","text":"<p>The event type (one of Map.event:mousedown, Map.event:mouseup, Map.event:click, Map.event:dblclick, Map.event:mousemove, Map.event:mouseover, Map.event:mouseenter, Map.event:mouseleave, Map.event:mouseout, Map.event:contextmenu).</p>"},{"location":"sdk-web-gl/events/#maptouchevent","title":"MapTouchEvent","text":"<p>MapTouchEvent is the event type for touch-related map events.</p> <p>Extends Event.</p>"},{"location":"sdk-web-gl/events/#instance-members_1","title":"Instance Members","text":""},{"location":"sdk-web-gl/events/#lnglat_1","title":"lngLat","text":"<p>The geographic location on the map of the center of the touch event points.</p>"},{"location":"sdk-web-gl/events/#lnglats","title":"lngLats","text":"<p>The geographical locations on the map corresponding to a touch event's touches property.</p>"},{"location":"sdk-web-gl/events/#originalevent_1","title":"originalEvent","text":"<p>The DOM event which caused the map event.</p>"},{"location":"sdk-web-gl/events/#point_1","title":"point","text":"<p>The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left corner.</p>"},{"location":"sdk-web-gl/events/#points","title":"points","text":"<p>The array of pixel coordinates corresponding to a touch event's touches property.</p>"},{"location":"sdk-web-gl/events/#preventdefault_1","title":"preventDefault()","text":"<p>Prevents subsequent default processing of the event by the map.</p> <p>Calling this method will prevent the following default map behaviors:</p> <ul> <li>On touchstart events, the behavior of DragPanHandler</li> <li>On touchstart events, the behavior of TouchZoomRotateHandler</li> </ul>"},{"location":"sdk-web-gl/events/#target_1","title":"target","text":"<p>The Map object that fired the event.</p>"},{"location":"sdk-web-gl/events/#type_1","title":"type","text":"<p>The event type.</p>"},{"location":"sdk-web-gl/events/#vietmapzoomevent","title":"vietmapZoomEvent","text":"<p>A vietmapZoomEvent is the event type for the boxzoom-related map events emitted by the BoxZoomHandler.</p>"},{"location":"sdk-web-gl/events/#properties","title":"Properties","text":"<p>originalEvent(MouseEvent): The DOM event that triggered the boxzoom event. Can be a MouseEvent or KeyboardEvent</p> <p>type(string): The type of boxzoom event. One of boxzoomstart , boxzoomend or boxzoomcancel</p> <p>target(Map): The Map instance that triggerred the event</p>"},{"location":"sdk-web-gl/events/#mapdataevent","title":"MapDataEvent","text":"<p>A MapDataEvent object is emitted with the Map.event:data and Map.event:dataloading events. Possible values for dataTypes are:</p> <p>'source': The non-tile data associated with any source</p> <p>'style': The style used by the map</p> <p>Properties</p> <p>type(string): The event type.</p> <p>dataType(string): The type of data that has changed. One of 'source' , 'style' .</p> <p>isSourceLoaded(boolean?): True if the event has a dataType of source and the source has no outstanding network requests.</p> <p>source(Object?): The style spec representation of the source if the event has a dataType of source .</p> <p>sourceDataType(string?): Included if the event has a dataType of source and the event signals that internal data has been received or changed. Possible values are metadata , content and visibility .</p> <p>tile(Object?): The tile being loaded or changed, if the event has a dataType of source and the event is related to loading of a tile.</p> <p>coord(Coordinates?): The coordinate of the tile if the event has a dataType of source and the event is related to loading of a tile.</p> <p>Example</p> <pre><code>// The sourcedata event is an example of MapDataEvent.\n// Set up an event listener on the map.\nmap.on('sourcedata', function(e) {\nif (e.isSourceLoaded) {\n// Do something when the source has finished loading\n}\n});\n</code></pre>"},{"location":"sdk-web-gl/events/#mapwheelevent","title":"MapWheelEvent","text":"<p>MapWheelEvent is the event type for the wheel map event.</p> <p>Extends Object.</p>"},{"location":"sdk-web-gl/events/#instance-members_2","title":"Instance Members","text":""},{"location":"sdk-web-gl/events/#originalevent_2","title":"originalEvent","text":"<p>The DOM event which caused the map event.</p>"},{"location":"sdk-web-gl/events/#preventdefault_2","title":"preventDefault()","text":"<p>Prevents subsequent default processing of the event by the map.</p> <p>Calling this method will prevent the the behavior of ScrollZoomHandler.</p>"},{"location":"sdk-web-gl/events/#target_2","title":"target","text":"<p>The Map object that fired the event.</p>"},{"location":"sdk-web-gl/events/#type_2","title":"type","text":"<p>The event type.</p>"},{"location":"sdk-web-gl/geography-and-geometry/","title":"Geography and geometry","text":"<p>General utilities and types that relate to working with and manipulating geographic information or geometries.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#lnglat","title":"LngLat","text":"<p>A LngLat object represents a given longitude and latitude coordinate, measured in degrees. These coordinates are based on the WGS84 (EPSG:4326) standard.</p> <p>vietmap GL uses longitude, latitude coordinate order (as opposed to latitude, longitude) to match the GeoJSON specification.</p> <p>Note that any vietmap GL method that accepts a LngLat object as an argument or option can also accept an Array of two numbers and will perform an implicit conversion. This flexible type is documented as LngLatLike.</p> <pre><code>new LngLat(lng: number, lat: number)\n</code></pre> <p>Parameters</p> <ul> <li> <p>lng(number) Longitude, measured in degrees.</p> </li> <li> <p>lat(number) Latitude, measured in degrees.</p> </li> </ul> <p>Example</p> <pre><code>var ll = new vietmapgl.LngLat(-123.9749, 40.7736);\nll.lng; // = -123.9749\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#static-members","title":"Static Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#convertinput","title":"convert(input)","text":"<p>Converts an array of two numbers or an object with lng and lat or lon and lat properties to a LngLat object.</p> <p>If a LngLat object is passed in, the function returns it unchanged.</p> <p>Parameters</p> <p>input(LngLatLike)An array of two numbers or object to convert, or a LngLat object to return.</p> <p>Returns</p> <p>LngLat: A new LngLat object, if a conversion occurred, or the original LngLat object.</p> <p>Example</p> <pre><code>var arr = [-73.9749, 40.7736];\nvar ll = vietmapgl.LngLat.convert(arr);\nll;   // = LngLat {lng: -73.9749, lat: 40.7736}\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#distancetolnglat","title":"distanceTo(lngLat)","text":"<p>Returns the approximate distance between a pair of coordinates in meters Uses the Haversine Formula (from R.W. Sinnott, \"Virtues of the Haversine\", Sky and Telescope, vol. 68, no. 2, 1984, p. 159)</p> <p>Parameters</p> <p>lngLat(LngLat)coordinates to compute the distance to</p> <p>Returns</p> <p>number: Distance in meters between the two coordinates.</p> <p>Example</p> <pre><code>var new_york = new vietmapgl.LngLat(-74.0060, 40.7128);\nvar los_angeles = new vietmapgl.LngLat(-118.2437, 34.0522);\nnew_york.distanceTo(los_angeles); // = 3935751.690893987, \"true distance\" using a non-spherical approximation is ~3966km\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#toarray","title":"toArray()","text":"<p>Returns the coordinates represented as an array of two numbers.</p> <p>Returns</p> <p>Array: The coordinates represeted as an array of longitude and latitude.</p> <p>Example</p> <pre><code>var ll = new vietmapgl.LngLat(-73.9749, 40.7736);\nll.toArray(); // = [-73.9749, 40.7736]\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#toboundsradius","title":"toBounds(radius)","text":"<p>Returns a LngLatBounds from the coordinates extended by a given radius. The returned LngLatBounds completely contains the radius.</p> <p>Parameters</p> <p>radius(number)(default 0)Distance in meters from the coordinates to extend the bounds.</p> <p>Returns</p> <p>LngLatBounds: A new LngLatBounds object representing the coordinates extended by the radius .</p> <p>Example</p> <pre><code>var ll = new vietmapgl.LngLat(-73.9749, 40.7736);\nll.toBounds(100).toArray(); // = [[-73.97501862141328, 40.77351016847229], [-73.97478137858673, 40.77368983152771]]\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#tostring","title":"toString()","text":"<p>Returns the coordinates represent as a string.</p> <p>Returns</p> <p>string: The coordinates represented as a string of the format 'LngLat(lng, lat)' .</p> <p>Example</p> <pre><code>var ll = new vietmapgl.LngLat(-73.9749, 40.7736);\nll.toString(); // = \"LngLat(-73.9749, 40.7736)\"\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#wrap","title":"wrap()","text":"<p>Returns a new LngLat object whose longitude is wrapped to the range (-180, 180).</p> <p>Returns</p> <p>LngLat: The wrapped LngLat object.</p> <p>Example</p> <pre><code>var ll = new vietmapgl.LngLat(286.0251, 40.7736);\nvar wrapped = ll.wrap();\nwrapped.lng; // = -73.9749\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#related","title":"Related","text":"<ul> <li>Get coordinates of the mouse pointer</li> <li>Display a popup</li> <li>Create a timeline animation</li> </ul>"},{"location":"sdk-web-gl/geography-and-geometry/#lnglatlike","title":"LngLatLike","text":"<p>A LngLat object, an array of two numbers representing longitude and latitude, or an object with lng and lat or lon and lat properties.</p> <p>Example</p> <pre><code>var v1 = new vietmapgl.LngLat(-122.420679, 37.772537);\nvar v2 = [-122.420679, 37.772537];\nvar v3 = {lon: -122.420679, lat: 37.772537};\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#lnglatbounds","title":"LngLatBounds","text":"<p>A LngLatBounds object represents a geographical bounding box, defined by its southwest and northeast points in longitude and latitude.</p> <p>If no arguments are provided to the constructor, a null bounding box is created. </p> <p>Note that any Mapbox GL method that accepts a LngLatBounds object as an argument or option can also accept an Array of two LngLatLike constructs and will perform an implicit conversion. This flexible type is documented as LngLatBoundsLike.</p> <pre><code>new LngLatBounds(sw: LngLatLike?, ne: LngLatLike?)\n</code></pre> <p>Parameters</p> <ul> <li>sw(LngLatLike?)The southwest corner of the bounding box.</li> <li>ne(LngLatLike?)The northeast corner of the bounding box.</li> </ul> <p>Example</p> <pre><code>var sw = new vietmapgl.LngLat(-73.9876, 40.7661);\nvar ne = new vietmapgl.LngLat(-73.9397, 40.8002);\nvar llb = new vietmapgl.LngLatBounds(sw, ne);\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#static-members_1","title":"Static Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#convertinput_1","title":"convert(input)","text":"<p>Converts an array to a LngLatBounds object.</p> <p>If a LngLatBounds object is passed in, the function returns it unchanged.</p> <p>Internally, the function calls LngLat#convert to convert arrays to LngLat values.</p> <p>Parameters</p> <p>input(LngLatBoundsLike)An array of two coordinates to convert, or a LngLatBounds object to return.</p> <p>Returns</p> <p>LngLatBounds: A new LngLatBounds object, if a conversion occurred, or the original LngLatBounds object.</p> <p>Example</p> <pre><code>var arr = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\nvar llb = vietmapgl.LngLatBounds.convert(arr);\nllb;   // = LngLatBounds {_sw: LngLat {lng: -73.9876, lat: 40.7661}, _ne: LngLat {lng: -73.9397, lat: 40.8002}}\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#instance-members_1","title":"Instance Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#containslnglat","title":"contains(lnglat)","text":"<p>Check if the point is within the bounding box.</p> <p>Parameters</p> <p>lnglat(LngLatLike)geographic point to check against.</p> <p>Returns</p> <p>boolean: True if the point is within the bounding box.</p> <p>Example</p> <pre><code>var llb = new vietmapgl.LngLatBounds(\n  new vietmapgl.LngLat(-73.9876, 40.7661),\n  new vietmapgl.LngLat(-73.9397, 40.8002)\n);\n\nvar ll = new vietmapgl.LngLat(-73.9567, 40.7789);\n\nconsole.log(llb.contains(ll)); // = true\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#extendobj","title":"extend(obj)","text":"<p>Extend the bounds to include a given LngLatLike or LngLatBoundsLike.</p> <p>Parameters</p> <p>obj((LngLatLike | LngLatBoundsLike))object to extend to</p> <p>Returns</p> <p>LngLatBounds: this</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getcenter","title":"getCenter()","text":"<p>Returns the geographical coordinate equidistant from the bounding box's corners.</p> <p>Returns</p> <p>LngLat: The bounding box's center.</p> <p>Example</p> <pre><code>var llb = new vietmapgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\nllb.getCenter(); // = LngLat {lng: -73.96365, lat: 40.78315}\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#geteast","title":"getEast()","text":"<p>Returns the east edge of the bounding box.</p> <p>Returns</p> <p>number: The east edge of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getnorth","title":"getNorth()","text":"<p>Returns the north edge of the bounding box.</p> <p>Returns</p> <p>number: The north edge of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getnortheast","title":"getNorthEast()","text":"<p>Returns the northeast corner of the bounding box.</p> <p>Returns</p> <p>LngLat: The northeast corner of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getnorthwest","title":"getNorthWest()","text":"<p>Returns the northwest corner of the bounding box.</p> <p>Returns</p> <p>LngLat: The northwest corner of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getsouth","title":"getSouth()","text":"<p>Returns the south edge of the bounding box.</p> <p>Returns</p> <p>number: The south edge of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getsoutheast","title":"getSouthEast()","text":"<p>Returns the southeast corner of the bounding box.</p> <p>Returns</p> <p>LngLat: The southeast corner of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getsouthwest","title":"getSouthWest()","text":"<p>Returns the southwest corner of the bounding box.</p> <p>Returns</p> <p>LngLat: The southwest corner of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#getwest","title":"getWest()","text":"<p>Returns the west edge of the bounding box.</p> <p>Returns</p> <p>number: The west edge of the bounding box.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#isempty","title":"isEmpty()","text":"<p>Check if the bounding box is an empty/null-type box.</p> <p>Returns</p> <p>boolean: True if bounds have been defined, otherwise false.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#setnortheastne","title":"setNorthEast(ne)","text":"<p>Set the northeast corner of the bounding box</p> <p>Parameters</p> <p>ne(LngLatLike)a LngLatLike object describing the northeast corner of the bounding box.</p> <p>Returns</p> <p>LngLatBounds: this</p>"},{"location":"sdk-web-gl/geography-and-geometry/#setsouthwestsw","title":"setSouthWest(sw)","text":"<p>Set the southwest corner of the bounding box</p> <p>Parameters</p> <p>sw(LngLatLike)a LngLatLike object describing the southwest corner of the bounding box.</p> <p>Returns</p> <p>LngLatBounds: this</p>"},{"location":"sdk-web-gl/geography-and-geometry/#toarray_1","title":"toArray()","text":"<p>Returns the bounding box represented as an array.</p> <p>Returns</p> <p>Array&gt;: The bounding box represented as an array, consisting of the southwest and northeast coordinates of the bounding represented as arrays of numbers.</p> <p>Example</p> <pre><code>var llb = new vietmapgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\nllb.toArray(); // = [[-73.9876, 40.7661], [-73.9397, 40.8002]]\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#tostring_1","title":"toString()","text":"<p>Return the bounding box represented as a string.</p> <p>Returns</p> <p>string: The bounding box represents as a string of the format 'LngLatBounds(LngLat(lng, lat), LngLat(lng, lat))' .</p> <p>Example</p> <pre><code>var llb = new vietmapgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002]);\nllb.toString(); // = \"LngLatBounds(LngLat(-73.9876, 40.7661), LngLat(-73.9397, 40.8002))\"\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#lnglatboundslike","title":"LngLatBoundsLike","text":"<p>A LngLatBounds object, an array of LngLatLike objects in [sw, ne] order, or an array of numbers in [west, south, east, north] order.</p> <p>Example</p> <pre><code>var v1 = new vietmapgl.LngLatBounds(\n  new vietmapgl.LngLat(-73.9876, 40.7661),\n  new vietmapgl.LngLat(-73.9397, 40.8002)\n);\nvar v2 = new vietmapgl.LngLatBounds([-73.9876, 40.7661], [-73.9397, 40.8002])\nvar v3 = [[-73.9876, 40.7661], [-73.9397, 40.8002]];\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#pointlike","title":"PointLike","text":"<p>A Point or an array of two numbers representing x and y screen coordinates in pixels.</p> <p>Example</p> <pre><code>var p1 = new Point(-77, 38); // a PointLike which is a Point\nvar p2 = [-77, 38]; // a PointLike which is an array of two numbers\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#mercatorcoordinate","title":"MercatorCoordinate","text":"<p>A MercatorCoordinate object represents a projected three dimensional position.</p> <p>MercatorCoordinate uses the web mercator projection (EPSG:3857) with slightly different units:</p> <ul> <li>the size of 1 unit is the width of the projected world instead of the \"mercator meter\"</li> <li>the origin of the coordinate space is at the north-west corner instead of the middle</li> </ul> <p>For example, MercatorCoordinate(0, 0, 0) is the north-west corner of the mercator world and MercatorCoordinate(1, 1, 0) is the south-east corner. If you are familiar with vector tiles it may be helpful to think of the coordinate space as the 0/0/0 tile with an extent of 1.</p> <p>The z dimension of MercatorCoordinate is conformal. A cube in the mercator coordinate space would be rendered as a cube.</p> <pre><code>new MercatorCoordinate(x: number, y: number, z: number)\n</code></pre> <p>Parameters</p> <ul> <li>x(number)The x component of the position.</li> <li>y(number)The y component of the position.</li> <li>z(number)(default 0)The z component of the position.</li> </ul> <p>Example</p> <pre><code>var nullIsland = new vietmapgl.MercatorCoordinate(0.5, 0.5, 0);\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#static-members_2","title":"Static Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#fromlnglatlnglatlike-altitude","title":"fromLngLat(lngLatLike, altitude)","text":"<p>Project a LngLat to a MercatorCoordinate.</p> <p>Parameters</p> <ul> <li> <p>lngLatLike(LngLatLike)The location to project.</p> </li> <li> <p>altitude(number)(default 0)The altitude in meters of the position.</p> </li> </ul> <p>Returns</p> <p>MercatorCoordinate: The projected mercator coordinate.</p> <p>Example</p> <pre><code>var coord = vietmapgl.MercatorCoordinate.fromLngLat({ lng: 0, lat: 0}, 0);\ncoord; // MercatorCoordinate(0.5, 0.5, 0)\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#instance-members_2","title":"Instance Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#meterinmercatorcoordinateunits","title":"meterInMercatorCoordinateUnits()","text":"<p>Returns the distance of 1 meter in MercatorCoordinate units at this latitude.</p> <p>For coordinates in real world units using meters, this naturally provides the scale to transform into MercatorCoordinates.</p> <p>Returns</p> <p>number: Distance of 1 meter in MercatorCoordinate units.</p>"},{"location":"sdk-web-gl/geography-and-geometry/#toaltitude","title":"toAltitude()","text":"<p>Returns the altitude in meters of the coordinate.</p> <p>Returns</p> <p>number: The altitude in meters.</p> <p>Example</p> <pre><code>var coord = new vietmapgl.MercatorCoordinate(0, 0, 0.02);\ncoord.toAltitude(); // 6914.281956295339\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#tolnglat","title":"toLngLat()","text":"<p>Returns the LngLat for the coordinate.</p> <p>Returns</p> <p>LngLat: The LngLat object.</p> <p>Example</p> <pre><code>var coord = new vietmapgl.MercatorCoordinate(0.5, 0.5, 0);\nvar lngLat = coord.toLngLat(); // LngLat(0, 0)\n</code></pre>"},{"location":"sdk-web-gl/geography-and-geometry/#related_1","title":"Related","text":"<ul> <li>Add a custom style layer</li> </ul>"},{"location":"sdk-web-gl/geography-and-geometry/#edgeinsets","title":"EdgeInsets","text":"<p>An EdgeInset object represents screen space padding applied to the edges of the viewport. This shifts the apprent center or the vanishing point of the map. This is useful for adding floating UI elements on top of the map and having the vanishing point shift as UI elements resize.</p> <pre><code>new EdgeInsets(top: number, bottom: number, left: number, right: number)\n</code></pre> <p>Parameters</p> <ul> <li>top(number)(default 0)</li> <li>bottom(number)(default 0)</li> <li>left(number)(default 0)</li> <li>right(number)(default 0)</li> </ul>"},{"location":"sdk-web-gl/geography-and-geometry/#static-members_3","title":"Static Members","text":""},{"location":"sdk-web-gl/geography-and-geometry/#getcenterwidth-height","title":"getCenter(width, height)","text":"<p>Utility method that computes the new apprent center or vanishing point after applying insets. This is in pixels and with the top left being (0.0) and +y being downwards.</p> <p>Parameters</p> <ul> <li>width(number)the width</li> <li>height(number)the height</li> </ul> <p>Returns</p> <p>Point: the point</p>"},{"location":"sdk-web-gl/geography-and-geometry/#interpolatestart-target-t","title":"interpolate(start, target, t)","text":"<p>Interpolates the inset in-place. This maintains the current inset value for any inset not present in target.</p> <p>Parameters</p> <ul> <li> <p>start((PaddingOptions | EdgeInsets))interpolation start</p> </li> <li> <p>target(PaddingOptions)interpolation target</p> </li> <li> <p>t(number)interpolation step/weight</p> </li> </ul> <p>Returns</p> <p>EdgeInsets: the insets</p>"},{"location":"sdk-web-gl/geography-and-geometry/#tojson","title":"toJSON()","text":"<p>Returns the current state as json, useful when you want to have a read-only representation of the inset.</p> <p>Returns</p> <p>PaddingOptions: state as json</p>"},{"location":"sdk-web-gl/map/","title":"Map","text":"<p>The Map object represents the map on your page. It exposes methods and properties that enable you to programmatically change the map, and fires events as users interact with it.</p> <p>You create a Map by specifying a container and other options. Then vietmap GL JS initializes the map on the page and returns your Map object.</p> <pre><code>new Map class(options: Object)\n</code></pre>"},{"location":"sdk-web-gl/map/#parameter","title":"Parameter","text":"Name Description options.container(HTMLElement | string) The HTML element in which vietmap GL JS will render the map, or the element's string id . The specified element must have no children. options.minZoomnumberdefault: 0 The minimum zoom level of the map (0-24). options.maxZoomnumberdefault: 22 The maximum zoom level of the map (0-24). options.minPitchnumberdefault: 0 The minimum pitch of the map (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the vietmap project.options.style(Object | string)?The map's vietmap style. This must be an a JSON object conforming to t options.hash(boolean |string)default: false If true , the map's position (zoom, center latitude, center longitude, bearing, and pitch) will be synced with the hash fragment of the page's URL. For example, http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60 . An additional string may optionally be provided to indicate a parameter-styled hash, e.g. http://path/to/my/page.html#map=2.59/39.26/53.07/-24.1/60&amp;foo=bar , where foo is a custom parameter and bar is an arbitrary hash distinct from the map hash. options.interactivebooleandefault: true If false , no mouse, touch, or keyboard listeners will be attached to the map, so it will not respond to interaction. options.bearingSnapnumberdefault: 7 The threshold, measured in degrees, that determines when the map's bearing will snap to north. For example, with a bearingSnap of 7, if the user rotates the map within 7 degrees of north, the map will automatically snap to exact north. options.pitchWithRotatebooleandefault: true If false , the map's pitch (tilt) control with \"drag to rotate\" interaction will be disabled. options.clickTolerancenumberdefault: 3 The max number of pixels a user can shift the mouse pointer during a click for it to be considered a valid click (as opposed to a mouse drag). options.attributionControlbooleandefault: true If true , an AttributionControl will be added to the map. options.customAttribution(string | Array)? String or strings to show in an AttributionControl . Only applicable if options.attributionControl is true . options.vietmapLogobooleandefault: false If true , the vietmap logo will be shown. options.logoPositionstringdefault: 'bottom-left' A string representing the position of the vietmap wordmark on the map. Valid options are top-left , top-right , bottom-left , bottom-right . options.failIfMajorPerformanceCaveatbooleandefault: false If true , map creation will fail if the performance of vietmap GL JS would be dramatically worse than expected (i.e. a software renderer would be used). options.preserveDrawingBufferbooleandefault: false If true , the map's canvas can be exported to a PNG using map.getCanvas().toDataURL() . This is false by default as a performance optimization. options.antialiasboolean? If true , the gl context will be created with MSAA antialiasing, which can be useful for antialiasing custom layers. this is false by default as a performance optimization. options.refreshExpiredTilesbooleandefault: true If false , the map won't attempt to re-request tiles once they expire per their HTTP cacheControl / expires headers. options.maxBoundsLngLatBoundsLike? If set, the map will be constrained to the given bounds. options.scrollZoom(boolean | Object)default: true If true , the \"scroll to zoom\" interaction is enabled. An Object value is passed as options to ScrollZoomHandler#enable . options.boxZoombooleandefault: true If true , the \"box zoom\" interaction is enabled (see BoxZoomHandler ). options.dragRotatebooleandefault: true If true , the \"drag to rotate\" interaction is enabled (see DragRotateHandler ). options.dragPan(boolean | Object)default: true If true , the \"drag to pan\" interaction is enabled. An Object value is passed as options to DragPanHandler#enable . options.keyboardbooleandefault: true If true , keyboard shortcuts are enabled (see KeyboardHandler ). options.doubleClickZoombooleandefault: true If true , the \"double click to zoom\" interaction is enabled (see DoubleClickZoomHandler ). options.touchZoomRotate(boolean | Object)default: true If true , the \"pinch to rotate and zoom\" interaction is enabled. An Object value is passed as options to TouchZoomRotateHandler#enable . options.touchPitch(boolean | Object)default: true If true , the \"drag to pitch\" interaction is enabled. An Object value is passed as options to TouchPitchHandler#enable . options.trackResizebooleandefault: true If true , the map will automatically resize when the browser window resizes. options.centerLngLatLikedefault: [0,0] The initial geographical centerpoint of the map. If center is not specified in the constructor options, vietmap GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to [0, 0] Note: vietmap GL uses longitude, latitude coordinate order (as opposed to latitude, longitude) to match GeoJSON. options.zoomnumberdefault: 0 The initial zoom level of the map. If zoom is not specified in the constructor options, vietmap GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0 . options.bearingnumberdefault: 0 The initial bearing (rotation) of the map, measured in degrees counter-clockwise from north. If bearing is not specified in the constructor options, vietmap GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0 . options.pitchnumberdefault: 0 The initial pitch (tilt) of the map, measured in degrees away from the plane of the screen (0-85). If pitch is not specified in the constructor options, vietmap GL JS will look for it in the map's style object. If it is not specified in the style, either, it will default to 0 . Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the vietmap project. options.boundsLngLatBoundsLike? The initial bounds of the map. If bounds is specified, it overrides center and zoom constructor options. options.fitBoundsOptionsObject? A Map#fitBounds options object to use only when fitting the initial bounds provided above options.renderWorldCopiesbooleandefault: true If true , multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to false :When the map is zoomed out far enough that a single representation of the world does not fill the map's entirecontainer, there will be blank space beyond 180 and -180 degrees longitude.Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of themap and the other on the left edge of the map) at every zoom level. options.maxTileCacheSizenumberdefault: null The maximum number of tiles stored in the tile cache for a given source. If omitted, the cache will be dynamically sized based on the current viewport. options.localIdeographFontFamilystringdefault: 'sans-serif' Defines a CSS font-family for locally overriding generation of glyphs in the 'CJK Unified Ideographs', 'Hiragana', 'Katakana' and 'Hangul Syllables' ranges. In these ranges, font settings from the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold). Set to false , to enable font settings from the map's style for these glyph ranges. The purpose of this option is to avoid bandwidth-intensive glyph server requests. (See Use locally generated ideographs .) options.transformRequestRequestTransformFunctiondefault: null A callback run before the Map makes a request for an external URL. The callback can be used to modify the url, set headers, or set the credentials property for cross-origin requests. Expected to return an object with a url property and optionally headers and credentials properties. options.collectResourceTimingbooleandefault: false If true , Resource Timing API information will be collected for requests made by GeoJSON and Vector Tile web workers (this information is normally inaccessible from the main Javascript thread). Information will be returned in a resourceTiming property of relevant data events. options.fadeDurationnumberdefault: 300 Controls the duration of the fade-in/fade-out animation for label collisions, in milliseconds. This setting affects all symbol layers. This setting does not affect the duration of runtime styling transitions or raster tile cross-fading. options.crossSourceCollisionsbooleandefault: true If true , symbols from multiple sources can collide with each other during collision detection. If false , collision detection is run separately for the symbols in each source. options.localeObjectdefault: null A patch to apply to the default localization table for UI strings, e.g. control tooltips. The locale object maps namespaced UI string IDs to translated strings in the target language; see src/ui/default_locale.js for an example with all supported string IDs. The object may specify all UI strings (thereby adding support for a new translation) or only a subset of strings (thereby patching the default translation table). options.pixelRationumber? The pixel ratio. The canvas' width attribute will be container.clientWidth * pixelRatio and its height attribute will be container.clientHeight * pixelRatio . Defaults to devicePixelRatio if not specified.example"},{"location":"sdk-web-gl/map/#example","title":"Example","text":"<pre><code>var map = new vietmapgl.Map({\n    container: 'map',\n    center: [-122.420679, 37.772537],\n    zoom: 13,\n    style: style_object,\n    hash: true,\n    transformRequest: (url, resourceType)=&gt; {\n    if(resourceType === 'Source' &amp;&amp; url.startsWith('http://myHost')) {\n        return {\n            url: url.replace('http', 'https'),\n            headers: { 'my-custom-header': true},\n            credentials: 'include'  // Include cookies for cross-origin requests\n        }\n    }\n    }\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/map/#addcontrolcontrol-position","title":"addControl(control, position?)","text":"<p>Adds an IControl to the map, calling control.onAdd(this).</p> <p>Parameters</p> <p>control(IControl)The IControl to add.  position(string?)position on the map to which the control will be added. Valid values are <code>'top-left'</code> , <code>'top-right'</code> , <code>'bottom-left'</code> , and <code>'bottom-right'</code> . Defaults to <code>'top-right'</code> .</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Add zoom and rotation controls to the map.\nmap.addControl(new vietmapgl.NavigationControl());\n</code></pre> <p>Related</p> <p>Display map navigation controls</p>"},{"location":"sdk-web-gl/map/#addimageid-image-options","title":"addImage(id, image, options)","text":"<p>Add an image to the style. This image can be displayed on the map like any other icon in the style's sprite using the image's ID with icon-image, background-pattern, fill-pattern, or line-pattern. A Map.event:error event will be fired if there is not enough space in the sprite to add this image.</p> <p>Parameters</p> <ul> <li> <p>id(string)</p> </li> <li> <p>The ID of the image.</p> </li> <li> <p>image((HTMLImageElement | ImageBitmap | ImageData | {width: number, height: number, data: (Uint8Array | Uint8ClampedArray)} | StyleImageInterface))The image as an HTMLImageElement , ImageData , ImageBitmap or object with width , height , and data properties with the same format as ImageData .</p> </li> <li> <p>options(Partial)(default {}) Options object.</p> </li> </ul> Name Description options.pixelRatioanydefault: 1 The ratio of pixels in the image to physical pixels on the screen options.sdfanydefault: false Whether the image should be interpreted as an SDF image options.stretchXany [[x1, x2], ...] If icon-text-fit is used in a layer with this image, this option defines the part(s) of the image that can be stretched horizontally. options.stretchYany [[y1, y2], ...] If icon-text-fit is used in a layer with this image, this option defines the part(s) of the image that can be stretched vertically. options.contentany [x1, y1, x2, y2] If icon-text-fit is used in a layer with this image, this option defines the part of the image that can be covered by the content in text-field .example <p>Example</p> <pre><code>// If the style's sprite does not already contain an image with ID 'cat',\n// add the image 'cat-icon.png' to the style's sprite with the ID 'cat'.\nmap.loadImage('https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Cat_silhouette.svg/400px-Cat_silhouette.svg.png', function(error, image) {\n    if (error) throw error;\n    if (!map.hasImage('cat')) map.addImage('cat', image);\n});\n\n\n// Add a stretchable image that can be used with `icon-text-fit`\n// In this example, the image is 600px wide by 400px high.\nmap.loadImage('https://upload.wikimedia.org/wikipedia/commons/8/89/Black_and_White_Boxed_%28bordered%29.png', function(error, image) {\n    if (error) throw error;\n    if (!map.hasImage('border-image')) {\n        map.addImage('border-image', image, {\n            content: [16, 16, 300, 384], // place text over left half of image, avoiding the 16px border\n            stretchX: [[16, 584]], // stretch everything horizontally except the 16px border\n            stretchY: [[16, 384]], // stretch everything vertically except the 16px border\n        });\n    }\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Use HTMLImageElement : Add an icon to the map</p> </li> <li> <p>Use ImageData : Add a generated icon to the map</p> </li> </ul>"},{"location":"sdk-web-gl/map/#addlayerlayer-beforeid","title":"addLayer(layer, beforeId)","text":"<p>Adds a vietmap style layer to the map's style.</p> <p>A layer defines how data from a specified source will be styled. Read more about layer types and available paint and layout properties in the vietmap Style Specification.</p> <p>Parameters</p> <p>layer((Object | CustomLayerInterface))The layer to add, conforming to either the vietmap Style Specification's layer definition or, less commonly, the CustomLayerInterface specification. The vietmap Style Specification's layer definition is appropriate for most layers.</p> Name Description layer.idstring A unique identifer that you define. layer.typestring The type of layer (for example fill or symbol ). A list of layer types is available in the vietmap Style Specification .(This can also be custom. For more information, see CustomLayerInterface.) layer.source(string | Object)? The data source for the layer. Reference a source that has already been defined using the source's unique id. Reference a new source using a source object (as defined in the vietmap Style Specification ) directly. This is required for all layer.type options except for custom . layer.sourceLayerstring? (optional) The name of the source layer within the specified layer.source to use for this style layer. This is only applicable for vector tile sources and is required when layer.source is of the type vector . layer.filterarray? (optional) An expression specifying conditions on source features. Only features that match the filter are displayed. The vietmap Style Specification includes more information on the limitations of the filter parameter and a complete list of available expressions . If no filter is provided, all features in the source (or source layer for vector tilesets) will be displayed. layer.paintObject? (optional) Paint properties for the layer. Available paint properties vary by layer.type . A full list of paint properties for each layer type is available in the vietmap Style Specification . If no paint properties are specified, default values will be used. layer.layoutObject? (optional) Layout properties for the layer. Available layout properties vary by layer.type . A full list of layout properties for each layer type is available in the vietmap Style Specification . If no layout properties are specified, default values will be used. layer.maxzoomnumber? (optional) The maximum zoom level for the layer. At zoom levels equal to or greater than the maxzoom, the layer will be hidden. The value can be any number between 0 and 24 (inclusive). If no maxzoom is provided, the layer will be visible at all zoom levels for which there are tiles available. layer.minzoomnumber? (optional) The minimum zoom level for the layer. At zoom levels less than the minzoom, the layer will be hidden. The value can be any number between 0 and 24 (inclusive). If no minzoom is provided, the layer will be visible at all zoom levels for which there are tiles available. layer.metadataObject? (optional) Arbitrary properties useful to track with the layer, but do not influence rendering. layer.renderingModestring? This is only applicable for layers with the type custom . See CustomLayerInterface for more information. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Add a circle layer with a vector source\nmap.addLayer({\n    id: 'points-of-interest',\n    source: {\n        type: 'vector',\n        url: 'https://demotiles.vietmap.org/tiles/tiles.json'\n    },\n    'source-layer': 'poi_label',\n    type: 'circle',\n    paint: {\n    // vietmap Style Specification paint properties\n    },\n    layout: {\n    // vietmap Style Specification layout properties\n    }\n});\n\n\n// Define a source before using it to create a new layer\nmap.addSource('state-data', {\n    type: 'geojson',\n    data: 'path/to/data.geojson'\n});\n\nmap.addLayer({\n    id: 'states',\n    // References the GeoJSON source defined above\n    // and does not require a `source-layer`\n    source: 'state-data',\n    type: 'symbol',\n    layout: {\n    // Set the label content to the\n    // feature's `name` property\n    text-field: ['get', 'name']\n    }\n});\n\n\n// Add a new symbol layer before an existing layer\nmap.addLayer({\n    id: 'states',\n    // References a source that's already been defined\n    source: 'state-data',\n    type: 'symbol',\n    layout: {\n        // Set the label content to the\n        // feature's `name` property\n        text-field: ['get', 'name']\n    }\n    // Add the layer before the existing `cities` layer\n}, 'cities');\n</code></pre> <p>Related</p> <ul> <li> <p>Create and style clusters</p> </li> <li> <p>Add a vector tile source</p> </li> <li> <p>Add a WMS source</p> </li> </ul>"},{"location":"sdk-web-gl/map/#addsourceid-source","title":"addSource(id, source)","text":"<p>Adds a source to the map's style.</p> <p>Parameters</p> <ul> <li> <p>id(string)The ID of the source to add. Must not conflict with existing sources.</p> </li> <li> <p>source(Object)The source object, conforming to the vietmap Style Specification's source definition or CanvasSourceOptions .</p> </li> </ul> <p>Return</p> <p>Map: this</p> <p>Example</p> <pre><code>map.addSource('my-data', {\n    type: 'vector',\n    url: 'https://demotiles.vietmap.org/tiles/tiles.json'\n});\n\n\nmap.addSource('my-data', {\n    \"type\": \"geojson\",\n    \"data\": {\n        \"type\": \"Feature\",\n        \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [-77.0323, 38.9131]\n    },\n    \"properties\": {\n        \"title\": \"Mapbox DC\",\n        \"marker-symbol\": \"monument\"\n    }\n    }\n});\n</code></pre> <p>Related</p> <ul> <li>GeoJSON source: Add live realtime data</li> </ul>"},{"location":"sdk-web-gl/map/#addtilesloaded","title":"addTilesLoaded()","text":"<p>Returns a Boolean indicating whether all tiles in the viewport from all sources on the style are loaded.</p> <p>Returns(http://192.168.10.112:8099/sdk/docs/api/map/#aretilesloaded-returns)</p> <p>boolean: A Boolean indicating whether all tiles are loaded.</p> <p>Example</p> <pre><code>var tilesLoaded = map.areTilesLoaded();\n</code></pre>"},{"location":"sdk-web-gl/map/#boxzoom","title":"boxZoom","text":"<p>The map's BoxZoomHandler, which implements zooming using a drag gesture with the Shift key pressed. Find more details and examples using boxZoom in the BoxZoomHandler section.</p>"},{"location":"sdk-web-gl/map/#cameraforboundsbound-options","title":"cameraForBounds(bound, options?)","text":"<p>Parameters</p> <p>bounds(LngLatBoundsLike)Calculate the center for these bounds in the viewport and use the highest zoom level up to and including Map#getMaxZoom() that fits in the viewport. LngLatBounds represent a box that is always axis-aligned with bearing 0.</p> <p>options(CameraForBoundsOptions?)Options object</p> Name Description options.padding(number | PaddingOptions)? The amount of padding in pixels to add to the given bounds. options.bearingnumberdefault: 0 Desired map bearing at end of animation, in degrees. options.offsetPointLikedefault: [0,0] The center of the given bounds relative to the map's center, measured in pixels. options.maxZoomnumber? The maximum zoom level to allow when the camera would transition to the specified bounds. <p>Returns</p> <p>CenterZoomBearing: If map is able to fit to provided bounds, returns center , zoom , and bearing . If map is unable to fit, method will warn and return undefined.</p> <p>Example</p> <pre><code>var bbox = [[-79, 43], [-73, 45]];\nvar newCameraTransform = map.cameraForBounds(bbox, {\n    padding: {top: 10, bottom:25, left: 15, right: 5}\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#doupleclickzoom","title":"doupleClickZoom","text":"<p>The map's DoubleClickZoomHandler, which allows the user to zoom by double clicking. Find more details and examples using doubleClickZoom in the DoubleClickZoomHandler section.</p>"},{"location":"sdk-web-gl/map/#dragpan","title":"dragPan","text":"<p>The map's DragPanHandler, which implements dragging the map with a mouse or touch gesture. Find more details and examples using dragPan in the DragPanHandler section.</p>"},{"location":"sdk-web-gl/map/#dragrotate","title":"dragRotate","text":"<p>The map's DragRotateHandler, which implements rotating the map while dragging with the right mouse button or with the Control key pressed. Find more details and examples using dragRotate in the DragRotateHandler section.</p>"},{"location":"sdk-web-gl/map/#easetooptions-eventdata","title":"easeTo(options, eventData?)","text":"<p>Changes any combination of center, zoom, bearing, pitch, and padding with an animated transition between old and new values. The map will retain its current values for any details not specified in options.</p> <p>Note: The transition will happen instantly if the user has enabled the reduced motion accesibility feature enabled in their operating system, unless options includes essential: true.</p> <p>Parameters</p> <ul> <li> <p>options(any)Options describing the destination and animation of the transition. Accepts CameraOptions and AnimationOptions .</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Related</p> <p>Navigate the map with game-like controls</p>"},{"location":"sdk-web-gl/map/#fitboundsbounds-options-eventdata","title":"fitBounds(bounds, options?, eventData?)","text":"<p>Pans and zooms the map to contain its visible area within the specified geographical bounds. This function will also reset the map's bearing to 0 if bearing is nonzero.</p> <p>Parameters</p> <p>bounds(LngLatBoundsLike) Center these bounds in the viewport and use the highest zoom level up to and including Map#getMaxZoom() that fits them in the viewport.</p> <p>options(FitBoundsOptions? ) Options supports all properties from AnimationOptions and CameraOptions in addition to the fields below.</p> Name Description options.padding(number | PaddingOptions)? The amount of padding in pixels to add to the given bounds. options.linearbooleandefault: false If true , the map transitions using Map#easeTo . If false , the map transitions using Map#flyTo . See those functions and AnimationOptions for information about options available. options.easingFunction? An easing function for the animated transition. See AnimationOptions . options.offsetPointLikedefault: [0,0] The center of the given bounds relative to the map's center, measured in pixels. options.maxZoomnumber? number?The maximum zoom level to allow when the map view transitions to the specified bounds. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>var bbox = [[-79, 43], [-73, 45]];\nmap.fitBounds(bbox, {\n    padding: {top: 10, bottom:25, left: 15, right: 5}\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#fitscreencoordinatesp0-p1-bearing-options-eventdata","title":"fitScreenCoordinates(p0, p1, bearing, options?, eventData?)","text":"<p>Pans, rotates and zooms the map to to fit the box made by points p0 and p1 once the map is rotated to the specified bearing. To zoom without rotating, pass in the current map bearing.</p> <p>Parameters</p> <p>p0(PointLike) First point on screen, in pixel coordinates</p> <p>p1(PointLike) Second point on screen, in pixel coordinates</p> <p>bearing(number) Desired map bearing at end of animation, in degrees</p> <p>options(FitBoundsOptions?) Options object</p> Name Description options.padding(number | PaddingOptions)? The amount of padding in pixels to add to the given bounds. options.linearbooleandefault: false If true , the map transitions using Map#easeTo . If false , the map transitions using Map#flyTo . See those functions and AnimationOptions for information about options available. options.easingFunction? An easing function for the animated transition. See AnimationOptions . options.offsetPointLikedefault: [0,0] The center of the given bounds relative to the map's center, measured in pixels. options.maxZoomnumber? The maximum zoom level to allow when the map view transitions to the specified bounds. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>var p0 = [220, 400];\nvar p1 = [500, 900];\nmap.fitScreenCoordinates(p0, p1, map.getBearing(), {\n    padding: {top: 10, bottom:25, left: 15, right: 5}\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#flytooptions-eventdata","title":"flyTo(options, eventData?)","text":"<p>Changes any combination of center, zoom, bearing, and pitch, animating the transition along a curve that evokes flight. The animation seamlessly incorporates zooming and panning to help the user maintain her bearings even after traversing a great distance.</p> <p>Note: The animation will be skipped, and this will behave equivalently to jumpTo if the user has the reduced motion accesibility feature enabled in their operating system, unless 'options' includes essential: true.</p> <p>Parameters</p> <p>options(FlyToOptions) Options describing the destination and animation of the transition. Accepts CameraOptions , AnimationOptions , and the following additional options.</p> Name Description options.curvenumberdefault: 1.42 The zooming \"curve\" that will occur along the flight path. A high value maximizes zooming for an exaggerated animation, while a low value minimizes zooming for an effect closer to Map#easeTo . 1.42 is the average value selected by participants in the user study discussed in van Wijk (2003) . A value of Math.pow(6, 0.25) would be equivalent to the root mean squared average velocity. A value of 1 would produce a circular motion. options.minZoomnumber? The zero-based zoom level at the peak of the flight path. If options.curve is specified, this option is ignored. options.speednumberdefault: 1.2 The average speed of the animation defined in relation to options.curve . A speed of 1.2 means that the map appears to move along the flight path by 1.2 times options.curve screenfuls every second. A screenful is the map's visible span. It does not correspond to a fixed physical distance, but varies by zoom level. options.screenSpeednumber? The average speed of the animation measured in screenfuls per second, assuming a linear timing curve. If options.speed is specified, this option is ignored. options.maxDurationnumber? The animation's maximum duration, measured in milliseconds. If duration exceeds maximum duration, it resets to 0. <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// fly with default options to null island\nmap.flyTo({center: [0, 0], zoom: 9});\n// using flyTo options\nmap.flyTo({\n    center: [0, 0],\n    zoom: 9,\n    speed: 0.2,\n    curve: 1,\n    easing(t) {\n    return t;\n    }\n});\n</code></pre> <p>Related</p> <ul> <li>Fly to a location</li> <li>Slowly fly to a location</li> <li>Fly to a location based on scroll position</li> </ul>"},{"location":"sdk-web-gl/map/#getbearing","title":"getBearing()","text":"<p>Returns the map's current bearing. The bearing is the compass direction that is \"up\"; for example, a bearing of 90\u00b0 orients the map so that east is up.</p> <p>Returns</p> <p>number: The map's current bearing.</p> <p>Related</p> <p>Navigate the map with game-like controls</p>"},{"location":"sdk-web-gl/map/#getbounds","title":"getBounds()","text":"<p>Returns the map's geographical bounds. When the bearing or pitch is non-zero, the visible region is not an axis-aligned rectangle, and the result is the smallest bounds that encompasses the visible region.</p> <p>Returns</p> <p>LngLatBounds: The geographical bounds of the map as LngLatBounds .</p> <p>Example</p> <pre><code>var bounds = map.getBounds();\n</code></pre>"},{"location":"sdk-web-gl/map/#getcanvas","title":"getCanvas()","text":"<p>Returns the map's canvas element.</p> <p>Return</p> <p>HTMLCanvasElement: The map's canvas element.</p> <p>Related</p> <ul> <li>Measure distances</li> <li>Display a popup on hover</li> <li>Center the map on a clicked symbol</li> </ul>"},{"location":"sdk-web-gl/map/#getcanvascontainer","title":"getCanvasContainer()","text":"<p>Returns the HTML element containing the map's canvas element.</p> <p>If you want to add non-GL overlays to the map, you should append them to this element.</p> <p>This is the element to which event bindings for map interactivity (such as panning and zooming) are attached. It will receive bubbled events from child elements such as the canvas, but not from map controls.</p> <p>Returns</p> <p>HTMLElement: The container of the map's canvas .</p> <p>Related</p> <p>Create a draggable point</p>"},{"location":"sdk-web-gl/map/#getcenter","title":"getCenter()","text":"<p>Returns the map's geographical centerpoint.</p> <p>Returns</p> <p>LngLat: The map's geographical centerpoint.</p> <p>Example</p> <pre><code>// return a LngLat object such as {lng: 0, lat: 0}\nvar center = map.getCenter();\n// access longitude and latitude values directly\nvar {lng, lat} = map.getCenter();\n</code></pre>"},{"location":"sdk-web-gl/map/#getcontainer","title":"getContainer()","text":"<p>Returns the map's containing HTML element.</p> <p>Returns</p> <p>HTMLElement: The map's container.</p>"},{"location":"sdk-web-gl/map/#getfeaturestate","title":"getFeatureState()","text":"<p>Gets the state of a feature. A feature's state is a set of user-defined key-value pairs that are assigned to a feature at runtime. Features are identified by their feature.id attribute, which can be any number or string.</p> <p>Note: To access the values in a feature's state object for the purposes of styling the feature, use the feature-state expression.</p> <p>Parameters</p> <p>feature(Object)Feature identifier. Feature objects returned from Map#queryRenderedFeatures or event handlers can be used as feature identifiers.</p> Name Description feature.id(string | number) Unique id of the feature. feature.sourcestring The id of the vector or GeoJSON source for the feature. feature.sourceLayerstring? (optional) For vector tile sources, sourceLayer is required. <p>Returns</p> <p>Object: The state of the feature: a set of key-value pairs that was assigned to the feature at runtime.</p> <p>Example</p> <pre><code>// When the mouse moves over the `my-layer` layer,\n// get the feature state for the feature under the mouse\nmap.on('mousemove', 'my-layer', function(e) {\n    if (e.features.length &gt; 0) {\n        map.getFeatureState({\n            source: 'my-source',\n            sourceLayer: 'my-source-layer',\n            id: e.features[0].id\n        });\n    }\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#getfilterlayerid","title":"getFilter(layerId)","text":"<p>Returns the filter applied to the specified style layer.</p> <p>Parameters</p> <p>layerId(string)The ID of the style layer whose filter to get.</p> <p>Returns</p> <p>Array: The layer's filter.</p>"},{"location":"sdk-web-gl/map/#getlayerid","title":"getLayer(id)","text":"<p>Returns the layer with the specified ID in the map's style.</p> <p>Parameters</p> <p>id(string)The ID of the layer to get.</p> <p>Returns</p> <p>StyleLayer: The layer with the specified ID, or undefined if the ID corresponds to no existing layers.</p> <p>Example</p> <pre><code>var stateDataLayer = map.getLayer('state-data');\n</code></pre> <p>Related</p> <ul> <li> <p>Filter symbols by toggling a list</p> </li> <li> <p>Filter symbols by text input</p> </li> </ul>"},{"location":"sdk-web-gl/map/#getlayoutpropertylayeridname","title":"getLayoutProperty(layerId,name)","text":"<p>Returns the value of a layout property in the specified style layer.</p> <p>Parameters</p> <ul> <li>layerId(string)The ID of the layer to get the layout property from.</li> <li>name(string)The name of the layout property to get.</li> </ul> <p>Returns</p> <p>any: The value of the specified layout property.</p>"},{"location":"sdk-web-gl/map/#getlight","title":"getLight()","text":"<p>Returns the value of the light object.</p> <p>Returns</p> <p>Object: light Light properties of the style.</p>"},{"location":"sdk-web-gl/map/#getmaxbounds","title":"getMaxBounds()","text":"<p>Returns the maximum geographical bounds the map is constrained to, or null if none set.</p> <p>Returns</p> <p>(LngLatBounds | null): The map object.</p> <p>Example</p> <pre><code>var maxBounds = map.getMaxBounds();\n</code></pre>"},{"location":"sdk-web-gl/map/#getmaxpitch","title":"getMaxPitch()","text":"<p>Returns the map's maximum allowable pitch.</p> <p>Returns</p> <p>number: maxPitch</p>"},{"location":"sdk-web-gl/map/#getmaxzoom","title":"getMaxZoom()","text":"<p>Returns the map's maximum allowable zoom level.</p> <p>Returns</p> <p>number: maxZoom</p> <p>Example</p> <pre><code>var maxZoom = map.getMaxZoom();\n</code></pre>"},{"location":"sdk-web-gl/map/#getminpitch","title":"getMinPitch()","text":"<p>Returns the map's minimum allowable pitch.</p> <p>Returns</p> <p>number: minPitch</p>"},{"location":"sdk-web-gl/map/#getminzoom","title":"getMinZoom()","text":"<p>Returns the map's minimum allowable zoom level.</p> <p>Returns</p> <p>number: minZoom</p> <p>Example</p> <pre><code>var minZoom = map.getMinZoom();\n</code></pre>"},{"location":"sdk-web-gl/map/#getpadding","title":"getPadding()","text":"<p>Returns the current padding applied around the map viewport.</p> <p>Returns</p> <p>PaddingOptions: The current padding around the map viewport.</p>"},{"location":"sdk-web-gl/map/#getpaintpropertylayerid-name","title":"getPaintProperty(layerId, name)","text":"<p>Returns the value of a paint property in the specified style layer.</p> <p>Parameters</p> <p>layerId(string)The ID of the layer to get the paint property from.</p> <p>name(string)The name of a paint property to get.</p> <p>Returns</p> <p>any: The value of the specified paint property.</p>"},{"location":"sdk-web-gl/map/#getpitch","title":"getPitch","text":"<p>Returns the map's current pitch (tilt).</p> <p>Returns</p> <p>number: The map's current pitch, measured in degrees away from the plane of the screen.</p>"},{"location":"sdk-web-gl/map/#getpixelratio","title":"getPixelRatio()","text":"<p>Returns the map's pixel ratio.</p> <p>Returns</p> <p>number: The pixel ratio.</p>"},{"location":"sdk-web-gl/map/#getrenderworldcopies","title":"getRenderWorldCopies()","text":"<p>Returns the state of renderWorldCopies. If true, multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to false:</p> <p>When the map is zoomed out far enough that a single representation of the world does not fill the map's entire container, there will be blank space beyond 180 and -180 degrees longitude.</p> <p>Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the map and the other on the left edge of the map) at every zoom level.</p> <p>Returns</p> <p>boolean: renderWorldCopies</p> <p>Example</p> <pre><code>var worldCopiesRendered = map.getRenderWorldCopies();\n</code></pre> <p>Related</p> <p>Render world copies</p>"},{"location":"sdk-web-gl/map/#getsourceid","title":"getSource(id)","text":"<p>Returns the source with the specified ID in the map's style.</p> <p>This method is often used to update a source using the instance members for the relevant source type as defined in Sources. For Example, setting the data for a GeoJSON source or updating the url and coordinates of an image source.</p> <p>Parameters</p> <p>id(string)The ID of the source to get.</p> <p>Returns</p> <p>(Source | undefined): The style source with the specified ID or undefined if the ID corresponds to no existing sources. The shape of the object varies by source type. A list of options for each source type is available on the vietmap Style Specification's Sources page.</p> <p>Example</p> <pre><code>var sourceObject = map.getSource('points');\n</code></pre> <p>Related</p> <ul> <li> <p>Create a draggable point</p> </li> <li> <p>Animate a point</p> </li> <li> <p>Add live realtime data</p> </li> </ul>"},{"location":"sdk-web-gl/map/#getstyle","title":"getStyle()","text":"<p>Returns the map's vietmap style object, a JSON object which can be used to recreate the map's style.</p> <p>Returns</p> <p>Object: The map's style JSON object.</p> <p>Example</p> <pre><code>var styleJson = map.getStyle();\n</code></pre>"},{"location":"sdk-web-gl/map/#getzoom","title":"getZoom()","text":"<p>Returns the map's current zoom level.</p> <p>Returns</p> <p>number: The map's current zoom level.</p> <p>Example</p> <pre><code>map.getZoom();\n</code></pre>"},{"location":"sdk-web-gl/map/#hascontrolcontrol","title":"hasControl(control)","text":"<p>Checks if a control exists on the map.</p> <p>Parameters</p> <p>control(IControl)The IControl to check.</p> <p>Returns</p> <p>boolean: True if map contains control.</p> <p>Example</p> <pre><code>// Define a new navigation control.\nvar navigation = new vietmapgl.NavigationControl();\n// Add zoom and rotation controls to the map.\nmap.addControl(navigation);\n// Check that the navigation control exists on the map.\nmap.hasControl(navigation);\n</code></pre>"},{"location":"sdk-web-gl/map/#hasimageid","title":"hasImage(id)","text":"<p>Check whether or not an image with a specific ID exists in the style. This checks both images in the style's original sprite and any images that have been added at runtime using Map#addImage.</p> <p>Parameters</p> <p>id(string)The ID of the image.</p> <p>Returns</p> <p>boolean: A Boolean indicating whether the image exists.</p> <p>Example</p> <pre><code>// Check if an image with the ID 'cat' exists in\n// the style's sprite.\nvar catIconExists = map.hasImage('cat');\n</code></pre>"},{"location":"sdk-web-gl/map/#ismoving","title":"isMoving()","text":"<p>Returns true if the map is panning, zooming, rotating, or pitching due to a camera animation or user gesture.</p> <p>Returns</p> <p>boolean: True if the map is moving.</p> <p>Example</p> <pre><code>var isMoving = map.isMoving();\n</code></pre>"},{"location":"sdk-web-gl/map/#isrotating","title":"isRotating()","text":"<p>Returns true if the map is rotating due to a camera animation or user gesture.</p> <p>Returns</p> <p>boolean: True if the map is rotating.</p> <p>Example</p> <pre><code>map.isRotating();\n</code></pre>"},{"location":"sdk-web-gl/map/#issourceloadedid","title":"isSourceLoaded(id)","text":"<p>Returns a Boolean indicating whether the source is loaded. Returns true if the source with the given ID in the map's style has no outstanding network requests, otherwise false.</p> <p>Parameters</p> <p>id(string)The ID of the source to be checked.</p> <p>Returns</p> <p>boolean: A Boolean indicating whether the source is loaded.</p> <p>Example</p> <pre><code>var sourceLoaded = map.isSourceLoaded('bathymetry-data');\n</code></pre>"},{"location":"sdk-web-gl/map/#isstyleloaded","title":"isStyleLoaded()","text":"<p>Returns a Boolean indicating whether the map's style is fully loaded.</p> <p>Returns</p> <p>boolean: A Boolean indicating whether the style is fully loaded.</p> <p>Example</p> <pre><code>var styleLoadStatus = map.isStyleLoaded();\n</code></pre>"},{"location":"sdk-web-gl/map/#iszooming","title":"isZooming()","text":"<p>Returns true if the map is zooming due to a camera animation or user gesture.</p> <p>Returns</p> <p>boolean: True if the map is zooming.</p> <p>Example</p> <pre><code>var isZooming = map.isZooming();\n</code></pre>"},{"location":"sdk-web-gl/map/#jumptooptions-eventdata","title":"jumpTo(options, eventData?)","text":"<p>Changes any combination of center, zoom, bearing, and pitch, without an animated transition. The map will retain its current values for any details not specified in options.</p> <p>Parameters</p> <ul> <li> <p>options(JumpToOptions)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// jump to coordinates at current zoom\nmap.jumpTo({center: [0, 0]});\n// jump with zoom, pitch, and bearing options\nmap.jumpTo({\ncenter: [0, 0],\nzoom: 8,\npitch: 45,\nbearing: 90\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Jump to a series of locations</p> </li> <li> <p>Update a feature in realtime</p> </li> </ul>"},{"location":"sdk-web-gl/map/#keyboard","title":"keyboard","text":"<p>The map's KeyboardHandler, which allows the user to zoom, rotate, and pan the map using keyboard shortcuts. Find more details and examples using keyboard in the KeyboardHandler section.</p>"},{"location":"sdk-web-gl/map/#listimages","title":"listImages()","text":"<p>Returns an Array of strings containing the IDs of all images currently available in the map. This includes both images from the style's original sprite and any images that have been added at runtime using Map#addImage.</p> <p>Returns</p> <p>Array: An Array of strings containing the names of all  sprites/images currently available in the map.</p> <p>Example</p> <pre><code>var allImages = map.listImages();\n</code></pre>"},{"location":"sdk-web-gl/map/#loaded","title":"loaded()","text":"<p>Returns a Boolean indicating whether the map is fully loaded.</p> <p>Returns false if the style is not yet fully loaded, or if there has been a change to the sources or style that has not yet fully loaded.</p> <p>Returns</p> <p>boolean: A Boolean indicating whether the map is fully loaded.</p>"},{"location":"sdk-web-gl/map/#loadimageurl-callback","title":"loadImage(url, callback)","text":"<p>Load an image from an external URL to be used with Map#addImage. External domains must support CORS.</p> <p>Parameters</p> <p>url(string)The URL of the image file. Image file must be in png, webp, or jpg format.</p> <p>callback(Callback&lt;(HTMLImageElement | ImageBitmap)&gt;)Expecting callback(error, data) . Called when the image has loaded or with an error argument if there is an error.</p> <p>Example</p> <pre><code>// Load an image from an external URL.\nmap.loadImage('http://placekitten.com/50/50', function(error, image) {\nif (error) throw error;\n// Add the loaded image to the style's sprite with the ID 'kitten'.\nmap.addImage('kitten', image);\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Add an icon to the map</p> </li> <li> <p>moveLayer(id, beforeId?)</p> </li> <li> <p>Moves a layer to a different z-position.</p> </li> </ul> <p>Parameters</p> <ul> <li>id(string)The ID of the layer to move.</li> <li>beforeId(string?)The ID of an existing layer to insert the new layer before. When viewing the map, the id layer will appear beneath the beforeId layer. If beforeId is omitted, the layer will be appended to the end of the layers array and appear above all other layers on the map.</li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Move a layer with ID 'polygon' before the layer with ID 'country-label'. The `polygon` layer will appear beneath the `country-label` layer on the map.\nmap.moveLayer('polygon', 'country-label');\n</code></pre>"},{"location":"sdk-web-gl/map/#offtype-listener","title":"off(type, listener)","text":"<p>Removes an event listener previously added with Map#on.</p> <p>Parameters</p> <p>type(string)The event type previously used to install the listener.</p> <p>listener(Function)The function previously installed as a listener.</p> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#offtype-layer-listener-layeridorlistener","title":"off(type, layer, listener, layerIdOrListener)","text":"<p>Removes an event listener for layer-specific events previously added with Map#on.</p> <p>Parameters</p> <ul> <li> <p>type(string)The event type previously used to install the listener.</p> </li> <li> <p>layer(string)</p> </li> <li> <p>listener(Function)The function previously installed as a listener.</p> </li> <li> <p>layerIdOrListener(string)The layer ID or listener previously used to install the listener.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#ontype-layer-listener-layeridorlistener","title":"on(type, layer, listener, layerIdOrListener)","text":"<p>Adds a listener for events of a specified type, optionally limited to features in a specified style layer.</p> <p>Parameters</p> <p>type(string)The event type to listen for. Events compatible with the optional layerId parameter are triggered when the cursor enters a visible portion of the specified layer from outside that layer or outside the map canvas.</p> Event Compatible with layerId mousedown yes mouseup yes mouseover yes mouseout yes mousemove yes mouseenter yes(required) mouseleave yes(required) click yes dbclick yes contextmenu yes touchstart yes touchend yes touchcancel yes wheel resize remove touchmove movestart move moveend dragstart drag dragend zoomstart zoom zoomend rotatestart rotate rotateend pitchstart pitch pitchend boxzoomstart boxzoomend boxzoomcancel webglcontextlost webglcontextrestored load render idle error data styledata sourcedata dataloading styledataloading sourcedataloading styleimagemissing dataabort sourcedataabort <ul> <li> <p>layer(string)</p> </li> <li> <p>listener(Function)The function to be called when the event is fired.</p> </li> <li> <p>layerIdOrListener((string | Listener))The ID of a style layer or a listener if no ID is provided. Event will only be triggered if its location is within a visible feature in this layer. The event will have a features property containing an array of the matching features. If layerIdOrListener is not supplied, the event will not have a features property. Please note that many event types are not compatible with the optional layerIdOrListener parameter.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Set an event listener that will fire\n// when the map has finished loading\nmap.on('load', function() {\n// Once the map has finished loading,\n// add a new layer\nmap.addLayer({\nid: 'points-of-interest',\nsource: {\ntype: 'vector',\nurl: 'http://192.168.10.107:8080/sdk/docs/style-spec/'\n},\n'source-layer': 'poi_label',\ntype: 'circle',\npaint: {\n// vietmap Style Specification paint properties\n},\nlayout: {\n// vietmap Style Specification layout properties\n}\n});\n});\n\n\n// Set an event listener that will fire\n// when a feature on the countries layer of the map is clicked\nmap.on('click', 'countries', function(e) {\nnew vietmapgl.Popup()\n.setLngLat(e.lngLat)\n.setHTML(`Country name: ${e.features[0].properties.name}`)\n.addTo(map);\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Display popup on click</p> </li> <li> <p>Center the map on a clicked symbol</p> </li> <li> <p>Create a hover effect</p> </li> <li> <p>Create a draggable marker</p> </li> </ul>"},{"location":"sdk-web-gl/map/#oncetype-listener","title":"once(type, listener)","text":"<p>Adds a listener that will be called only once to a specified event type.</p> <p>Parameters</p> <ul> <li> <p>type(string)The event type to add a listener for.</p> </li> <li> <p>listener(Function)The function to be called when the event is fired. The listener function is called with the data object passed to fire , extended with target and type properties.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#oncetype-layer-listener-layeridorlistener","title":"once(type, layer, listener, layerIdOrListener)","text":"<p>Adds a listener that will be called only once to a specified event type occurring on features in a specified style layer.</p> <p>Parameters</p> <ul> <li> <p>type(string)The event type to listen for; one of 'mousedown' , 'mouseup' , 'click' , 'dblclick' , 'mousemove' , 'mouseenter' , 'mouseleave' , 'mouseover' , 'mouseout' , 'contextmenu' , 'touchstart' , 'touchend' , or 'touchcancel' . mouseenter and mouseover events are triggered when the cursor enters a visible portion of the specified layer from outside that layer or outside the map canvas. mouseleave and mouseout events are triggered when the cursor leaves a visible portion of the specified layer, or leaves the map canvas.</p> </li> <li> <p>layer(string)</p> </li> <li> <p>listener(Function)The function to be called when the event is fired.</p> </li> <li> <p>layerIdOrListener(string)The ID of a style layer or a listener if no ID is provided. Only events whose location is within a visible feature in this layer will trigger the listener. The event will have a features property containing an array of the matching features.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#panbyoffset-options-eventdata","title":"panBy(offset, options?, eventData?)","text":"<p>Pans the map by the specified offset.</p> <p>Parameters</p> <ul> <li> <p>offset(PointLike)x and y coordinates by which to pan the map.</p> </li> <li> <p>options(AnimationOptions?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Related</p> <ul> <li> <p>Navigate the map with game-like controls</p> </li> <li> <p>panTo(lnglat, options?, eventData?)</p> </li> <li> <p>Pans the map to the specified location with an animated transition.</p> </li> </ul> <p>Parameters</p> <ul> <li> <p>lnglat(LngLatLike)The location to pan the map to.</p> </li> <li> <p>options(AnimationOptions?)Options describing the destination and animation of the transition.</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.panTo([-74, 38]);\n\n\n// Specify that the panTo animation should last 5000 milliseconds.\nmap.panTo([-74, 38], {duration: 5000});\n</code></pre> <p>Related</p> <p>Update a feature in realtime</p>"},{"location":"sdk-web-gl/map/#projectlnglat","title":"project(lnglat)","text":"<p>Returns a Point representing pixel coordinates, relative to the map's container, that correspond to the specified geographical location.</p> <p>Parameters</p> <p>lnglat(LngLatLike)The geographical location to project.</p> <p>Returns</p> <p>Point: The Point corresponding to lnglat , relative to the map's container .</p> <p>Example</p> <pre><code>var coordinate = [-122.420679, 37.772537];\nvar point = map.project(coordinate);\n</code></pre>"},{"location":"sdk-web-gl/map/#queryrenderedfeaturesgeometry-option","title":"queryRenderedFeatures(geometry?, option?)","text":"<p>Returns an array of MapGeoJSONFeature objects representing visible features that satisfy the query parameters.</p> <p>Parameters</p> <p>geometry((PointLike | Array)?) The geometry of the query region: either a single point or southwest and northeast points describing a bounding box. Omitting this parameter (i.e. calling Map#queryRenderedFeatures with zero arguments, or with only a options argument) is equivalent to passing a bounding box encompassing the entire map viewport.</p> <p>options(Object?)Options object.</p> Name Description options.layersArray? An array of style layer IDs for the query to inspect. Only features within these layers will be returned. If this parameter is undefined, all layers will be checked. options.filterArray? TA filter to limit query results. options.validatebooleandefault: true Whether to check if the [options.filter] conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function. <p>Returns</p> <p>Array: An array of MapGeoJSONFeature objects. The properties value of each returned feature object contains the properties of its source feature. For GeoJSON sources, only string and numeric property values are supported (i.e. null, Array, and Object values are not supported).</p> <p>Each feature includes top-level layer, source, and sourceLayer properties. The layer property is an object representing the style layer to which the feature belongs. Layout and paint properties in this object contain values which are fully evaluated for the given zoom level and feature.</p> <p>Only features that are currently rendered are included. Some features will not be included, like:</p> <p>Features from layers whose visibility property is \"none\". Features from layers whose zoom range excludes the current zoom level. Symbol features that have been hidden due to text or icon collision. Features from all other layers are included, including features that may have no visible contribution to the rendered result; for example, because the layer's opacity or color alpha component is set to 0.</p> <p>The topmost rendered feature appears first in the returned array, and subsequent features are sorted by descending z-order. Features that are rendered multiple times (due to wrapping across the antimeridian at low zoom levels) are returned only once (though subject to the following caveat).</p> <p>Because features come from tiled vector data or GeoJSON data that is converted to tiles internally, feature geometries may be split or duplicated across tile boundaries and, as a result, features may appear multiple times in query results. For example, suppose there is a highway running through the bounding rectangle of a query. The results of the query will be those parts of the highway that lie within the map tiles covering the bounding rectangle, even if the highway extends into other tiles, and the portion of the highway within each map tile will be returned as a separate feature. Similarly, a point feature near a tile boundary may appear in multiple tiles due to tile buffering.</p> <p>Example</p> <pre><code>// Find all features at a point\nvar features = map.queryRenderedFeatures(\n[20, 35],\n{ layers: ['my-layer-name'] }\n);\n\n\n// Find all features within a static bounding box\nvar features = map.queryRenderedFeatures(\n[[10, 20], [30, 50]],\n{ layers: ['my-layer-name'] }\n);\n\n\n// Find all features within a bounding box around a point\nvar width = 10;\nvar height = 20;\nvar features = map.queryRenderedFeatures([\n[point.x - width / 2, point.y - height / 2],\n[point.x + width / 2, point.y + height / 2]\n], { layers: ['my-layer-name'] });\n\n\n// Query all rendered features from a single layer\nvar features = map.queryRenderedFeatures({ layers: ['my-layer-name'] });\n</code></pre> <p>Related</p> <p>Get features under the mouse pointer</p>"},{"location":"sdk-web-gl/map/#querysourcefeaturessourceid-parameters","title":"querySourceFeatures(sourceId, parameters?)","text":"<p>Returns an array of MapGeoJSONFeature objects representing features within the specified vector tile or GeoJSON source that satisfy the query parameters.</p> <p>Parameters</p> <ul> <li> <p>sourceId(string)The ID of the vector tile or GeoJSON source to query.</p> </li> <li> <p>parameters(Object?)Options object.</p> </li> </ul> Name Description parameters.sourceLayerstring? The name of the source layer to query.\u00a0For vector tile sources, this parameter is required.\u00a0For GeoJSON sources, it is ignored. parameters.filterArray? A\u00a0filter\u00a0to limit query results. parameters.validatebooleandefault:\u00a0true Whether to check if the [parameters.filter] conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function. <p>Returns</p> <p>Array: An array of MapGeoJSONFeature objects. The properties value of each returned feature object contains the properties of its source feature. For GeoJSON sources, only string and numeric property values are supported (i.e. null, Array, and Object values are not supported).</p> <p>Each feature includes top-level layer, source, and sourceLayer properties. The layer property is an object representing the style layer to which the feature belongs. Layout and paint properties in this object contain values which are fully evaluated for the given zoom level and feature.</p> <p>Only features that are currently rendered are included. Some features will not be included, like:</p> <p>Features from layers whose visibility property is \"none\". Features from layers whose zoom range excludes the current zoom level. Symbol features that have been hidden due to text or icon collision. Features from all other layers are included, including features that may have no visible contribution to the rendered result; for example, because the layer's opacity or color alpha component is set to 0.</p> <p>The topmost rendered feature appears first in the returned array, and subsequent features are sorted by descending z-order. Features that are rendered multiple times (due to wrapping across the antimeridian at low zoom levels) are returned only once (though subject to the following caveat).</p> <p>Because features come from tiled vector data or GeoJSON data that is converted to tiles internally, feature geometries may be split or duplicated across tile boundaries and, as a result, features may appear multiple times in query results. For example, suppose there is a highway running through the bounding rectangle of a query. The results of the query will be those parts of the highway that lie within the map tiles covering the bounding rectangle, even if the highway extends into other tiles, and the portion of the highway within each map tile will be returned as a separate feature. Similarly, a point feature near a tile boundary may appear in multiple tiles due to tile buffering.</p> <p>Example</p> <pre><code>// Find all features in one source layer in a vector source\nvar features = map.querySourceFeatures('your-source-id', {\nsourceLayer: 'your-source-layer'\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#redraw","title":"redraw()","text":"<p>Force a synchronous redraw of the map.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.redraw();\n</code></pre>"},{"location":"sdk-web-gl/map/#remove","title":"remove()","text":"<p>Clean up and release all internal resources associated with this map.</p> <p>This includes DOM elements, event bindings, web workers, and WebGL resources.</p> <p>Use this method when you are done using the map and wish to ensure that it no longer consumes browser resources. Afterwards, you must not call any other methods on the map.</p>"},{"location":"sdk-web-gl/map/#removecontrolcontrol","title":"removeControl(control)","text":"<p>Removes the control from the map.</p> <p>Parameters</p> <p>control(IControl)The IControl to remove.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Define a new navigation control.\nvar navigation = new vietmapgl.NavigationControl();\n// Add zoom and rotation controls to the map.\nmap.addControl(navigation);\n// Remove zoom and rotation controls from the map.\nmap.removeControl(navigation);\n</code></pre>"},{"location":"sdk-web-gl/map/#removefeaturesstatetarget-key","title":"removeFeaturesState(target, key)","text":"<p>Removes the state of a feature, setting it back to the default behavior. If only a target.source is specified, it will remove the state for all features from that source. If target.id is also specified, it will remove all keys for that feature's state. If key is also specified, it removes only that key from that feature's state. Features are identified by their feature.id attribute, which can be any number or string.</p> <p>Parameters</p> <p>target(Object)Identifier of where to remove state. It can be a source, a feature, or a specific key of feature. Feature objects returned from Map#queryRenderedFeatures or event handlers can be used as feature identifiers.</p> Name Description target.id(string number) target.sourcestring The id of the vector or GeoJSON source for the feature. target.sourceLayerstring? (optional)\u00a0For vector tile sources,\u00a0sourceLayer\u00a0is required. <p>key(string)(optional) The key in the feature state to reset.</p> <p>Example</p> <pre><code>// Reset the entire state object for all features\n// in the `my-source` source\nmap.removeFeatureState({\nsource: 'my-source'\n});\n\n\n// When the mouse leaves the `my-layer` layer,\n// reset the entire state object for the\n// feature under the mouse\nmap.on('mouseleave', 'my-layer', function(e) {\nmap.removeFeatureState({\nsource: 'my-source',\nsourceLayer: 'my-source-layer',\nid: e.features[0].id\n});\n});\n\n\n// When the mouse leaves the `my-layer` layer,\n// reset only the `hover` key-value pair in the\n// state for the feature under the mouse\nmap.on('mouseleave', 'my-layer', function(e) {\nmap.removeFeatureState({\nsource: 'my-source',\nsourceLayer: 'my-source-layer',\nid: e.features[0].id\n}, 'hover');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#removeimageid","title":"removeImage(id)","text":"<p>Remove an image from a style. This can be an image from the style's original sprite or any images that have been added at runtime using Map#addImage.</p> <p>Parameters</p> <p>id(string)The ID of the image.</p> <p>Example</p> <pre><code>// If an image with the ID 'cat' exists in\n// the style's sprite, remove it.\nif (map.hasImage('cat')) map.removeImage('cat');\n</code></pre>"},{"location":"sdk-web-gl/map/#removelayerid","title":"removeLayer(id)","text":"<p>Removes the layer with the given ID from the map's style.</p> <p>If no such layer exists, an error event is fired.</p> <p>Parameters</p> <p>id(string)id of the layer to remove</p> <p>Example</p> <pre><code>// If a layer with ID 'state-data' exists, remove it.\nif (map.getLayer('state-data')) map.removeLayer('state-data');\n</code></pre>"},{"location":"sdk-web-gl/map/#removesourceid","title":"removeSource(id)","text":"<p>Removes a source from the map's style.</p> <p>Parameters</p> <p>id(string)The ID of the source to remove.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.removeSource('bathymetry-data');\n</code></pre>"},{"location":"sdk-web-gl/map/#repaint","title":"repaint","text":"<p>Gets and sets a Boolean indicating whether the map will continuously repaint. This information is useful for analyzing performance.</p>"},{"location":"sdk-web-gl/map/#resetnorthoption-eventdata","title":"resetNorth(option?, eventData?)","text":"<p>Rotates the map so that north is up (0\u00b0 bearing), with an animated transition.</p> <p>Parameters</p> <ul> <li> <p>options(AnimationOptions?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#resetnorthpitchoption-eventdata","title":"resetNorthPitch(option?, eventData?)","text":"<p>Rotates and pitches the map so that north is up (0\u00b0 bearing) and pitch is 0\u00b0, with an animated transition.</p> <p>Parameters</p> <p>options(AnimationOptions?)Options object</p> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#resizeeventdata","title":"resize(eventData?)","text":"<p>Resizes the map according to the dimensions of its container element.</p> <p>Checks if the map container size changed and updates the map if it has changed. This method must be called after the map's container is resized programmatically or when the map is shown after being initially hidden with CSS.</p> <p>Parameters</p> <p>eventData(any?)Additional properties to be passed to movestart , move , resize , and moveend events that get triggered as a result of resize. This can be useful for differentiating the source of an event (for example, user-initiated or programmatically-triggered events).</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Resize the map when the map container is shown\n// after being initially hidden with CSS.\nvar mapDiv = document.getElementById('map');\nif (mapDiv.style.visibility === true) map.resize();\n</code></pre>"},{"location":"sdk-web-gl/map/#rotatetobearing-option-eventdata","title":"rotateTo(bearing, option?, eventData?)","text":"<p>Rotates the map to the specified bearing, with an animated transition. The bearing is the compass direction that is \"up\"; for example, a bearing of 90\u00b0 orients the map so that east is up.</p> <p>Parameters</p> <ul> <li> <p>bearing(number)The desired bearing.</p> </li> <li> <p>options(AnimationOptions?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#scrollzoom","title":"scrollZoom","text":"<p>The map's ScrollZoomHandler, which implements zooming in and out with a scroll wheel or trackpad. Find more details and examples using scrollZoom in the ScrollZoomHandler section.</p>"},{"location":"sdk-web-gl/map/#setbearingbearing-eventdata","title":"setBearing(bearing, eventData?)","text":"<p>Sets the map's bearing (rotation). The bearing is the compass direction that is \"up\"; for example, a bearing of 90\u00b0 orients the map so that east is up.</p> <p>Equivalent to jumpTo({bearing: bearing}).</p> <p>Parameters</p> <ul> <li>bearing(number)The desired bearing.</li> <li>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// rotate the map to 90 degrees\nmap.setBearing(90);\n</code></pre>"},{"location":"sdk-web-gl/map/#setcentercenter-eventdata","title":"setCenter(center, eventData?)","text":"<p>Sets the map's geographical centerpoint. Equivalent to jumpTo({center: center}).</p> <p>Parameters</p> <p>center(LngLatLike)The centerpoint to set.</p> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setCenter([-74, 38]);\n</code></pre>"},{"location":"sdk-web-gl/map/#setfeaturesstatefeature-state","title":"setFeaturesState(feature, state)","text":"<p>Sets the state of a feature. A feature's state is a set of user-defined key-value pairs that are assigned to a feature at runtime. When using this method, the state object is merged with any existing key-value pairs in the feature's state. Features are identified by their feature.id attribute, which can be any number or string.</p> <p>This method can only be used with sources that have a feature.id attribute. The feature.id attribute can be defined in three ways:</p> <p>For vector or GeoJSON sources, including an id attribute in the original data file.</p> <p>For vector or GeoJSON sources, using the promoteId option at the time the source is defined.</p> <p>For GeoJSON sources, using the generateId option to auto-assign an id based on the feature's index in the source data. If you change feature data using map.getSource('some id').setData(..), you may need to re-apply state taking into account updated id values.</p> <p>Note: You can use the feature-state expression to access the values in a feature's state object for the purposes of styling.</p> <p>Parameters</p> <p>feature(Object)Feature identifier. Feature objects returned from Map#queryRenderedFeatures or event handlers can be used as feature identifiers.</p> Name Description feature.id(string,number) Unique id of the feature. feature.sourcestring The id of the vector or GeoJSON source for the feature. feature.sourceLayerstring? (optional)\u00a0For vector tile sources,\u00a0sourceLayer\u00a0is required. <p>state(Object)A set of key-value pairs. The values should be valid JSON types.</p> <p>Example</p> <pre><code>// When the mouse moves over the `my-layer` layer, update\n// the feature state for the feature under the mouse\nmap.on('mousemove', 'my-layer', function(e) {\nif (e.features.length &gt; 0) {\nmap.setFeatureState({\nsource: 'my-source',\nsourceLayer: 'my-source-layer',\nid: e.features[0].id,\n}, {\nhover: true\n});\n}\n});\n</code></pre> <p>Related</p> <ul> <li>Create a hover effect</li> </ul>"},{"location":"sdk-web-gl/map/#setfilterlayerid-filter-options","title":"setFilter(layerId, filter, options = {})","text":"<p>Sets the filter for the specified style layer.</p> <p>Filters control which features a style layer renders from its source. Any feature for which the filter expression evaluates to true will be rendered on the map. Those that are false will be hidden.</p> <p>Use setFilter to show a subset of your source data.</p> <p>To clear the filter, pass null or undefined as the second parameter.</p> <p>Parameters</p> <p>layerId(string)The ID of the layer to which the filter will be applied. filter((Array | null | undefined))The filter, conforming to the vietmap Style Specification's filter definition . If null or undefined is provided, the function removes any existing filter from the layer. options(Object?)(default {})Options object.</p> Name Description options.validatebooleandefault:\u00a0true Whether to check if the filter conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// display only features with the 'name' property 'USA'\nmap.setFilter('my-layer', ['==', ['get', 'name'], 'USA']);\n\n\n// display only features with five or more 'available-spots'\nmap.setFilter('bike-docks', ['&gt;=', ['get', 'available-spots'], 5]);\n\n\n// remove the filter for the 'bike-docks' style layer\nmap.setFilter('bike-docks', null);\n</code></pre> <p>Related</p> <ul> <li>Create a timeline animation</li> </ul>"},{"location":"sdk-web-gl/map/#setlayerzoomrangelayerid-minzoom-maxzoom","title":"setLayerZoomRange(layerId, minzoom, maxzoom)","text":"<p>Sets the zoom extent for the specified style layer. The zoom extent includes the minimum zoom level and maximum zoom level) at which the layer will be rendered.</p> <p>Note: For style layers using vector sources, style layers cannot be rendered at zoom levels lower than the minimum zoom level of the source layer because the data does not exist at those zoom levels. If the minimum zoom level of the source layer is higher than the minimum zoom level defined in the style layer, the style layer will not be rendered at all zoom levels in the zoom range.</p> <p>Parameters</p> <ul> <li> <p>layerId(string)The ID of the layer to which the zoom extent will be applied.</p> </li> <li> <p>minzoom(number)The minimum zoom to set (0-24).</p> </li> <li> <p>maxzoom(number)The maximum zoom to set (0-24).</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setLayerZoomRange('my-layer', 2, 5);\n</code></pre>"},{"location":"sdk-web-gl/map/#setlayoutpropertylayerid-name-value-options","title":"setLayoutProperty(layerId, name, value, options = {})","text":"<p>Sets the value of a layout property in the specified style layer.</p> <p>Parameters</p> <ul> <li> <p>layerId(string)The ID of the layer to set the layout property in.</p> </li> <li> <p>name(string)The name of the layout property to set.</p> </li> <li> <p>value(any)The value of the layout property. Must be of a type appropriate for the property, as defined in the vietmap Style Specification .</p> </li> </ul> Name Description options(Object?)(default {}) Options object. options.validatebooleandefault:\u00a0true Options object. <p>Whether to check if\u00a0value\u00a0conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setLayoutProperty('my-layer', 'visibility', 'none');\n</code></pre>"},{"location":"sdk-web-gl/map/#setlightlight-options","title":"setLight(light, options = {})","text":"<p>Sets the any combination of light values.</p> <p>Parameters * light(LightSpecification)Light properties to set. Must conform to the vietmap Style Specification . * options(Object?)(default {})Options object.</p> Name Description options.validatebooleandefault:\u00a0true Whether to check if\u00a0value\u00a0conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>var layerVisibility = map.getLayoutProperty('my-layer', 'visibility');\n</code></pre>"},{"location":"sdk-web-gl/map/#setmaxboundsbounds","title":"setMaxBounds(bounds)","text":"<p>Sets or clears the map's geographical bounds.</p> <p>Pan and zoom operations are constrained within these bounds. If a pan or zoom is performed that would display regions outside these bounds, the map will instead display a position and zoom level as close as possible to the operation's request while still remaining within the bounds.</p> <p>Parameters</p> <p>bounds((LngLatBoundsLike | null | undefined))The maximum bounds to set. If null or undefined is provided, the function removes the map's maximum bounds.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Define bounds that conform to the `LngLatBoundsLike` object.\nvar bounds = [\n[-74.04728, 40.68392], // [west, south]\n[-73.91058, 40.87764]  // [east, north]\n];\n// Set the map's max bounds.\nmap.setMaxBounds(bounds);\n</code></pre>"},{"location":"sdk-web-gl/map/#setmaxpitchmaxpitch","title":"setMaxPitch(maxPitch)","text":"<p>Sets or clears the map's maximum pitch. If the map's current pitch is higher than the new maximum, the map will pitch to the new maximum.</p> <p>Parameters</p> <p>maxPitch((number | null | undefined))The maximum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the vietmap project. If null or undefined is provided, the function removes the current maximum pitch (sets it to 60).</p> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#setmaxzoommaxzoom","title":"setMaxZoom(maxZoom)","text":"<p>Sets or clears the map's maximum zoom level. If the map's current zoom level is higher than the new maximum, the map will zoom to the new maximum.</p> <p>Parameters</p> <p>maxZoom((number | null | undefined))The maximum zoom level to set. If null or undefined is provided, the function removes the current maximum zoom (sets it to 22).</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setMaxZoom(18.75);\n</code></pre>"},{"location":"sdk-web-gl/map/#setminpitchminpitch","title":"setMinPitch(minPitch)","text":"<p>Sets or clears the map's minimum pitch. If the map's current pitch is lower than the new minimum, the map will pitch to the new minimum.</p> <p>Parameters</p> <p>minPitch((number | null | undefined))The minimum pitch to set (0-85). Values greater than 60 degrees are experimental and may result in rendering issues. If you encounter any, please raise an issue with details in the vietmap project. If null or undefined is provided, the function removes the current minimum pitch (i.e. sets it to 0).</p> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#setminzoomminzoom","title":"setMinZoom(minZoom)","text":"<p>Sets or clears the map's minimum zoom level. If the map's current zoom level is lower than the new minimum, the map will zoom to the new minimum.</p> <p>It is not always possible to zoom out and reach the set minZoom. Other factors such as map height may restrict zooming. For example, if the map is 512px tall it will not be possible to zoom below zoom 0 no matter what the minZoom is set to.</p> <p>Parameters</p> <p>minZoom((number | null | undefined))The minimum zoom level to set (-2 - 24). If null or undefined is provided, the function removes the current minimum zoom (i.e. sets it to -2).</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setMinZoom(12.25);\n</code></pre>"},{"location":"sdk-web-gl/map/#setpaddingpadding-eventdata","title":"setPadding(padding, eventData?)","text":"<p>Sets the padding in pixels around the viewport.</p> <p>Equivalent to jumpTo({padding: padding}).</p> <p>Parameters</p> <ul> <li>padding(PaddingOptions)The desired padding. Format: { left: number, right: number, top: number, bottom: number }</li> <li>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Sets a left padding of 300px, and a top padding of 50px\nmap.setPadding({ left: 300, top: 50 });\n</code></pre>"},{"location":"sdk-web-gl/map/#setpaintpropertylayerid-name-value-options","title":"setPaintProperty(layerId, name, value, options = {})","text":"<p>Sets the value of a paint property in the specified style layer.</p> <p>Parameters</p> <ul> <li> <p>layerId(string)The ID of the layer to set the paint property in.</p> </li> <li> <p>name(string)The name of the paint property to set.</p> </li> <li> <p>value(any)The value of the paint property to set. Must be of a type appropriate for the property, as defined in the vietmap Style Specification .</p> </li> </ul> <p>options(Object?)(default {})Options object.</p> Name Description options.validatebooleandefault:\u00a0true Whether to check if\u00a0value\u00a0conforms to the vietmap GL Style Specification. Disabling validation is a performance optimization that should only be used if you have previously validated the values you will be passing to this function. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setPaintProperty('my-layer', 'fill-color', '#faafee');\n</code></pre> <p>Related</p> <ul> <li> <p>Change a layer's color with buttons</p> </li> <li> <p>Create a draggable point</p> </li> </ul>"},{"location":"sdk-web-gl/map/#setpitchpitch-eventdata","title":"setPitch(pitch, eventData?)","text":"<p>Sets the map's pitch (tilt). Equivalent to jumpTo({pitch: pitch}).</p> <p>Parameters</p> <ul> <li> <p>pitch(number)The pitch to set, measured in degrees away from the plane of the screen (0-60).</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#setpixelratiopixelratio","title":"setPixelRatio(pixelRatio)","text":"<p>Sets the map's pixel ratio. This allows to override devicePixelRatio. After this call, the canvas' width attribute will be container.clientWidth * pixelRatio and its height attribute will be container.clientHeight * pixelRatio.</p> <p>Parameters</p> <ul> <li> <p>pixelRatio(number)The pixel ratio.</p> </li> <li> <p>setRenderWorldCopies(renderWorldCopies)</p> </li> <li> <p>Sets the state of renderWorldCopies.</p> </li> </ul> <p>Parameters</p> <p>renderWorldCopies(boolean)If true , multiple copies of the world will be rendered side by side beyond -180 and 180 degrees longitude. If set to false :</p> <p>When the map is zoomed out far enough that a single representation of the world does not fill the map's entire container, there will be blank space beyond 180 and -180 degrees longitude.</p> <p>Features that cross 180 and -180 degrees longitude will be cut in two (with one portion on the right edge of the map and the other on the left edge of the map) at every zoom level.</p> <p>undefined is treated as true, null is treated as false.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setRenderWorldCopies(true);\n</code></pre> <p>Related</p> <ul> <li>Render world copies</li> </ul>"},{"location":"sdk-web-gl/map/#setstylestyle-options","title":"setStyle(style, options?)","text":"<p>Updates the map's vietmap style object with a new value.</p> <p>If a style is already set when this is used and options.diff is set to true, the map renderer will attempt to compare the given style against the map's current state and perform only the changes necessary to make the map style match the desired state. Changes in sprites (images used for icons and patterns) and glyphs (fonts for label text) cannot be diffed. If the sprites or fonts used in the current style and the given style are different in any way, the map renderer will force a full update, removing the current style and building the given one from scratch.</p> <p>Parameters</p> <ul> <li> <p>style((StyleSpecification | string | null))A JSON object conforming to the schema described in the vietmap Style Specification , or a URL to such JSON.</p> </li> <li> <p>options(Object?)Options object.</p> </li> </ul> Name Description options.diffbooleandefault:\u00a0true If false, force a 'full' update, removing the current style and building the given one instead of attempting a diff-based update. options.localIdeographFontFamilystringdefault:\u00a0'sans-serif' Defines a CSS font-family for locally overriding generation of glyphs in the 'CJK Unified Ideographs', 'Hiragana', 'Katakana' and 'Hangul Syllables' ranges. In these ranges, font settings from the map's style will be ignored, except for font-weight keywords (light/regular/medium/bold). Set to\u00a0false\u00a0, to enable font settings from the map's style for these glyph ranges. Forces a full update. <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setStyle(\"https://maps.vietmap.vn/mt/tm/style.json?apikey=\"your-apikey\"\");\n</code></pre>"},{"location":"sdk-web-gl/map/#settransformrequesttransformrequest","title":"setTransformRequest(transformRequest)","text":"<p>Updates the requestManager's transform request with a new function</p> <p>Parameters</p> <p>transformRequest(RequestTransformFunction)A callback run before the Map makes a request for an external URL. The callback can be used to modify the url, set headers, or set the credentials property for cross-origin requests. Expected to return an object with a url property and optionally headers and credentials properties</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>map.setTransformRequest((url: string, resourceType: string) =&gt; {});\n</code></pre>"},{"location":"sdk-web-gl/map/#setzoomzoom-eventdata","title":"setZoom(zoom, eventData?)","text":"<p>Sets the map's zoom level. Equivalent to jumpTo({zoom: zoom}).</p> <p>Parameters</p> <ul> <li> <p>zoom(number)The zoom level to set (0-20).</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Zoom to the zoom level 5 without an animated transition\nmap.setZoom(5);\n</code></pre>"},{"location":"sdk-web-gl/map/#showcollisionboxes","title":"showCollisionBoxes","text":"<p>Gets and sets a Boolean indicating whether the map will render boxes around all symbols in the data source, revealing which symbols were rendered or which were hidden due to collisions. This information is useful for debugging.</p>"},{"location":"sdk-web-gl/map/#showpadding","title":"showPadding","text":"<p>Gets and sets a Boolean indicating whether the map will visualize the padding offsets</p>"},{"location":"sdk-web-gl/map/#showtileboundaries","title":"showTileBoundaries","text":"<p>Gets and sets a Boolean indicating whether the map will render an outline around each tile and the tile ID. These tile boundaries are useful for debugging.</p> <p>The uncompressed file size of the first vector source is drawn in the top left corner of each tile, next to the tile ID.</p> <p>Example</p> <pre><code>map.showTileBoundaries = true;\n</code></pre>"},{"location":"sdk-web-gl/map/#snaptonorthoption-eventdata","title":"snapToNorth(option?, eventData?)","text":"<p>Snaps the map so that north is up (0\u00b0 bearing), if the current bearing is close enough to it (i.e. within the bearingSnap threshold).</p> <p>Parameters</p> <ul> <li> <p>options(AnimationOptions?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#stop","title":"Stop","text":"<p>Stops any animated transition underway.</p> <p>Returns</p> <p>Map: this</p>"},{"location":"sdk-web-gl/map/#touchpitch","title":"touchPitch","text":"<p>The map's TouchPitchHandler, which allows the user to pitch the map with touch gestures. Find more details and examples using touchPitch in the TouchPitchHandler section.</p>"},{"location":"sdk-web-gl/map/#touchzoomrotate","title":"touchZoomRotate","text":"<p>The map's TouchZoomRotateHandler, which allows the user to zoom or rotate the map with touch gestures. Find more details and examples using touchZoomRotate in the TouchZoomRotateHandler section.</p>"},{"location":"sdk-web-gl/map/#triggerrepaint","title":"triggerRepaint()","text":"<p>Trigger the rendering of a single frame. Use this method with custom layers to repaint the map when the layer changes. Calling this multiple times before the next frame is rendered will still result in only a single frame being rendered.</p> <p>Example</p> <pre><code>map.triggerRepaint();\n</code></pre> <p>Related</p> <ul> <li> <p>Add a 3D model</p> </li> <li> <p>Add an animated icon to the map</p> </li> </ul>"},{"location":"sdk-web-gl/map/#unprojectpoint","title":"unproject(point)","text":"<p>Returns a LngLat representing geographical coordinates that correspond to the specified pixel coordinates.</p> <p>Parameters</p> <p>point(PointLike)The pixel coordinates to unproject.</p> <p>Returns</p> <p>LngLat: The LngLat corresponding to point .</p> <p>Example</p> <pre><code>map.on('click', function(e) {\n// When the map is clicked, get the geographic coordinate.\nvar coordinate = map.unproject(e.point);\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#updateimageid-image","title":"updateImage(id, image)","text":"<p>Update an existing image in a style. This image can be displayed on the map like any other icon in the style's sprite using the image's ID with icon-image, background-pattern, fill-pattern, or line-pattern.</p> <p>Parameters</p> <ul> <li> <p>id(string)The ID of the image.</p> </li> <li> <p>image((HTMLImageElement | ImageBitmap | ImageData | {width: number, height: number, data: (Uint8Array | Uint8ClampedArray)} | StyleImageInterface))The image as an HTMLImageElement , ImageData , ImageBitmap or object with width , height , and data properties with the same format as ImageData .</p> </li> </ul> <p>Example</p> <pre><code>// If an image with the ID 'cat' already exists in the style's sprite,\n// replace that image with a new image, 'other-cat-icon.png'.\nif (map.hasImage('cat')) map.updateImage('cat', './other-cat-icon.png');\n</code></pre>"},{"location":"sdk-web-gl/map/#zoominoptions-eventdata","title":"zoomIn(options?, eventData?)","text":"<p>Increases the map's zoom level by 1.</p> <p>Parameters</p> <ul> <li> <p>options(AnimationOptions?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// zoom the map in one level with a custom animation duration\nmap.zoomIn({duration: 1000});\n</code></pre>"},{"location":"sdk-web-gl/map/#zoomoutoption-eventdata","title":"zoomOut(option?, eventData?)","text":"<p>Decreases the map's zoom level by 1.</p> <p>Parameters</p> <p>options(AnimationOptions?)Options object</p> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// zoom the map out one level with a custom animation offset\nmap.zoomOut({offset: [80, 60]});\n</code></pre>"},{"location":"sdk-web-gl/map/#zoomtozoom-option-eventdata","title":"zoomTo(zoom, option?, eventData?)","text":"<p>Zooms the map to the specified zoom level, with an animated transition.</p> <p>Parameters</p> <ul> <li> <p>zoom(number)The zoom level to transition to.</p> </li> <li> <p>options((AnimationOptions | null)?)Options object</p> </li> <li> <p>eventData(any?)Additional properties to be added to event objects of events triggered by this method.</p> </li> </ul> <p>Returns</p> <p>Map: this</p> <p>Example</p> <pre><code>// Zoom to the zoom level 5 without an animated transition\nmap.zoomTo(5);\n// Zoom to the zoom level 8 with an animated transition\nmap.zoomTo(8, {\nduration: 2000,\noffset: [100, 50]\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#events","title":"Events","text":""},{"location":"sdk-web-gl/map/#boxzoomcancel","title":"boxzoomcancel","text":"<p>Fired when the user cancels a \"box zoom\" interaction, or when the bounding box does not meet the minimum size threshold. See BoxZoomHandler.</p> <p>Properties</p> <p>data(vietmapZoomEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// the user cancels a \"box zoom\" interaction.\nmap.on('boxzoomcancel', function() {\nconsole.log('A boxzoomcancel event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#boxzoomend","title":"boxzoomend","text":"<p>Fired when a \"box zoom\" interaction ends. See BoxZoomHandler.</p> <p>Properties</p> <p>data(vietmapZoomEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after a \"box zoom\" interaction ends.\nmap.on('boxzoomend', function() {\nconsole.log('A boxzoomend event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#boxzoomstart","title":"boxzoomstart","text":"<p>Fired when a \"box zoom\" interaction starts. See BoxZoomHandler.</p> <p>Properties</p> <p>data(vietmapZoomEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before a \"box zoom\" interaction starts.\nmap.on('boxzoomstart', function() {\nconsole.log('A boxzoomstart event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#click","title":"click","text":"<p>Fired when a pointing device (usually a mouse) is pressed and released at the same point on the map.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the point that is pressed and released contains a visible portion of the specifed layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('click', function(e) {\nconsole.log('A click event has occurred at ' + e.lngLat);\n});\n\n\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('click', 'poi-label', function(e) {\nconsole.log('A click event has occurred on a visible portion of the poi-label layer at ' + e.lngLat);\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Measure distances</p> </li> <li> <p>Center the map on a clicked symbol</p> </li> </ul>"},{"location":"sdk-web-gl/map/#contextmenu","title":"contextmenu","text":"<p>Fired when the right button of the mouse is clicked or the context menu key is pressed within the map.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the right mouse button is\n// pressed within the map.\nmap.on('contextmenu', function() {\nconsole.log('A contextmenu event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#data","title":"data","text":"<p>Fired when any map data loads or changes. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when map data loads or changes.\nmap.on('data', function() {\nconsole.log('A data event occurred.');\n});\n</code></pre> <p>Related</p> <ul> <li>Display HTML clusters with custom properties</li> </ul>"},{"location":"sdk-web-gl/map/#dataabort","title":"dataabort","text":"<p>Fired when a request for one of the map's sources' tiles is aborted. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a request for one of the map's sources' tiles is aborted.\nmap.on('dataabort', function() {\nconsole.log('A dataabort event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#dataloading","title":"dataloading","text":"<p>Fired when any map data (style, source, tile, etc) begins loading or changing asyncronously. All dataloading events are followed by a data, dataabort or error event. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when any map data begins loading\n// or changing asynchronously.\nmap.on('dataloading', function() {\nconsole.log('A dataloading event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#dbclick","title":"dbclick","text":"<p>Fired when a pointing device (usually a mouse) is pressed and released twice at the same point on the map in rapid succession.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the point that is clicked twice contains a visible portion of the specifed layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('dblclick', function(e) {\nconsole.log('A dblclick event has occurred at ' + e.lngLat);\n});\n\n\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('dblclick', 'poi-label', function(e) {\nconsole.log('A dblclick event has occurred on a visible portion of the poi-label layer at ' + e.lngLat);\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#drag","title":"drag","text":"<p>Fired repeatedly during a \"drag to pan\" interaction. See DragPanHandler.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// repeatedly  during a \"drag to pan\" interaction.\nmap.on('drag', function() {\nconsole.log('A drag event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#dragend","title":"dragend","text":"<p>Fired when a \"drag to pan\" interaction ends. See DragPanHandler.</p> <p>Properties</p> <p>data({originalEvent: DragEvent})</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a \"drag to pan\" interaction ends.\nmap.on('dragend', function() {\nconsole.log('A dragend event occurred.');\n});\n</code></pre> <p>Related</p> <ul> <li>Create a draggable marker</li> </ul>"},{"location":"sdk-web-gl/map/#dragstart","title":"dragstart","text":"<p>Fired wh+en a \"drag to pan\" interaction starts. See DragPanHandler.</p> <p>Properties</p> <p>data({originalEvent: DragEvent})</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a \"drag to pan\" interaction starts.\nmap.on('dragstart', function() {\nconsole.log('A dragstart event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#error","title":"error","text":"<p>Fired when an error occurs. This is GL JS's primary error reporting mechanism. We use an event instead of throw to better accommodate asyncronous operations. If no listeners are bound to the error event, the error will be printed to the console.</p> <p>Properties</p> <p>data({error: {message: string}})</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when an error occurs.\nmap.on('error', function() {\nconsole.log('A error event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#idle","title":"idle","text":"<p>Fired after the last frame rendered before the map enters an \"idle\" state:</p> <p>No camera transitions are in progress</p> <p>All currently requested tiles have loaded</p> <p>All fade/transition animations have completed</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before the map enters an \"idle\" state.\nmap.on('idle', function() {\nconsole.log('A idle event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#load","title":"load","text":"<p>Fired immediately after all necessary resources have been downloaded and the first visually complete rendering of the map has occurred.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the map has finished loading.\nmap.on('load', function() {\nconsole.log('A load event occurred.');\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Draw GeoJSON points</p> </li> <li> <p>Add live realtime data</p> </li> <li> <p>Animate a point</p> </li> </ul>"},{"location":"sdk-web-gl/map/#mousedown","title":"mousedown","text":"<p>Fired when a pointing device (usually a mouse) is pressed within the map.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the the cursor is pressed while inside a visible portion of the specifed layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('mousedown', function() {\nconsole.log('A mousedown event has occurred.');\n});\n\n\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('mousedown', 'poi-label', function() {\nconsole.log('A mousedown event has occurred on a visible portion of the poi-label layer.');\n});\n</code></pre> <p>Related</p> <ul> <li>Create a draggable point</li> </ul>"},{"location":"sdk-web-gl/map/#mouseenter","title":"mouseenter","text":"<p>Fired when a pointing device (usually a mouse) enters a visible portion of a specified layer from outside that layer or outside the map canvas.</p> <p>Important: This event can only be listened for when Map#on includes three arguments, where the second argument specifies the desired layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('mouseenter', 'water', function() {\nconsole.log('A mouseenter event occurred on a visible portion of the water layer.');\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Center the map on a clicked symbol</p> </li> <li> <p>Display a popup on click</p> </li> </ul>"},{"location":"sdk-web-gl/map/#mouseleave","title":"mouseleave","text":"<p>Fired when a pointing device (usually a mouse) leaves a visible portion of a specified layer, or leaves the map canvas.</p> <p>Important: This event can only be listened for when Map#on includes three arguements, where the second argument specifies the desired layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the pointing device leaves\n// a visible portion of the specified layer.\nmap.on('mouseleave', 'water', function() {\nconsole.log('A mouseleave event occurred.');\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Highlight features under the mouse pointer</p> </li> <li> <p>Display a popup on click</p> </li> </ul>"},{"location":"sdk-web-gl/map/#mousemove","title":"mousemove","text":"<p>Fired when a pointing device (usually a mouse) is moved while the cursor is inside the map. As you move the cursor across the map, the event will fire every time the cursor changes position within the map.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the the cursor is inside a visible portion of the specified layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('mousemove', function() {\nconsole.log('A mousemove event has occurred.');\n});\n\n\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('mousemove', 'poi-label', function() {\nconsole.log('A mousemove event has occurred on a visible portion of the poi-label layer.');\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Get coordinates of the mouse pointer</p> </li> <li> <p>Highlight features under the mouse pointer</p> </li> <li> <p>Display a popup on over</p> </li> </ul>"},{"location":"sdk-web-gl/map/#mouseout","title":"mouseout","text":"<p>Fired when a point device (usually a mouse) leaves the map's canvas.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the pointing device leave's\n// the map's canvas.\nmap.on('mouseout', function() {\nconsole.log('A mouseout event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#mouseover","title":"mouseover","text":"<p>Fired when a pointing device (usually a mouse) is moved within the map. As you move the cursor across a web page containing a map, the event will fire each time it enters the map or any child elements.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the the cursor is moved inside a visible portion of the specifed layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('mouseover', function() {\nconsole.log('A mouseover event has occurred.');\n});\n\n```javascript\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('mouseover', 'poi-label', function() {\nconsole.log('A mouseover event has occurred on a visible portion of the poi-label layer.');\n});\n</code></pre> <p>Related</p> <ul> <li> <p>Get coordinates of the mouse pointer</p> </li> <li> <p>Highlight features under the mouse pointer</p> </li> <li> <p>Display a popup on hover</p> </li> </ul>"},{"location":"sdk-web-gl/map/#mouseup","title":"mouseup","text":"<p>Fired when a pointing device (usually a mouse) is released within the map.</p> <p>Note: This event is compatible with the optional layerId parameter. If layerId is included as the second argument in Map#on, the event listener will fire only when the the cursor is released while inside a visible portion of the specifed layer.</p> <p>Properties</p> <p>data(MapMouseEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener\nmap.on('mouseup', function() {\nconsole.log('A mouseup event has occurred.');\n});\n\n\n// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener for a specific layer\nmap.on('mouseup', 'poi-label', function() {\nconsole.log('A mouseup event has occurred on a visible portion of the poi-label layer.');\n});\n</code></pre> <p>Related</p> <p>Create a draggable point</p>"},{"location":"sdk-web-gl/map/#move","title":"move","text":"<p>Fired repeatedly during an animated transition from one view to another, as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// repeatedly during an animated transition.\nmap.on('move', function() {\nconsole.log('A move event occurred.');\n});\n</code></pre> <p>Related</p> <ul> <li>Display HTML clusters with custom properties</li> </ul>"},{"location":"sdk-web-gl/map/#moveend","title":"moveend","text":"<p>Fired just after the map completes a transition from one view to another, as the result of either user interaction or methods such as Map#jumpTo.</p> <p>Properties</p> <p>data({originalEvent: DragEvent})</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after the map completes a transition.\nmap.on('moveend', function() {\nconsole.log('A moveend event occurred.');\n});\n</code></pre> <p>Related</p> <p>Display HTML clusters with custom properties</p>"},{"location":"sdk-web-gl/map/#movestart","title":"movestart","text":"<p>Fired just before the map begins a transition from one view to another, as the result of either user interaction or methods such as Map#jumpTo.</p> <p>Properties</p> <p>data({originalEvent: DragEvent})</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before the map begins a transition\n// from one view to another.\nmap.on('movestart', function() {\nconsole.log('A movestart` event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#pitch","title":"pitch","text":"<p>Fired repeatedly during the map's pitch (tilt) animation between one state and another as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data(MapEventData)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// repeatedly during a pitch (tilt) transition.\nmap.on('pitch', function() {\nconsole.log('A pitch event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#pitchend","title":"pitchend","text":"<p>Fired immediately after the map's pitch (tilt) finishes changing as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data(MapEventData)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after a pitch (tilt) transition ends.\nmap.on('pitchend', function() {\nconsole.log('A pitchend event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#pitchstart","title":"pitchstart","text":"<p>Fired whenever the map's pitch (tilt) begins a change as the result of either user interaction or methods such as Map#flyTo .</p> <p>Properties</p> <p>data(MapEventData)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before a pitch (tilt) transition starts.\nmap.on('pitchstart', function() {\nconsole.log('A pitchstart event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#remove_1","title":"remove","text":"<p>Fired immediately after the map has been removed with Map.event:remove.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after the map is removed.\nmap.on('remove', function() {\nconsole.log('A remove event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#render","title":"render","text":"<p>Fired whenever the map is drawn to the screen, as the result of</p> <p>a change to the map's position, zoom, pitch, or bearing</p> <p>a change to the map's style</p> <p>a change to a GeoJSON source</p> <p>the loading of a vector tile, GeoJSON file, glyph, or sprite</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// whenever the map is drawn to the screen.\nmap.on('render', function() {\nconsole.log('A render event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#resize","title":"resize","text":"<p>Fired immediately after the map has been resized.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// immediately after the map has been resized.\nmap.on('resize', function() {\nconsole.log('A resize event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#rotate","title":"rotate","text":"<p>Fired repeatedly during a \"drag to rotate\" interaction. See DragRotateHandler.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// repeatedly during \"drag to rotate\" interaction.\nmap.on('rotate', function() {\nconsole.log('A rotate event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#roteteend","title":"roteteend","text":"<p>Fired when a \"drag to rotate\" interaction ends. See DragRotateHandler.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after a \"drag to rotate\" interaction ends.\nmap.on('rotateend', function() {\nconsole.log('A rotateend event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#rotatestart","title":"rotatestart","text":"<p>Fired when a \"drag to rotate\" interaction starts. See DragRotateHandler.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before a \"drag to rotate\" interaction starts.\nmap.on('rotatestart', function() {\nconsole.log('A rotatestart event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#sourcedata","title":"sourcedata","text":"<p>Fired when one of the map's sources loads or changes, including if a tile belonging to a source loads or changes. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when one of the map's sources loads or changes.\nmap.on('sourcedata', function() {\nconsole.log('A sourcedata event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#sourcedataabort","title":"sourcedataabort","text":"<p>Fired when a request for one of the map's sources' tiles is aborted. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a request for one of the map's sources' tiles is aborted.\nmap.on('sourcedataabort', function() {\nconsole.log('A sourcedataabort event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#sourcedataloading","title":"sourcedataloading","text":"<p>Fired when one of the map's sources begins loading or changing asyncronously. All sourcedataloading events are followed by a sourcedata, sourcedataabort or error event. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// map's sources begin loading or\n// changing asyncronously.\nmap.on('sourcedataloading', function() {\nconsole.log('A sourcedataloading event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#styledata","title":"styledata","text":"<p>Fired when the map's style loads or changes. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the map's style loads or changes.\nmap.on('styledata', function() {\nconsole.log('A styledata event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#styledataloading","title":"styledataloading","text":"<p>Fired when the map's style begins loading or changing asyncronously. All styledataloading events are followed by a styledata or error event. See MapDataEvent for more information.</p> <p>Properties</p> <p>data(MapDataEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// map's style begins loading or\n// changing asyncronously.\nmap.on('styledataloading', function() {\nconsole.log('A styledataloading event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#styleimagemissing","title":"styleimagemissing","text":"<p>Fired when an icon or pattern needed by the style is missing. The missing image can be added with Map#addImage within this event listener callback to prevent the image from being skipped. This event can be used to dynamically generate icons and patterns.</p> <p>Properties</p> <p>id(string): The id of the missing image.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// an icon or pattern is missing.\nmap.on('styleimagemissing', function() {\nconsole.log('A styleimagemissing event occurred.');\n});\n</code></pre> <p>Related</p> <p>Generate and add a missing icon to the map</p>"},{"location":"sdk-web-gl/map/#touchcancel","title":"touchcancel","text":"<p>Fired when a touchcancel event occurs within the map.</p> <p>Properties</p> <p>data(MapTouchEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a touchcancel event occurs within the map.\nmap.on('touchcancel', function() {\nconsole.log('A touchcancel event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#touchend","title":"touchend","text":"<p>Fired when a touchend event occurs within the map.</p> <p>Properties</p> <p>data(MapTouchEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a touchstart event occurs within the map.\nmap.on('touchstart', function() {\nconsole.log('A touchstart event occurred.');\n});\n</code></pre> <p>Related</p> <p>Create a draggable point</p>"},{"location":"sdk-web-gl/map/#touchmove","title":"touchmove","text":"<p>Fired when a touchmove event occurs within the map.</p> <p>Properties</p> <p>data(MapTouchEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a touchmove event occurs within the map.\nmap.on('touchmove', function() {\nconsole.log('A touchmove event occurred.');\n});\n</code></pre> <p>Related</p> <p>Create a draggable point</p>"},{"location":"sdk-web-gl/map/#touchstart","title":"touchstart","text":"<p>Fired when a touchstart event occurs within the map.</p> <p>Properties</p> <p>data(MapTouchEvent): // Initialize the map var map = new vietmapgl.Map({ // map options }); // Set an event listener that fires // when a touchstart event occurs within the map. map.on('touchstart', function() { console.log('A touchstart event occurred.'); });</p> <p>Related</p> <p>Create a draggable point</p>"},{"location":"sdk-web-gl/map/#webglcontextlost","title":"webglcontextlost","text":"<p>Fired when the WebGL context is lost.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the WebGL context is lost.\nmap.on('webglcontextlost', function() {\nconsole.log('A webglcontextlost event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#webglcontextrestored","title":"webglcontextrestored","text":"<p>Fired when the WebGL context is restored.</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when the WebGL context is restored.\nmap.on('webglcontextrestored', function() {\nconsole.log('A webglcontextrestored event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#wheel","title":"wheel","text":"<p>Fired when a wheel event occurs within the map.</p> <p>Properties</p> <p>data(MapWheelEvent)</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// when a wheel event occurs within the map.\nmap.on('wheel', function() {\nconsole.log('A wheel event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#zoom","title":"zoom","text":"<p>Fired repeatedly during an animated transition from one zoom level to another, as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// repeatedly during a zoom transition.\nmap.on('zoom', function() {\nconsole.log('A zoom event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#zoomend","title":"zoomend","text":"<p>Fired just after the map completes a transition from one zoom level to another, as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just after a zoom transition finishes.\nmap.on('zoomend', function() {\nconsole.log('A zoomend event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#zoomstart","title":"zoomstart","text":"<p>Fired just before the map begins a transition from one zoom level to another, as the result of either user interaction or methods such as Map#flyTo.</p> <p>Properties</p> <p>data((MapMouseEvent | MapTouchEvent))</p> <p>Example</p> <pre><code>// Initialize the map\nvar map = new vietmapgl.Map({ // map options });\n// Set an event listener that fires\n// just before a zoom transition starts.\nmap.on('zoomstart', function() {\nconsole.log('A zoomstart event occurred.');\n});\n</code></pre>"},{"location":"sdk-web-gl/map/#related","title":"Related","text":"<p>Display a map</p>"},{"location":"sdk-web-gl/markers-and-controls/","title":"Markers and controls","text":"<p>User interface elements that can be added to the map. The items in this section exist outside of the map's canvas element.</p>"},{"location":"sdk-web-gl/markers-and-controls/#marker","title":"Marker","text":"<p>src/ui/marker.ts Creates a marker component</p> <p>Extends Evented.</p> <pre><code>new Marker(options: Object?, legacyOptions: MarkerOptions?)\n</code></pre> <p>Parameters</p> <p>options(Object?)</p> Name Description options.elementHTMLElement? DOM element to use as a marker. The default is a light blue, droplet-shaped SVG marker. options.anchorstringdefault: 'center' A string indicating the part of the Marker that should be positioned closest to the coordinate set via Marker#setLngLat . Options are 'center' , 'top' , 'bottom' , 'left' , 'right' , 'top-left' , 'top-right' , 'bottom-left' , and 'bottom-right' . options.offsetPointLike? The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up. options.colorstringdefault: '#3FB1CE' The color to use for the default marker if options.element is not provided. The default is light blue. options.scalenumberdefault: 1 The scale to use for the default marker if options.element is not provided. The default scale corresponds to a height of 41px and a width of 27px . options.draggablebooleandefault: false A boolean indicating whether or not a marker is able to be dragged to a new position on the map. options.clickTolerancenumberdefault: 0 The max number of pixels a user can shift the mouse pointer during a click on the marker for it to be considered a valid click (as opposed to a marker drag). The default is to inherit map's clickTolerance. options.rotationnumberdefault: 0 The rotation angle of the marker in degrees, relative to its respective rotationAlignment setting. A positive value will rotate the marker clockwise. options.pitchAlignmentstringdefault: 'auto' map aligns the Marker to the plane of the map. viewport aligns the Marker to the plane of the viewport. auto automatically matches the value of rotationAlignment . options.rotationAlignmentstringdefault: 'auto' map aligns the Marker 's rotation relative to the map, maintaining a bearing as the map rotates. viewport aligns the Marker 's rotation relative to the viewport, agnostic to map rotations. auto is equivalent to viewport . <p>Example</p> <pre><code>var marker = new vietmapgl.Marker()\n    .setLngLat([30.5, 50.5])\n    .addTo(map);\n\n\n// Set options\nvar marker = new vietmapgl.Marker({\n    color: \"#FFFFFF\",\n    draggable: true\n    }).setLngLat([30.5, 50.5])\n.addTo(map);\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/markers-and-controls/#addtomap","title":"addTo(map)","text":"<p>Attaches the Marker to a Map object.</p> <p>Parameters</p> <p>map(Map)The vietmap GL JS map to add the marker to.</p> <p>Returns</p> <p>Marker: this</p> <p>Example</p> <pre><code>var marker = new vietmapgl.Marker()\n.setLngLat([30.5, 50.5])\n.addTo(map); // add the marker to the map\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#getelement","title":"getElement()","text":"<p>Returns the Marker's HTML element.</p> <p>Returns</p> <p>HTMLElement: element</p>"},{"location":"sdk-web-gl/markers-and-controls/#getlnglat","title":"getLngLat()","text":"<p>Get the marker's geographical location.</p> <p>The longitude of the result may differ by a multiple of 360 degrees from the longitude previously set by setLngLat because Marker wraps the anchor longitude across copies of the world to keep the marker on screen.</p> <p>Returns</p> <p>LngLat: A LngLat describing the marker's location.</p> <p>Example</p> <pre><code>// Store the marker's longitude and latitude coordinates in a variable\nvar lngLat = marker.getLngLat();\n// Print the marker's longitude and latitude values in the console\nconsole.log('Longitude: ' + lngLat.lng + ', Latitude: ' + lngLat.lat )\n</code></pre> <p>Related</p> <ul> <li>Create a draggable Marker</li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#getoffset","title":"getOffset()","text":"<p>Get the marker's offset.</p> <p>Returns</p> <p>Point: The marker's screen coordinates in pixels.</p>"},{"location":"sdk-web-gl/markers-and-controls/#getpitchalignment","title":"getPitchAlignment()","text":"<p>Returns the current pitchAlignment property of the marker.</p> <p>Returns</p> <p>string: The current pitch alignment of the marker in degrees.</p>"},{"location":"sdk-web-gl/markers-and-controls/#getpopup","title":"getPopup()","text":"<p>Returns the Popup instance that is bound to the Marker.</p> <p>Returns</p> <p>Popup: popup</p> <p>Example</p> <pre><code>var marker = new vietmapgl.Marker()\n.setLngLat([0, 0])\n.setPopup(new vietmapgl.Popup().setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\"))\n.addTo(map);\n\nconsole.log(marker.getPopup()); // return the popup instance\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#getrotation","title":"getRotation()","text":"<p>Returns the current rotation angle of the marker (in degrees).</p> <p>Returns</p> <p>number: The current rotation angle of the marker.</p>"},{"location":"sdk-web-gl/markers-and-controls/#getrotationalignment","title":"getRotationAlignment()","text":"<p>Returns the current rotationAlignment property of the marker.</p> <p>Returns</p> <p>string: The current rotational alignment of the marker.</p>"},{"location":"sdk-web-gl/markers-and-controls/#isdraggable","title":"isDraggable()","text":"<p>Returns true if the marker can be dragged</p> <p>Returns</p> <p>boolean: True if the marker is draggable.</p>"},{"location":"sdk-web-gl/markers-and-controls/#remove","title":"remove()","text":"<p>Removes the marker from a map</p> <p>Returns</p> <p>Marker: this</p> <p>Example</p> <pre><code>var marker = new vietmapgl.Marker().addTo(map);\nmarker.remove();\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#setdraggableshouldbedraggable","title":"setDraggable(shouldBeDraggable)","text":"<p>Sets the draggable property and functionality of the marker</p> <p>Parameters</p> <p>shouldBeDraggable(boolean)(default false)Turns drag functionality on/off</p> <p>Returns</p> <p>Marker: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setlnglatlnglat","title":"setLngLat(lnglat)","text":"<p>Set the marker's geographical position and move it.</p> <p>Parameters</p> <p>lnglat(LngLat)A LngLat describing where the marker should be located.</p> <p>Returns</p> <p>Marker: this</p> <p>Example</p> <pre><code>// Create a new marker, set the longitude and latitude, and add it to the map\nnew vietmapgl.Marker()\n.setLngLat([-65.017, -16.457])\n.addTo(map);\n</code></pre> <p>Related</p> <ul> <li> <p>Add custom icons with Markers</p> </li> <li> <p>Create a draggable Marker</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#setoffsetoffset","title":"setOffset(offset)","text":"<p>Sets the offset of the marker</p> <p>Parameters</p> <p>offset(PointLike)The offset in pixels as a PointLike object to apply relative to the element's center. Negatives indicate left and up.</p> <p>Returns</p> <p>Marker: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setpitchalignmentalignment","title":"setPitchAlignment(alignment?)","text":"<p>Sets the pitchAlignment property of the marker.</p> <p>Parameters</p> <p>alignment(string?)Sets the pitchAlignment property of the marker. If alignment is 'auto', it will automatically match rotationAlignment .</p> <p>Returns</p> <p>Marker: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setpopuppopup","title":"setPopup(popup?)","text":"<p>Binds a Popup to the Marker.</p> <p>Parameters</p> <p>popup((Popup | null)?)An instance of the Popup class. If undefined or null, any popup set on this Marker instance is unset.</p> <p>Returns</p> <p>Marker: this</p> <p>Example</p> <pre><code>var marker = new vietmapgl.Marker()\n.setLngLat([0, 0])\n.setPopup(new vietmapgl.Popup().setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\")) // add popup\n.addTo(map);\n</code></pre> <p>Related</p> <p>Attach a popup to a marker instance</p>"},{"location":"sdk-web-gl/markers-and-controls/#setrotationrotation","title":"setRotation(rotation)","text":"<p>Sets the rotation property of the marker.</p> <p>Parameters</p> <p>rotation(number)(default 0)The rotation angle of the marker (clockwise, in degrees), relative to its respective Marker#setRotationAlignment setting.</p> <p>Returns</p> <p>Marker: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setrotationalignmentalignment","title":"setRotationAlignment(alignment)","text":"<p>Sets the rotationAlignment property of the marker.</p> <p>Parameters</p> <p>alignment(string)(default 'auto')Sets the rotationAlignment property of the marker.</p> <p>Returns</p> <p>Marker: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#togglepopup","title":"togglePopup()","text":"<p>Opens or closes the Popup instance that is bound to the Marker, depending on the current state of the Popup.</p> <p>Returns</p> <p>Marker: this</p> <p>Example</p> <pre><code>var marker = new vietmapgl.Marker()\n.setLngLat([0, 0])\n.setPopup(new vietmapgl.Popup().setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\"))\n.addTo(map);\n\nmarker.togglePopup(); // toggle popup open or closed\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#events","title":"Events","text":""},{"location":"sdk-web-gl/markers-and-controls/#drag","title":"drag","text":"<p>Fired while dragging</p> <p>Properties</p> <p>marker(Marker): object that is being dragged</p>"},{"location":"sdk-web-gl/markers-and-controls/#dragend","title":"dragend","text":"<p>Fired when the marker is finished being dragged</p> <p>Properties</p> <p>marker(Marker): object that was dragged</p>"},{"location":"sdk-web-gl/markers-and-controls/#dragstart","title":"dragstart","text":"<p>Fired when dragging starts</p> <p>Properties</p> <p>marker(Marker): object that is being dragged</p> <p>Related</p> <ul> <li> <p>Add custom icons with Markers</p> </li> <li> <p>Create a draggable Marker</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#popup","title":"Popup","text":"<p>src/ui/popup.ts</p> <p>A popup component.</p> <p>Extends Evented.</p> <pre><code>new Popup(options: Object?)\n</code></pre> <p>Parameters</p> <p>options(Object?)</p> Name Description options.closeButtonbooleandefault: true options.closeOnClickbooleandefault: true If true , the popup will closed when the map is clicked. options.closeOnMovebooleandefault: false If true , the popup will closed when the map moves. options.focusAfterOpenbooleandefault: true If true , the popup will try to focus the first focusable element inside the popup. options.anchorstring? A string indicating the part of the Popup that should be positioned closest to the coordinate set via Popup#setLngLat . Options are 'center' , 'top' , 'bottom' , 'left' , 'right' , 'top-left' , 'top-right' , 'bottom-left' , and 'bottom-right' . If unset the anchor will be dynamically set to ensure the popup falls within the map container with a preference for 'bottom' . options.offset(number PointLike options.classNamestring? Space-separated CSS class names to add to popup container options.maxWidthstringdefault: '240px' A string that sets the CSS property of the popup's maximum width, eg '300px' . To ensure the popup resizes to fit its content, set this property to 'none' . Available values can be found here: https://developer.mozilla.org/en-US/docs/Web/CSS/max-width <p>Example</p> <pre><code>var markerHeight = 50, markerRadius = 10, linearOffset = 25;\nvar popupOffsets = {\n'top': [0, 0],\n'top-left': [0,0],\n'top-right': [0,0],\n'bottom': [0, -markerHeight],\n'bottom-left': [linearOffset, (markerHeight - markerRadius + linearOffset) * -1],\n'bottom-right': [-linearOffset, (markerHeight - markerRadius + linearOffset) * -1],\n'left': [markerRadius, (markerHeight - markerRadius) * -1],\n'right': [-markerRadius, (markerHeight - markerRadius) * -1]\n};\nvar popup = new vietmapgl.Popup({offset: popupOffsets, className: 'my-class'})\n.setLngLat(e.lngLat)\n.setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\")\n.setMaxWidth(\"300px\")\n.addTo(map);\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#instance-members_1","title":"Instance Members","text":""},{"location":"sdk-web-gl/markers-and-controls/#addclassnameclassname","title":"addclassName(className)","text":"<p>Adds a CSS class to the popup container element.</p> <p>Parameters</p> <p>className(string)Non-empty string with CSS class name to add to popup container</p> <p>Example</p> <pre><code>let popup = new vietmapgl.Popup()\npopup.addClassName('some-class')\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#addtomap_1","title":"addTo(map)","text":"<p>Adds the popup to a map.</p> <p>Parameters</p> <p>map(Map)The vietmap GL JS map to add the popup to.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>new vietmapgl.Popup()\n.setLngLat([0, 0])\n.setHTML(\"&lt;h1&gt;Null Island&lt;/h1&gt;\")\n.addTo(map);\n</code></pre> <p>Related</p> <ul> <li> <p>Display a popup</p> </li> <li> <p>Display a popup on hover</p> </li> <li> <p>Display a popup on click</p> </li> <li> <p>Show polygon information on click</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#getelement_1","title":"getElement()","text":"<p>Returns the Popup's HTML element.</p> <p>Returns</p> <p>HTMLElement: element</p> <p>Example</p> <pre><code>// Change the `Popup` element's font size\nvar popup = new vietmapgl.Popup()\n.setLngLat([-96, 37.8])\n.setHTML(\"&lt;p&gt;Hello World!&lt;/p&gt;\")\n.addTo(map);\nvar popupElem = popup.getElement();\npopupElem.style.fontSize = \"25px\";\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#getlnglat_1","title":"getLngLat()","text":"<p>Returns the geographical location of the popup's anchor.</p> <p>The longitude of the result may differ by a multiple of 360 degrees from the longitude previously set by setLngLat because Popup wraps the anchor longitude across copies of the world to keep the popup on screen.</p> <p>Returns</p> <p>LngLat: The geographical location of the popup's anchor.</p>"},{"location":"sdk-web-gl/markers-and-controls/#getmaxwidth","title":"getMaxWidth()","text":"<p>Returns the popup's maximum width.</p> <p>Returns</p> <p>string: The maximum width of the popup.</p>"},{"location":"sdk-web-gl/markers-and-controls/#isopen","title":"isOpen()","text":"<p>Returns</p> <p>boolean: true if the popup is open, false if it is closed.</p>"},{"location":"sdk-web-gl/markers-and-controls/#remove_1","title":"remove()","text":"<p>Removes the popup from the map it has been added to.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>var popup = new vietmapgl.Popup().addTo(map);\npopup.remove();\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#removeclassnameclassname","title":"removeClassName(className)","text":"<p>Removes a CSS class from the popup container element.</p> <p>Parameters</p> <p>className(string)Non-empty string with CSS class name to remove from popup container</p> <p>Example</p> <pre><code>let popup = new vietmapgl.Popup()\npopup.removeClassName('some-class')\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#setdomcontenthtmlnode","title":"setDOMContent(htmlNode)","text":"<p>Sets the popup's content to the element provided as a DOM node.</p> <p>Parameters</p> <p>htmlNode(Node)A DOM node to be used as content for the popup.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>// create an element with the popup content\nvar div = document.createElement('div');\ndiv.innerHTML = 'Hello, world!';\nvar popup = new vietmapgl.Popup()\n.setLngLat(e.lngLat)\n.setDOMContent(div)\n.addTo(map);\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#sethtmlhtml","title":"setHTML(html)","text":"<p>Sets the popup's content to the HTML provided as a string.</p> <p>This method does not perform HTML filtering or sanitization, and must be used only with trusted content. Consider Popup#setText if the content is an untrusted text string.</p> <p>Parameters</p> <p>html(string)A string representing HTML content for the popup.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>var popup = new vietmapgl.Popup()\n.setLngLat(e.lngLat)\n.setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\")\n.addTo(map);\n</code></pre> <p>Related</p> <ul> <li> <p>Display a popup</p> </li> <li> <p>Display a popup on hover</p> </li> <li> <p>Display a popup on click</p> </li> <li> <p>Attach a popup to a marker instance</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#setlnglatlnglat_1","title":"setLngLat(lnglat)","text":"<p>Sets the geographical location of the popup's anchor, and moves the popup to it. Replaces trackPointer() behavior.</p> <p>Parameters</p> <p>lnglat(LngLatLike)The geographical location to set as the popup's anchor.</p> <p>Returns</p> <p>Popup: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setmaxwidthmaxwidth","title":"setMaxWidth(maxWidth)","text":"<p>Sets the popup's maximum width. This is setting the CSS property max-width. Available values can be found here: https://developer.mozilla.org/en-US/docs/Web/CSS/max-width</p> <p>Parameters</p> <p>maxWidth(string)A string representing the value for the maximum width.</p> <p>Returns</p> <p>Popup: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#setoffsetoffset_1","title":"setOffset(offset?)","text":"<p>Sets the popup's offset.</p> <p>Parameters</p> <p>offset(Offset?)Sets the popup's offset.</p> <p>Returns</p> <p>Popup: this</p>"},{"location":"sdk-web-gl/markers-and-controls/#settexttext","title":"setText(text)","text":"<p>Sets the popup's content to a string of text.</p> <p>This function creates a Text node in the DOM, so it cannot insert raw HTML. Use this method for security against XSS if the popup content is user-provided.</p> <p>Parameters</p> <p>text(string)Textual content for the popup.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>var popup = new vietmapgl.Popup()\n.setLngLat(e.lngLat)\n.setText('Hello, world!')\n.addTo(map);\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#toggleclassnameclassname","title":"toggleClassName(className)","text":"<p>Add or remove the given CSS class on the popup container, depending on whether the container currently has that class.</p> <p>Parameters</p> <p>className(string)Non-empty string with CSS class name to add/remove</p> <p>Returns</p> <p>boolean: if the class was removed return false, if class was added, then return true</p> <p>Example</p> <pre><code>let popup = new vietmapgl.Popup()\npopup.toggleClassName('toggleClass')\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#trackpointer","title":"trackPointer()","text":"<p>Tracks the popup anchor to the cursor position on screens with a pointer device (it will be hidden on touchscreens). Replaces the setLngLat behavior. For most use cases, set closeOnClick and closeButton to false.</p> <p>Returns</p> <p>Popup: this</p> <p>Example</p> <pre><code>var popup = new vietmapgl.Popup({ closeOnClick: false, closeButton: false })\n.setHTML(\"&lt;h1&gt;Hello World!&lt;/h1&gt;\")\n.trackPointer()\n.addTo(map);\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#events_1","title":"Events","text":""},{"location":"sdk-web-gl/markers-and-controls/#close","title":"close","text":"<p>Fired when the popup is closed manually or programatically.</p> <p>Properties</p> <p>popup(Popup): object that was closed</p> <p>Example</p> <pre><code>// Create a popup\nvar popup = new vietmapgl.Popup();\n// Set an event listener that will fire\n// any time the popup is closed\npopup.on('close', function(){\nconsole.log('popup was closed');\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#open","title":"open","text":"<p>Fired when the popup is opened manually or programatically.</p> <p>Properties</p> <p>popup(Popup): object that was opened</p> <p>Example</p> <pre><code>// Create a popup\nvar popup = new vietmapgl.Popup();\n// Set an event listener that will fire\n// any time the popup is opened\npopup.on('open', function(){\nconsole.log('popup was opened');\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#related","title":"Related","text":"<ul> <li> <p>Display a popup</p> </li> <li> <p>Display a popup on hover</p> </li> <li> <p>Display a popup on click</p> </li> <li> <p>Attach a popup to a marker instance</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#icontrol","title":"IControl","text":"<p>src/ui/control/control.ts</p> <p>Interface for interactive controls added to the map. This is a specification for implementers to model: it is not an exported method or class.</p> <p>Controls must implement onAdd and onRemove, and must own an element, which is often a div element. To use vietmap GL JS's default control styling, add the vietmapgl-ctrl class to your control's node.</p>"},{"location":"sdk-web-gl/markers-and-controls/#example","title":"Example","text":"<pre><code>// Control implemented as ES6 class\nclass HelloWorldControl {\nonAdd(map) {\nthis._map = map;\nthis._container = document.createElement('div');\nthis._container.className = 'vietmapgl-ctrl';\nthis._container.textContent = 'Hello, world';\nreturn this._container;\n}\n\nonRemove() {\nthis._container.parentNode.removeChild(this._container);\nthis._map = undefined;\n}\n}\n\n// Control implemented as ES5 prototypical class\nfunction HelloWorldControl() { }\n\nHelloWorldControl.prototype.onAdd = function(map) {\nthis._map = map;\nthis._container = document.createElement('div');\nthis._container.className = 'vietmapgl-ctrl';\nthis._container.textContent = 'Hello, world';\nreturn this._container;\n};\n\nHelloWorldControl.prototype.onRemove = function () {\nthis._container.parentNode.removeChild(this._container);\nthis._map = undefined;\n};\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#instance-members_2","title":"Instance Members","text":""},{"location":"sdk-web-gl/markers-and-controls/#getdefaultposition","title":"getDefaultPosition()","text":"<p>Optionally provide a default position for this control. If this method is implemented and Map#addControl is called without the position parameter, the value returned by getDefaultPosition will be used as the control's position.</p> <p>Returns</p> <p>ControlPosition: a control position, one of the values valid in addControl.</p>"},{"location":"sdk-web-gl/markers-and-controls/#onaddmap","title":"onAdd(map)","text":"<p>Register a control on the map and give it a chance to register event listeners and resources. This method is called by Map#addControl internally.</p> <p>Parameters</p> <p>map(Map)the Map this control will be added to</p> <p>Returns</p> <p>HTMLElement: The control's container element. This should be created by the control and returned by onAdd without being attached to the DOM: the map will insert the control's element into the DOM as necessary.</p>"},{"location":"sdk-web-gl/markers-and-controls/#onremovemap","title":"onRemove(map)","text":"<p>Unregister a control on the map and give it a chance to detach event listeners and resources. This method is called by Map#removeControl internally.</p> <p>Parameters</p> <p>map(Map)the Map this control will be removed from</p> <p>Returns</p> <p>undefined: there is no required return value for this method</p>"},{"location":"sdk-web-gl/markers-and-controls/#navigationcontrol","title":"NavigationControl","text":"<p>src/ui/control/navigation_control.ts</p> <p>A NavigationControl control contains zoom buttons and a compass.</p> <pre><code>new NavigationControl(options: Object?)\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#parameters","title":"Parameters","text":"<p>options(Object?)</p> Name Description options.positionOptionsObjectdefault: A Geolocation API PositionOptions object. options.fitBoundsOptionsObjectdefault: A Map#fitBounds options object to use when the map is panned and zoomed to the user's location. The default is to use a maxZoom of 15 to limit how far the map will zoom in for very accurate locations. options.trackUserLocationObjectdefault: false If true the Geolocate Control becomes a toggle button and when active the map will receive updates to the user's location as it changes. options.showAccuracyCircleObjectdefault: true By default, if showUserLocation is true , a transparent circle will be drawn around the user location indicating the accuracy (95% confidence level) of the user's location. Set to false to disable. Always disabled when showUserLocation is false . options.showUserLocationObjectdefault: true By default a dot will be shown on the map at the user's location. Set to false to disable. <p>Example</p> <pre><code>var nav = new vietmapgl.NavigationControl();\nmap.addControl(nav, 'top-left');\n</code></pre> <p>Related</p> <ul> <li> <p>Display map navigation controls</p> </li> <li> <p>Add a third party vector tile source</p> </li> </ul>"},{"location":"sdk-web-gl/markers-and-controls/#geolocatecontrol","title":"GeolocateControl","text":"<p>src/ui/control/geolocate_control.ts</p> <p>A GeolocateControl control provides a button that uses the browser's geolocation API to locate the user on the map.</p> <p>Not all browsers support geolocation, and some users may disable the feature. Geolocation support for modern browsers including Chrome requires sites to be served over HTTPS. If geolocation support is not available, the GeolocateControl will show as disabled.</p> <p>The zoom level applied will depend on the accuracy of the geolocation provided by the device.</p> <p>The GeolocateControl has two modes. If trackUserLocation is false (default) the control acts as a button, which when pressed will set the map's camera to target the user location. If the user moves, the map won't update. This is most suited for the desktop. If trackUserLocation is true the control acts as a toggle button that when active the user's location is actively monitored for changes. In this mode the GeolocateControl has three interaction states:</p> <p>active - the map's camera automatically updates as the user's location changes, keeping the location dot in the center. Initial state and upon clicking the GeolocateControl button. passive - the user's location dot automatically updates, but the map's camera does not. Occurs upon the user initiating a map movement. disabled - occurs if Geolocation is not available, disabled or denied. These interaction states can't be controlled programmatically, rather they are set based on user interactions.</p> <p>Extends Evented.</p> <pre><code>new GeolocateControl(options: Object?)\n</code></pre> <p>Parameters</p> <p>options(Object?)</p> Name Description options.positionOptionsObjectdefault: A Geolocation API PositionOptions object. options.fitBoundsOptionsObjectdefault: A Map#fitBounds options object to use when the map is panned and zoomed to the user's location. The default is to use a maxZoom of 15 to limit how far the map will zoom in for very accurate locations. options.trackUserLocationObjectdefault: false If true the Geolocate Control becomes a toggle button and when active the map will receive updates to the user's location as it changes. options.showAccuracyCircleObjectdefault: true By default, if showUserLocation is true , a transparent circle will be drawn around the user location indicating the accuracy (95% confidence level) of the user's location. Set to false to disable. Always disabled when showUserLocation is false . options.showUserLocationObjectdefault: true By default a dot will be shown on the map at the user's location. Set to false to disable. <p>Example</p> <pre><code>map.addControl(new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n}));\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#instance-members_3","title":"Instance Members","text":""},{"location":"sdk-web-gl/markers-and-controls/#trigger","title":"trigger()","text":"<p>Programmatically request and move the map to the user's location.</p> <p>Returns</p> <p>boolean: Returns false if called before control was added to a map, otherwise returns true .</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\nmap.on('load', function() {\ngeolocate.trigger();\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#events_2","title":"Events","text":""},{"location":"sdk-web-gl/markers-and-controls/#error","title":"error","text":"<p>Fired on each Geolocation API position update which returned as an error.</p> <p>Properties</p> <p>data(PositionError): The returned PositionError object from the callback in Geolocation.getCurrentPosition() or Geolocation.watchPosition() .</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\n// Set an event listener that fires\n// when an error event occurs.\ngeolocate.on('error', function() {\nconsole.log('An error event has occurred.')\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#geolocate","title":"geolocate","text":"<p>Fired on each Geolocation API position update which returned as success.</p> <p>Properties</p> <p>data(Position): The returned Position object from the callback in Geolocation.getCurrentPosition() or Geolocation.watchPosition() .</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\n// Set an event listener that fires\n// when a geolocate event occurs.\ngeolocate.on('geolocate', function() {\nconsole.log('A geolocate event has occurred.')\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#outofmaxbounds","title":"outofmaxbounds","text":"<p>Fired on each Geolocation API position update which returned as success but user position is out of map maxBounds.</p> <p>Properties</p> <p>data(Position): The returned Position object from the callback in Geolocation.getCurrentPosition() or Geolocation.watchPosition() .</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\n// Set an event listener that fires\n// when an outofmaxbounds event occurs.\ngeolocate.on('outofmaxbounds', function() {\nconsole.log('An outofmaxbounds event has occurred.')\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#trackuserlocationend","title":"trackuserlocationend","text":"<p>Fired when the Geolocate Control changes to the background state, which happens when a user changes the camera during an active position lock. This only applies when trackUserLocation is true. In the background state, the dot on the map will update with location updates but the camera will not.</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\n// Set an event listener that fires\n// when a trackuserlocationend event occurs.\ngeolocate.on('trackuserlocationend', function() {\nconsole.log('A trackuserlocationend event has occurred.')\n});\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#trackuserlocationstart","title":"trackuserlocationstart","text":"<p>Fired when the Geolocate Control changes to the active lock state, which happens either upon first obtaining a successful Geolocation API position for the user (a geolocate event will follow), or the user clicks the geolocate button when in the background state which uses the last known position to recenter the map and enter active lock state (no geolocate event will follow unless the users's location changes).</p> <p>Example</p> <pre><code>// Initialize the geolocate control.\nvar geolocate = new vietmapgl.GeolocateControl({\npositionOptions: {\nenableHighAccuracy: true\n},\ntrackUserLocation: true\n});\n// Add the control to the map.\nmap.addControl(geolocate);\n// Set an event listener that fires\n// when a trackuserlocationstart event occurs.\ngeolocate.on('trackuserlocationstart', function() {\nconsole.log('A trackuserlocationstart event has occurred.')\n});\n</code></pre> <p>Related Locate the user</p>"},{"location":"sdk-web-gl/markers-and-controls/#attributioncontrol","title":"AttributionControl","text":"<p>src/ui/control/attribution_control.ts</p> <p>An AttributionControl control presents the map's attribution information.</p> <pre><code>new AttributionControl(options: Object?)\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#parameters_1","title":"Parameters","text":"<p>options(Object?)(default {})</p> Name Description options.compactboolean? If true , force a compact attribution that shows the full attribution on mouse hover. If false , force the full attribution control. The default is a responsive attribution that collapses when the map is less than 640 pixels wide. Attribution should not be collapsed if it can comfortably fit on the map. compact should only be used to modify default attribution when map size makes it impossible to fit default attribution and when the automatic compact resizing for default settings are not sufficient. options.customAttribution(string | Array)? (string | Array)?String or strings to show in addition to any other attributions."},{"location":"sdk-web-gl/markers-and-controls/#example_1","title":"Example","text":"<pre><code>var map = new vietmapgl.Map({attributionControl: false})\n.addControl(new vietmapgl.AttributionControl({\ncompact: true\n}));\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#scalecontrol","title":"ScaleControl","text":"<p>src/ui/control/scale_control.ts</p> <p>A ScaleControl control displays the ratio of a distance on the map to the corresponding distance on the ground.</p> <pre><code>new ScaleControl(options: Object?)\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#parameters_2","title":"Parameters","text":"<p>options(Object?)</p> Name Description options.maxWidthnumberdefault: '100' The maximum length of the scale control in pixels. options.unitstringdefault: 'metric' Unit of the distance ( 'imperial' , 'metric' or 'nautical' )."},{"location":"sdk-web-gl/markers-and-controls/#example_2","title":"Example","text":"<pre><code>var scale = new vietmapgl.ScaleControl({\nmaxWidth: 80,\nunit: 'imperial'\n});\nmap.addControl(scale);\n\nscale.setUnit('metric');\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#instance-members_4","title":"Instance Members","text":""},{"location":"sdk-web-gl/markers-and-controls/#setunitunit","title":"setUnit(unit)","text":"<p>Set the scale's unit of the distance</p> <p>Parameters</p> <p>unit(Unit)Unit of the distance ( 'imperial' , 'metric' or 'nautical' ).</p>"},{"location":"sdk-web-gl/markers-and-controls/#fullscreencontrol","title":"FullscreenControl","text":"<p>src/ui/control/fullscreen_control.ts</p> <p>A FullscreenControl control contains a button for toggling the map in and out of fullscreen mode.</p> <pre><code>new FullscreenControl(options: Object?)\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#parameters_3","title":"Parameters","text":"<p>options(Object?)</p> Name Description options.containerHTMLElement? container is the compatible DOM element which should be made full screen. By default, the map container element will be made full screen."},{"location":"sdk-web-gl/markers-and-controls/#example_3","title":"Example","text":"<pre><code>map.addControl(new vietmapgl.FullscreenControl({container: document.querySelector('body')}));\n</code></pre>"},{"location":"sdk-web-gl/markers-and-controls/#related_1","title":"Related","text":"<p>View a fullscreen map</p>"},{"location":"sdk-web-gl/overview/","title":"Overview","text":""},{"location":"sdk-web-gl/overview/#overview","title":"Overview","text":"<ul> <li>Custom map styles</li> <li>Fast vector maps</li> <li>Compatible with other VIETMMAP tools</li> </ul> <p>VietMap GL JS is a JavaScript library that uses WebGL to render interactive maps from vector tiles and VietMap styles. It is part of the VietMap GL ecosystem.</p>"},{"location":"sdk-web-gl/overview/#quickstart","title":"Quickstart","text":"<p>Include the JavaScript and CSS files in the of your HTML file. <pre><code>&lt;script src='https://maps.vietmap.vn/sdk/vietmap-gl/1.15.3/vietmap-gl.js'&gt;&lt;/script&gt;\n&lt;link href='https://maps.vietmap.vn/sdk/vietmap-gl/1.15.3/vietmap-gl.css' rel='stylesheet' /&gt;\n</code></pre> Include the following code in the of your HTML file. <pre><code>&lt;div id='map' style='width: 400px; height: 300px;'&gt;&lt;/div&gt;\n&lt;script&gt;\nvar map = new vietmapgl.Map({\ncontainer: 'map',\nstyle: 'https://maps.vietmap.vn/mt/tm/style.json?apikey=\"your-apikey\"', // stylesheet location\ncenter: [10, 106], // starting position [lng, lat]\nzoom: 9 // starting zoom\n});\n&lt;/script&gt;\n</code></pre></p>"},{"location":"sdk-web-gl/overview/#reading-this-documentation","title":"Reading this documentation","text":"<p>This documentation is divided into several sections: - Map. The Map object is the map on your page. It lets you access methods and properties for interacting with the map's style and layers, respond to events, and manipulate the user's perspective with the camera. - Properties and options. This section describes VietMap GL JS's global properties and options that you might want to access while initializing your map or accessing information about its status. - Markers and controls. This section describes the user interface elements that you can add to your map. The items in this section exist outside of the map's canvas element. - Geography and geometry. This section includes general utilities and types that relate to working with and manipulating geographic information or geometries. User interaction handlers. The items in this section relate to the ways in which the map responds to user input. - Sources. This section describes the source types VietMap GL JS can handle besides the ones described in the VietMap Style Specification. - Events. This section describes the different types of events that VietMap GL JS can raise.</p> <p>Each section describes classes or objects as well as their properties, parameters, instance members, and associated events. Many sections also include inline code examples and related resources.</p> <p>In the examples, we use vector tiles from MapTiler. Get your own API key if you want to use MapTiler data in your project.</p>"},{"location":"sdk-web-gl/overview/#csp-directives","title":"CSP Directives","text":"<p>As a mitigation for Cross-Site Scripting and other types of web security vulnerabilities, you may use a Content Security Policy (CSP) to specify security policies for your website. If you do, VietMap GL JS requires the following CSP directives: <pre><code>worker-src blob: ;\nchild-src blob: ;\nimg-src data: blob: ;\n</code></pre> For strict CSP environments without worker-src blob: ; child-src blob: enabled, there's a separate VietMap GL JS bundle (mapbox-gl-csp.js and mapbox-gl-csp-worker.js) which requires setting the path to the worker manually: <pre><code>&lt;script src='https://maps.vietmap.vn/sdk/vietmap-gl/1.15.3/vietmap-gl-csp.js'&gt;&lt;/script&gt;\n&lt;script&gt;\nmapboxgl.workerUrl = \"https://maps.vietmap.vn/sdk/vietmap-gl/1.15.3/vietmap-gl-csp-worker.js\";\n...\n&lt;/script&gt;\n</code></pre> If you use the sandbox directive, and your access token is restricted to certain URLs, the allow-same-origin value is required. This allows requests to have a Referer header that is not null. See the section on Referrer Policies for further information.</p>"},{"location":"sdk-web-gl/overview/#referrer-policies","title":"Referrer Policies","text":"<p>If you use a URL-restricted access token, you have to make sure that the browser sends the correct referrer header. This is the default setting. But if you use the Referrer-Policy header on your website, pick a value that still sends a Referer header, like no-referrer-when-downgrade, origin, origin-when-cross-origin, or strict-origin. Specifically, same-origin and no-referrer will never send a referrer header, and thus Mapbox API calls won't work. If you limit the referrer to the origin, make sure that the URL you restrict your access token to doesn't contain path information, because the Origin header doesn't contain a path by definition.</p>"},{"location":"sdk-web-gl/overview/#vietmap-css","title":"VietMap CSS","text":"<p>The CSS referenced in the Quickstart is used to style DOM elements created by VietMap code. Without the CSS, elements like Popups and Markers won't work. Including it with a in the head of the document via the UNPKG CDN is the simplest and easiest way to provide the CSS, but it is also bundled in the VietMap module, meaning that if you have a bundler that can handle CSS, you can import the CSS from VietMap-gl/dist/VietMap-gl.css. Note too that if the CSS isn't available by the first render, as soon as the CSS is provided, the DOM elements that depend on this CSS should recover.</p>"},{"location":"sdk-web-gl/properties-and-options/","title":"Properties and options","text":"<p>VIETMAP GL JS's global properties and options that you can access while initializing your map or accessing information about its status.</p>"},{"location":"sdk-web-gl/properties-and-options/#workercount","title":"workerCount","text":"<p>src/index.ts</p> <p>Gets and sets the number of web workers instantiated on a page with GL JS maps. By default, it is set to half the number of CPU cores (capped at 6). Make sure to set this property before creating any map instances for it to have effect.</p> <p>Returns</p> <p>number: Number of workers currently configured.</p> <p>Example</p> <pre><code>vietmapgl.workerCount = 2;\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#maxparallelimagerequests","title":"maxParallelImageRequests","text":"<p>src/index.ts</p> <p>Gets and sets the maximum number of images (raster tiles, sprites, icons) to load in parallel, which affects performance in raster-heavy maps. 16 by default.</p> <p>Returns</p> <p>number: Number of parallel requests currently configured.</p> <p>Example</p> <pre><code>vietmapgl.maxParallelImageRequests = 10;\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#supported","title":"supported","text":"<p>Test whether the browser supports vietmap GL JS.</p> <p>Parameters</p> <p>options(Object?)</p> Name Description options.failIfMajorPerformance Caveatbooleandefault: false If true , the function will return false if the performance of vietmap GL JS would be dramatically worse than expected (e.g. a software WebGL renderer would be used)."},{"location":"sdk-web-gl/properties-and-options/#returns","title":"Returns","text":"<p>boolean:</p>"},{"location":"sdk-web-gl/properties-and-options/#example","title":"Example","text":"<pre><code>// Show an alert if the browser does not support vietmap GL\nif (!vietmapgl.supported()) {\n    alert('Your browser does not support vietmap GL');\n}\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#setrtltextplugin","title":"setRTLTextPlugin","text":"<p>Sets the map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters","title":"Parameters","text":"<p>pluginURL(string) URL pointing to the Mapbox RTL text plugin source.</p> <p>callback(Function) Called with an error argument if there is an error.</p> <p>lazy(boolean) If set to true , mapboxgl will defer loading the plugin until rtl text is encountered, rtl text will then be rendered only after the plugin finishes loading.</p>"},{"location":"sdk-web-gl/properties-and-options/#example_1","title":"Example","text":"<pre><code>vietmapgl.setRTLTextPlugin('https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.0/mapbox-gl-rtl-text.js');\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#getrtltextpluginstatus","title":"getRTLTextPluginStatus","text":"<p>Gets the map's RTL text plugin status. The status can be unavailable (i.e. not requested or removed), loading, loaded or error. If the status is loaded and the plugin is requested again, an error will be thrown.</p> <p>Example</p> <pre><code>const pluginStatus = vietmapgl.getRTLTextPluginStatus();\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#clearstorage","title":"clearStorage","text":"<p>Clears browser storage used by this library. Using this method flushes the vietmap tile cache that is managed by this library. Tiles may still be cached by the browser in some cases.</p> <p>This API is supported on browsers where the Cache API is supported and enabled. This includes all major browsers when pages are served over https://, except Internet Explorer and Edge Mobile.</p> <p>When called in unsupported browsers or environments (private or incognito mode), the callback will be called with an error argument.</p> <p>Parameters</p> <p>callback(Function)Called with an error argument if there is an error.</p> <p>Example</p> <pre><code>vietmapgl.clearStorage();\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#addprotocol","title":"addProtocol","text":"<p>Sets a custom load tile function that will be called when using a source that starts with a custom url schema. The example below will be triggered for custom:// urls defined in the sources list in the style definitions. The function passed will receive the request parameters and should call the callback with the resulting request, for example a pbf vector tile, non-compressed, represented as ArrayBuffer.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_1","title":"Parameters","text":"<p>customProtocol(string) the protocol to hook, for example 'custom'.</p> <p>loadFn(Function) the function to use when trying to fetch a tile specified by the customProtocol.</p> <p>Example</p> <pre><code>// this will fetch a file using the fetch API (this is obviously a non iteresting example...)\nvietmap.addProtocol('custom', (params, callback) =&gt; {\n    fetch(`https://${params.url.split(\"://\")[1]}`)\n    .then(t =&gt; {\n        if (t.status == 200) {\n            t.arrayBuffer().then(arr =&gt; {\n                callback(null, arr, null, null);\n            });\n        } else {\n            callback(new Error(`Tile fetch error: ${t.statusText}`));\n        }\n    })\n    .catch(e =&gt; {\n        callback(new Error(e));\n    });\n    return { cancel: () =&gt; { } };\n    });\n    // the following is an example of a way to return an error when trying to load a tile\n    vietmap.addProtocol('custom2', (params, callback) =&gt; {\n        callback(new Error('someErrorMessage'));\n        return { cancel: () =&gt; { } };\n});\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#removeprotocol","title":"removeProtocol","text":"<p>Removes a previously added protocol</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_2","title":"Parameters","text":"<p>customProtocol(string)the custom protocol to remove registration for</p> <p>Example</p> <pre><code>vietmapgl.removeProtocol('custom');\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#animationoptions","title":"AnimationOptions","text":"<p>Options common to map movement methods that involve animation, such as Map#panBy and Map#easeTo, controlling the duration and easing function of the animation. All properties are optional.</p>"},{"location":"sdk-web-gl/properties-and-options/#properties","title":"Properties","text":"<p>duration(number): The animation's duration, measured in milliseconds.</p> <p>easing(Function): A function taking a time in the range 0..1 and returning a number where 0 is the initial state and 1 is the final state.</p> <p>offset(PointLike): of the target center relative to real map container center at the end of animation.</p> <p>animate(boolean): If false , no animation will occur.</p> <p>essential(boolean): If true , then the animation is considered essential and will not be affected by prefers-reduced-motion .</p>"},{"location":"sdk-web-gl/properties-and-options/#cameraoptions","title":"CameraOptions","text":"<p>Options common to Map#jumpTo, Map#easeTo, and Map#flyTo, controlling the desired location, zoom, bearing, and pitch of the camera. All properties are optional, and when a property is omitted, the current camera value for that property will remain unchanged.</p>"},{"location":"sdk-web-gl/properties-and-options/#properties_1","title":"Properties","text":"<p>center(LngLatLike): The desired center.</p> <p>zoom(number): The desired zoom level.</p> <p>bearing(number): The desired bearing in degrees. The bearing is the compass direction that is \"up\". For example, bearing: 90 orients the map so that east is up.</p> <p>pitch(number): The desired pitch in degrees. The pitch is the angle towards the horizon measured in degrees with a range between 0 and 60 degrees. For example, pitch: 0 provides the appearance of looking straight down at the map, while pitch: 60 tilts the user's perspective towards the horizon. Increasing the pitch value is often used to display 3D objects.</p> <p>around(LngLatLike): If zoom is specified, around determines the point around which the zoom is centered.</p> <p>padding(PaddingOptions): Dimensions in pixels applied on each side of the viewport for shifting the vanishing point.</p> <p>Example</p> <pre><code>// set the map's initial perspective with CameraOptions\nvar map = new vietmapgl.Map({\n    container: 'map',\n    style: 'https://maps.vietmap.vn/mt/tm/style.json?apikey=\"your-apikey\"',\n    center: [-73.5804, 45.53483],\n    pitch: 60,\n    bearing: -60,\n    zoom: 10\n});\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#paddingoptions","title":"PaddingOptions","text":"<p>Options for setting padding on calls to methods such as Map#fitBounds, Map#fitScreenCoordinates, and Map#setPadding. Adjust these options to set the amount of padding in pixels added to the edges of the canvas. Set a uniform padding on all edges or individual values for each edge. All properties of this object must be non-negative integers.</p>"},{"location":"sdk-web-gl/properties-and-options/#properties_2","title":"Properties","text":"<p>top(number)</p> <p>bottom(number)</p> <p>right(number)</p> <p>left(number)</p> <p>Example</p> <pre><code>var bbox = [[-79, 43], [-73, 45]];\nmap.fitBounds(bbox, {\n`padding: {top: 10, bottom:25, left: 15, right: 5}\n});\n\n\nvar bbox = [[-79, 43], [-73, 45]];\nmap.fitBounds(bbox, {\n`padding: 20\n});\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#static-members","title":"Static Members","text":"<p>bottom(number): Padding in pixels from the bottom of the map canvas.</p> <p>right(number): Padding in pixels from the right of the map canvas.</p> <p>left(number): Padding in pixels from the left of the map canvas.</p> <p>top(number): Padding in pixels from the top of the map canvas.</p>"},{"location":"sdk-web-gl/properties-and-options/#requestparameters","title":"RequestParameters","text":"<p>A RequestParameters object to be returned from Map.options.transformRequest callbacks.</p>"},{"location":"sdk-web-gl/properties-and-options/#properties_3","title":"Properties","text":"<p>url(string): The URL to be requested.</p> <p>headers(Object): The headers to be sent with the request.</p> <p>method(string): Request method 'GET' | 'POST' | 'PUT' .</p> <p>body(string): Request body.</p> <p>type(string): Response body type to be returned 'string' | 'json' | 'arrayBuffer' .</p> <p>credentials(string): 'same-origin'|'include' Use 'include' to send cookies with cross-origin requests.</p> <p>collectResourceTiming(boolean): If true, Resource Timing API information will be collected for these transformed requests and returned in a resourceTiming property of relevant data events.</p> <p>Example</p> <pre><code>// use transformRequest to modify requests that begin with `http://myHost`\ntransformRequest: function(url, resourceType) {\n    if (resourceType === 'Source' &amp;&amp; url.indexOf('http://myHost') &gt; -1) {\n        return {\n            url: url.replace('http', 'https'),\n            headers: { 'my-custom-header': true },\n            credentials: 'include'  // Include cookies for cross-origin requests\n        }\n    }\n}\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#styleimageinterface","title":"StyleImageInterface","text":"<p>Interface for dynamically generated style images. This is a specification for implementers to model: it is not an exported method or class.</p> <p>Images implementing this interface can be redrawn for every frame. They can be used to animate icons and patterns or make them respond to user input. Style images can implement a StyleImageInterface#render method. The method is called every frame and can be used to update the image.</p> <p>Example</p> <pre><code>var flashingSquare = {\n    width: 64,\n    height: 64,\n    data: new Uint8Array(64 * 64 * 4),\n\nonAdd: function(map) {\n        this.map = map;\n    },\n\n    render: function() {\n    // keep repainting while the icon is on the map\n        this.map.triggerRepaint();\n\n        // alternate between black and white based on the time\n        var value = Math.round(Date.now() / 1000) % 2 === 0  ? 255 : 0;\n\n        // check if image needs to be changed\n        if (value !== this.previousValue) {\n        this.previousValue = value;\n\n        var bytesPerPixel = 4;\n        for (var x = 0; x &lt; this.width; x++) {\n            for (var y = 0; y &lt; this.height; y++) {\n                var offset = (y * this.width + x) * bytesPerPixel;\n                this.data[offset + 0] = value;\n                this.data[offset + 1] = value;\n                this.data[offset + 2] = value;\n                this.data[offset + 3] = 255;\n            }\n        }\n\n        // return true to indicate that the image changed\n        return true;\n        }\n    }\n}\n\nmap.addImage('flashing_square', flashingSquare);\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#instance-members","title":"Instance Members","text":"<p>data((Uint8Array | Uint8ClampedArray))</p> <p>height(number)</p> <p>onAdd (map)</p> <p>Optional method called when the layer has been added to the Map with Map#addImage.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_3","title":"Parameters","text":"<p>map(Map) The Map this custom layer was just added to.</p> <p>onRemove() Optional method called when the icon is removed from the map with Map#removeImage. This gives the image a chance to clean up resources and event listeners.</p> <p>render() This method is called once before every frame where the icon will be used. The method can optionally update the image's data member with a new image.</p> <p>If the method updates the image it must return true to commit the change. If the method returns false or nothing the image is assumed to not have changed.</p> <p>If updates are infrequent it maybe easier to use Map#updateImage to update the image instead of implementing this method.</p> <p>Returns</p> <p>boolean: true if this method updated the image. false if the image was not changed.</p> <p>width(number)</p>"},{"location":"sdk-web-gl/properties-and-options/#customlayerinterface","title":"CustomLayerInterface","text":"<p>Interface for custom style layers. This is a specification for implementers to model: it is not an exported method or class.</p> <p>Custom layers allow a user to render directly into the map's GL context using the map's camera. These layers can be added between any regular layers using Map#addLayer.</p> <p>Custom layers must have a unique id and must have the type of \"custom\". They must implement render and may implement prerender, onAdd and onRemove. They can trigger rendering using Map#triggerRepaint and they should appropriately handle Map.event:webglcontextlost and Map.event:webglcontextrestored.</p> <p>The renderingMode property controls whether the layer is treated as a \"2d\" or \"3d\" map layer. Use:</p> <ul> <li> <p>\"renderingMode\": \"3d\" to use the depth buffer and share it with other layers</p> </li> <li> <p>\"renderingMode\": \"2d\" to add a layer with no depth. If you need to use the depth buffer for a \"2d\" layer you must use an offscreen framebuffer and CustomLayerInterface#prerender</p> </li> </ul> <p>Example</p> <pre><code>// Custom layer implemented as ES6 class\nclass NullIslandLayer {\n    constructor() {\n        this.id = 'null-island';\n        this.type = 'custom';\n        this.renderingMode = '2d';\n    }\n\n    onAdd(map, gl) {\n        const vertexSource = `\n        uniform mat4 u_matrix;\n        void main() {\n        gl_Position = u_matrix * vec4(0.5, 0.5, 0.0, 1.0);\n        gl_PointSize = 20.0;\n    }`;\n\n    const fragmentSource = `\n    void main() {\n        gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n    }`;\n\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, vertexShader);\n    gl.attachShader(this.program, fragmentShader);\n    gl.linkProgram(this.program);\n    }\n\n    render(gl, matrix) {\n        gl.useProgram(this.program);\n        gl.uniformMatrix4fv(gl.getUniformLocation(this.program, \"u_matrix\"), false, matrix);\n        gl.drawArrays(gl.POINTS, 0, 1);\n    }\n}\n\nmap.on('load', function() {\n    map.addLayer(new NullIslandLayer());\n});\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#instance-members_1","title":"Instance Members","text":"<p>id(string): A unique layer id.</p> <p>onAdd(map, gl): Optional method called when the layer has been added to the Map with Map#addLayer. This gives the layer a chance to initialize gl resources and register event listeners.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_4","title":"Parameters","text":"<p>map(Map) The Map this custom layer was just added to.</p> <p>gl(WebGLRenderingContext) The gl context for the map.</p> <p>onRemove( map, gl)</p> <p>Optional method called when the layer has been removed from the Map with Map#removeLayer. This gives the layer a chance to clean up gl resources and event listeners.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_5","title":"Parameters","text":"<p>map(Map) The Map this custom layer was just added to.</p> <p>gl(WebGLRenderingContext) The gl context for the map.</p> <p>prerender(gl, matrix)</p> <p>Optional method called during a render frame to allow a layer to prepare resources or render into a texture.</p> <p>The layer cannot make any assumptions about the current GL state and must bind a framebuffer before rendering.</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_6","title":"Parameters","text":"<p>gl(WebGLRenderingContext) The map's gl context.</p> <p>matrix(mat4)  The map's camera matrix. It projects spherical mercator coordinates to gl coordinates. The mercator coordinate [0, 0] represents the top left corner of the mercator world and [1, 1] represents the bottom right corner. When the renderingMode is \"3d\" , the z coordinate is conformal. A box with identical x, y, and z lengths in mercator units would be rendered as a cube. MercatorCoordinate .fromLngLat can be used to project a LngLat to a mercator coordinate.</p> <p>render(gl, matrix) Called during a render frame allowing the layer to draw into the GL context.</p> <p>The layer can assume blending and depth state is set to allow the layer to properly blend and clip other layers. The layer cannot make any other assumptions about the current GL state.</p> <p>If the layer needs to render to a texture, it should implement the prerender method to do this and only use the render method for drawing directly into the main framebuffer.</p> <p>The blend function is set to gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA). This expects colors to be provided in premultiplied alpha form where the r, g and b values are already multiplied by the a value. If you are unable to provide colors in premultiplied form you may want to change the blend function to gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA).</p>"},{"location":"sdk-web-gl/properties-and-options/#parameters_7","title":"Parameters","text":"<p>gl(WebGLRenderingContext) The map's gl context.</p> <p>matrix(Array ) The map's camera matrix. It projects spherical mercator coordinates to gl coordinates. The spherical mercator coordinate [0, 0] represents the top left corner of the mercator world and [1, 1] represents the bottom right corner. When the renderingMode is \"3d\" , the z coordinate is conformal. A box with identical x, y, and z lengths in mercator units would be rendered as a cube. MercatorCoordinate .fromLngLat can be used to project a LngLat to a mercator coordinate.</p> <p>renderingMode(string): Either \"2d\" or \"3d\" . Defaults to \"2d\" .</p> <p>type(string): The layer's type. Must be \"custom\" .</p>"},{"location":"sdk-web-gl/properties-and-options/#prewarm","title":"prewarm","text":"<p>Initializes resources like WebWorkers that can be shared across maps to lower load times in some situations. vietmapgl.workerUrl and vietmapgl.workerCount, if being used, must be set before prewarm() is called to have an effect.</p> <p>By default, the lifecycle of these resources is managed automatically, and they are lazily initialized when a Map is first created. By invoking prewarm(), these resources will be created ahead of time, and will not be cleared when the last Map is removed from the page. This allows them to be re-used by new Map instances that are created later. They can be manually cleared by calling vietmapgl.clearPrewarmedResources(). This is only necessary if your web page remains active but stops using maps altogether.</p> <p>This is primarily useful when using GL-JS maps in a single page app, wherein a user would navigate between various views that can cause Map instances to constantly be created and destroyed.</p> <p>Example</p> <pre><code>vietmapgl.prewarm()\n</code></pre>"},{"location":"sdk-web-gl/properties-and-options/#clearprewarmedresources","title":"clearPrewarmedResources","text":"<p>Clears up resources that have previously been created by vietmapgl.prewarm(). Note that this is typically not necessary. You should only call this function if you expect the user of your app to not return to a Map view at any point in your application.</p> <p>Example</p> <pre><code>vietmapgl.clearPrewarmedResources()\n</code></pre>"},{"location":"sdk-web-gl/sources/","title":"Sources","text":"<p>The source types vietmap GL JS can handle in addition to the ones described in the vietmap Style Specification.</p>"},{"location":"sdk-web-gl/sources/#geojsonsource","title":"GeoJSONSource","text":"<p>A source containing GeoJSON. (See the Style Specification for detailed documentation of options.)</p> <p>Extends Evented.</p> <p>Example</p> <pre><code>map.addSource('some id', {\n    type: 'geojson',\n    data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\n});\n\n\nmap.addSource('some id', {\n    type: 'geojson',\n    data: {\n    \"type\": \"FeatureCollection\",\n    \"features\": [{\n        \"type\": \"Feature\",\n        \"properties\": {},\n        \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": [\n                -76.53063297271729,\n                39.18174077994108\n            ]\n        }\n    }]\n    }\n});\n\n\nmap.getSource('some id').setData({\n    \"type\": \"FeatureCollection\",\n    \"features\": [{\n        \"type\": \"Feature\",\n        \"properties\": { \"name\": \"Null Island\" },\n        \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [ 0, 0 ]\n        }\n    }]\n});\n</code></pre>"},{"location":"sdk-web-gl/sources/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/sources/#getclusterchildrenclusterid-callback","title":"getClusterChildren(clusterId, callback)","text":"<p>For clustered sources, fetches the children of the given cluster on the next zoom level (as an array of GeoJSON features).</p> <p>Parameters</p> <ul> <li>clusterId(number)The value of the cluster's cluster_id property.</li> <li>callback(Callback&gt;)A callback to be called when the features are retrieved ( (error, features) =&gt; { ... } ).</li> </ul> <p>Returns</p> <p>GeoJSONSource: this</p>"},{"location":"sdk-web-gl/sources/#getclusterexpansionzoomclusterid-callback","title":"getClusterExpansionZoom(clusterId, callback)","text":"<p>For clustered sources, fetches the zoom at which the given cluster expands.</p> <p>Parameters</p> <ul> <li>clusterId(number)The value of the cluster's cluster_id property.</li> <li>callback(Callback)A callback to be called when the zoom value is retrieved ( (error, zoom) =&gt; { ... } ).</li> </ul> <p>Returns</p> <p>GeoJSONSource: this</p>"},{"location":"sdk-web-gl/sources/#getclusterleavesclusterid-limit-offset-callback","title":"getClusterLeaves(clusterId, limit, offset, callback)","text":"<p>For clustered sources, fetches the original points that belong to the cluster (as an array of GeoJSON features).</p> <p>Parameters</p> <p>clusterId(number) The value of the cluster's cluster_id property.</p> <p>limit(number) The maximum number of features to return.</p> <p>offset(number) The number of features to skip (e.g. for pagination).</p> <p>callback(Callback&gt;)A callback to be called when the features are retrieved ( (error, features) =&gt; { ... } ).</p> <p>Returns</p> <p>GeoJSONSource: this</p> <p>Example</p> <pre><code>// Retrieve cluster leaves on click\nmap.on('click', 'clusters', function(e) {\n    var features = map.queryRenderedFeatures(e.point, {\n        layers: ['clusters']\n    });\n\n    var clusterId = features[0].properties.cluster_id;\n    var pointCount = features[0].properties.point_count;\n    var clusterSource = map.getSource('clusters');\n\n    clusterSource.getClusterLeaves(clusterId, pointCount, 0, function(error, features) {\n        // Print cluster leaves in the console\n        console.log('Cluster leaves:', error, features);\n    })\n});\n</code></pre>"},{"location":"sdk-web-gl/sources/#setdatadata","title":"setData(data)","text":"<p>Sets the GeoJSON data and re-renders the map.</p> <p>Parameters</p> <p>data((Object | string)) A GeoJSON data object or a URL to one. The latter is preferable in the case of large GeoJSON files.</p> <p>Returns</p> <p>GeoJSONSource: this</p>"},{"location":"sdk-web-gl/sources/#videosource","title":"VideoSource","text":"<p>A data source containing video. (See the Style Specification for detailed documentation of options.)</p> <p>Extends ImageSource.  Example</p> <pre><code>// add to map\nmap.addSource('some id', {\n    type: 'video',\n    url: [\n        'https://www.mapbox.com/blog/assets/baltimore-smoke.mp4',\n        'https://www.mapbox.com/blog/assets/baltimore-smoke.webm'\n    ],\n    coordinates: [\n        [-76.54, 39.18],\n        [-76.52, 39.18],\n        [-76.52, 39.17],\n        [-76.54, 39.17]\n    ]\n});\n\n// update\nvar mySource = map.getSource('some id');\nmySource.setCoordinates([\n    [-76.54335737228394, 39.18579907229748],\n    [-76.52803659439087, 39.1838364847587],\n    [-76.5295386314392, 39.17683392507606],\n    [-76.54520273208618, 39.17876344106642]\n]);\n\nmap.removeSource('some id');  // remove\n</code></pre>"},{"location":"sdk-web-gl/sources/#instance-members_1","title":"Instance Members","text":""},{"location":"sdk-web-gl/sources/#getvideo","title":"getVideo()","text":"<p>Returns the HTML video element.</p> <p>Returns</p> <p>HTMLVideoElement: The HTML video element.</p>"},{"location":"sdk-web-gl/sources/#pause","title":"pause()","text":"<p>Pauses the video.</p>"},{"location":"sdk-web-gl/sources/#play","title":"play()","text":"<p>Plays the video.</p>"},{"location":"sdk-web-gl/sources/#setcoordinates","title":"setCoordinates()","text":"<p>Sets the video's coordinates and re-renders the map.</p> <p>Returns</p> <p>VideoSource: this</p>"},{"location":"sdk-web-gl/sources/#imagesource","title":"ImageSource","text":"<p>A data source containing an image. (See the Style Specification for detailed documentation of options.)</p> <p>Extends Evented.</p> <p>Example</p> <pre><code>// add to map\nmap.addSource('some id', {\n    type: 'image',\n    url: 'https://www.vietmap.org/images/foo.png',\n    coordinates: [\n        [-76.54, 39.18],\n        [-76.52, 39.18],\n        [-76.52, 39.17],\n        [-76.54, 39.17]\n    ]\n    });\n\n    // update coordinates\n    var mySource = map.getSource('some id');\n    mySource.setCoordinates([\n        [-76.54335737228394, 39.18579907229748],\n        [-76.52803659439087, 39.1838364847587],\n        [-76.5295386314392, 39.17683392507606],\n        [-76.54520273208618, 39.17876344106642]\n    ]);\n\n    // update url and coordinates simultaneously\n    mySource.updateImage({\n    url: 'https://www.vietmap.org/images/bar.png',\n    coordinates: [\n        [-76.54335737228394, 39.18579907229748],\n        [-76.52803659439087, 39.1838364847587],\n        [-76.5295386314392, 39.17683392507606],\n        [-76.54520273208618, 39.17876344106642]\n    ]\n})\n\nmap.removeSource('some id');  // remove\n</code></pre>"},{"location":"sdk-web-gl/sources/#instance-members_2","title":"Instance Members","text":""},{"location":"sdk-web-gl/sources/#setcoordinatescoordinates","title":"setCoordinates(coordinates)","text":"<p>Sets the image's coordinates and re-renders the map.</p> <p>Parameters coordinates(Array&gt;)Four geographical coordinates, represented as arrays of longitude and latitude numbers, which define the corners of the image. The coordinates start at the top left corner of the image and proceed in clockwise order. They do not have to represent a rectangle.</p> <p>Returns</p> <p>ImageSource: this</p>"},{"location":"sdk-web-gl/sources/#updateimageoptions","title":"updateImage(options)","text":"<p>Updates the image URL and, optionally, the coordinates. To avoid having the image flash after changing, set the raster-fade-duration paint property on the raster layer to 0.</p> <p>Parameters</p> <p>options(Object)Options object. |Name|Description| |--- |--- | |options.urlstring?|Required image URL.| |options.coordinatesArray &gt;?|Four geographical coordinates, represented as arrays of longitude and latitude numbers, which define the corners of the image. The coordinates start at the top left corner of the image and proceed in clockwise order. They do not have to represent a rectangle.| <p>Returns</p> <p>ImageSource: this</p>"},{"location":"sdk-web-gl/sources/#canvassource","title":"CanvasSource","text":"<p>A data source containing the contents of an HTML canvas. See CanvasSourceOptions for detailed documentation of options.</p> <p>Extends ImageSource.</p> <p>Example</p> <pre><code>// add to map\nmap.addSource('some id', {\n    type: 'canvas',\n    canvas: 'idOfMyHTMLCanvas',\n    animate: true,\n    coordinates: [\n        [-76.54, 39.18],\n        [-76.52, 39.18],\n        [-76.52, 39.17],\n        [-76.54, 39.17]\n        ]\n});\n\n// update\nvar mySource = map.getSource('some id');\nmySource.setCoordinates([\n    [-76.54335737228394, 39.18579907229748],\n    [-76.52803659439087, 39.1838364847587],\n    [-76.5295386314392, 39.17683392507606],\n    [-76.54520273208618, 39.17876344106642]\n]);\n\nmap.removeSource('some id');  // remove\n</code></pre>"},{"location":"sdk-web-gl/sources/#instance-members_3","title":"Instance Members","text":""},{"location":"sdk-web-gl/sources/#getcanvas","title":"getCanvas()","text":"<p>Returns the HTML canvas element.</p> <p>Returns</p> <p>HTMLCanvasElement: The HTML canvas element.</p>"},{"location":"sdk-web-gl/sources/#pause_1","title":"pause()","text":"<p>Disables animation. The map will display a static copy of the canvas image.</p>"},{"location":"sdk-web-gl/sources/#play_1","title":"play()","text":"<p>Enables animation. The image will be copied from the canvas to the map on each frame.</p>"},{"location":"sdk-web-gl/sources/#canvassourceoptions","title":"CanvasSourceOptions()","text":"<p>Options to add a canvas source type to the map.</p>"},{"location":"sdk-web-gl/sources/#properties","title":"Properties","text":"<p>type(string): Source type. Must be \"canvas\" .</p> <p>canvas((string | HTMLCanvasElement)): Canvas source from which to read pixels. Can be a string representing the ID of the canvas element, or the HTMLCanvasElement itself.</p> <p>coordinates(&lt;Array&gt;): Four geographical coordinates denoting where to place the corners of the canvas, specified in [longitude, latitude] pairs.</p> <p>animate(boolean?): Whether the canvas source is animated. If the canvas is static (i.e. pixels do not need to be re-read on every frame), animate should be set to false to improve performance.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/","title":"User interaction handlers","text":"<p>Items related to the ways in which the map responds to user input.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#boxzoomhandler","title":"BoxZoomHandler","text":"<p>The BoxZoomHandler allows the user to zoom the map to fit within a bounding box. The bounding box is defined by clicking and holding shift while dragging the cursor.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable","title":"disable()","text":"<p>Disables the \"box zoom\" interaction.</p> <p>Example</p> <pre><code>map.boxZoom.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable","title":"enable()","text":"<p>Enables the \"box zoom\" interaction.</p> <p>Example</p> <pre><code>map.boxZoom.enable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive","title":"isActive()","text":"<p>Returns a Boolean indicating whether the \"box zoom\" interaction is active, i.e. currently being used.</p> <p>Returns</p> <p>boolean: true if the \"box zoom\" interaction is active.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"box zoom\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"box zoom\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#scrollzoomhandler","title":"ScrollZoomHandler","text":"<p>The ScrollZoomHandler allows the user to zoom the map by scrolling.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_1","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_1","title":"disable()","text":"<p>Disables the \"scroll to zoom\" interaction.</p> <p>Example</p> <pre><code>map.scrollZoom.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_1","title":"enable()","text":"<p>Enables the \"scroll to zoom\" interaction.</p> <p>Parameters</p> <p>options(Object?)Options object. |Name|Description| |--- |--- | |options.aroundstring?|If \"center\" is passed, map will zoom around center of map|</p> <p>Example</p> <pre><code>map.scrollZoom.enable();\n\n\nmap.scrollZoom.enable({ around: 'center' })\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled_1","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"scroll to zoom\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"scroll to zoom\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#wheelzoomratewheelzoomrate","title":"wheelZoomRate(wheelZoomRate)","text":"<p>Set the zoom rate of a mouse wheel</p> <p>Parameters</p> <p>wheelZoomRate(number)(default 1/450)The rate used to scale mouse wheel movement to a zoom value.</p> <p>Example</p> <pre><code>// Slow down zoom of mouse wheel\nmap.scrollZoom.setWheelZoomRate(1/600);\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#setzoomratezoomrate","title":"setZoomRate(zoomRate)","text":"<p>Set the zoom rate of a trackpad</p> <p>Parameters</p> <p>zoomRate(number)(default 1/100)The rate used to scale trackpad movement to a zoom value.</p> <p>Example</p> <pre><code>// Speed up trackpad zoom\nmap.scrollZoom.setZoomRate(1/25);\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#dragpanhandler","title":"DragPanHandler","text":"<p>The DragPanHandler allows the user to pan the map by clicking and dragging the cursor.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_2","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_2","title":"disable()","text":"<p>Disables the \"drag to pan\" interaction.</p> <p>Example</p> <pre><code>map.dragPan.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_2","title":"enable()","text":"<p>Enables the \"drag to pan\" interaction.</p> <p>Parameters</p> <p>options(Object?)Options object</p> Name Description options.linearitynumberdefault: 0 factor used to scale the drag velocity options.easingFunctiondefault: bezier(0,0,0.3,1) easing function applled to map.panTo when applying the drag. options.maxSpeednumberdefault: 1400 the maximum value of the drag velocity. options.decelerationnumberdefault: 2500 the rate at which the speed reduces after the pan ends. <p>Example</p> <pre><code>map.dragPan.enable();\n\n\nmap.dragPan.enable({\n    linearity: 0.3,\n    easing: bezier(0, 0, 0.3, 1),\n    maxSpeed: 1400,\n    deceleration: 2500,\n});\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_1","title":"isActive()","text":"<p>Returns a Boolean indicating whether the \"drag to pan\" interaction is active, i.e. currently being used.</p> <p>Returns</p> <p>boolean: true if the \"drag to pan\" interaction is active.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled_2","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"drag to pan\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"drag to pan\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#dragrotatehandler","title":"DragRotateHandler","text":"<p>The DragRotateHandler allows the user to rotate the map by clicking and dragging the cursor while holding the right mouse button or ctrl key.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_3","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_3","title":"disable()","text":"<p>Disables the \"drag to rotate\" interaction.</p> <p>Example</p> <pre><code>map.dragRotate.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_3","title":"enable()","text":"<p>Enables the \"drag to rotate\" interaction.</p> <p>Example</p> <pre><code>map.dragRotate.enable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_2","title":"isActive()","text":"<p>Returns a Boolean indicating whether the \"drag to rotate\" interaction is active, i.e. currently being used.</p> <p>Returns</p> <p>boolean: true if the \"drag to rotate\" interaction is active.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled_3","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"drag to rotate\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"drag to rotate\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#keyboardhandler","title":"KeyboardHandler","text":"<p>The KeyboardHandler allows the user to zoom, rotate, and pan the map using the following keyboard shortcuts:</p> <ul> <li>= / +: Increase the zoom level by 1.</li> <li>Shift-= / Shift-+: Increase the zoom level by 2.</li> <li>-: Decrease the zoom level by 1.</li> <li>Shift--: Decrease the zoom level by 2.</li> <li>Arrow keys: Pan by 100 pixels.</li> <li>Shift+\u21e2: Increase the rotation by 15 degrees.</li> <li>Shift+\u21e0: Decrease the rotation by 15 degrees.</li> <li>Shift+\u21e1: Increase the pitch by 10 degrees.</li> <li>Shift+\u21e3: Decrease the pitch by 10 degrees.</li> </ul>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_4","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_4","title":"disable()","text":"<p>Disables the \"keyboard rotate and zoom\" interaction.</p> <p>Example</p> <pre><code>map.keyboard.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#disablerotation","title":"disableRotation()","text":"<p>Disables the \"keyboard pan/rotate\" interaction, leaving the \"keyboard zoom\" interaction enabled.</p> <p>Example</p> <pre><code>map.keyboard.disableRotation();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_4","title":"enable()","text":"<p>Enables the \"keyboard rotate and zoom\" interaction.</p> <p>Example</p> <pre><code>map.keyboard.enable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enablerotation","title":"enableRotation()","text":"<p>Enables the \"keyboard pan/rotate\" interaction.</p> <p>Example</p> <pre><code>map.keyboard.enable();\nmap.keyboard.enableRotation();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_3","title":"isActive()","text":"<p>Returns true if the handler is enabled and has detected the start of a zoom/rotate gesture.</p> <p>Returns</p> <p>boolean: true if the handler is enabled and has detected the start of a zoom/rotate gesture.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenable","title":"isEnable()","text":"<p>Returns a Boolean indicating whether the \"keyboard rotate and zoom\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"keyboard rotate and zoom\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#doubleclickzoomhandler","title":"DoubleClickZoomHandler","text":"<p>The DoubleClickZoomHandler allows the user to zoom the map at a point by double clicking or double tapping.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_5","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_5","title":"disable()","text":"<p>Disables the \"double click to zoom\" interaction.</p> <p>Example</p> <pre><code>map.doubleClickZoom.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_5","title":"enable()","text":"<p>Enables the \"double click to zoom\" interaction.</p> <p>Example</p> <pre><code>map.doubleClickZoom.enable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_4","title":"isActive()","text":"<p>Returns a Boolean indicating whether the \"double click to zoom\" interaction is active, i.e. currently being used.</p> <p>Returns</p> <p>boolean: true if the \"double click to zoom\" interaction is active.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled_4","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"double click to zoom\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"double click to zoom\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#touchzoomrotatehandler","title":"TouchZoomRotateHandler","text":"<p>The TouchZoomRotateHandler allows the user to zoom and rotate the map by pinching on a touchscreen.</p> <p>They can zoom with one finger by double tapping and dragging. On the second tap, hold the finger down and drag up or down to zoom in or out.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_6","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_6","title":"disable()","text":"<p>Disables the \"pinch to rotate and zoom\" interaction.</p> <p>Example</p> <pre><code>map.touchZoomRotate.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#disablerotation_1","title":"disableRotation()","text":"<p>Disables the \"pinch to rotate\" interaction, leaving the \"pinch to zoom\" interaction enabled.</p> <p>Example</p> <pre><code>map.touchZoomRotate.disableRotation();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enableoptions","title":"enable(options?)","text":"<p>Enables the \"pinch to rotate and zoom\" interaction.</p> <p>Parameters</p> <p>options(Object?)Options object.</p> <p>Name</p> <p>Description</p> <p>options.around string?</p> <p>If \"center\" is passed, map will zoom around the center</p> <p>Example</p> <pre><code>map.touchZoomRotate.enable();\n\n\nmap.touchZoomRotate.enable({ around: 'center' });\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enablerotation_1","title":"enableRotation()","text":"<p>Enables the \"pinch to rotate\" interaction.</p> <p>Example</p> <pre><code>map.touchZoomRotate.enable();\nmap.touchZoomRotate.enableRotation();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_5","title":"isActive()","text":"<p>Returns true if the handler is enabled and has detected the start of a zoom/rotate gesture.</p> <p>Returns</p> <p>boolean: //eslint-disable-line</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenabled_5","title":"isEnabled()","text":"<p>Returns a Boolean indicating whether the \"pinch to rotate and zoom\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"pinch to rotate and zoom\" interaction is enabled.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#touchpitchhandler","title":"TouchPitchHandler","text":"<p>The TouchPitchHandler allows the user to pitch the map by dragging up and down with two fingers.</p> <p>Extends TwoTouchHandler.</p> <pre><code>new TouchPitchHandler()\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#instance-members_7","title":"Instance Members","text":""},{"location":"sdk-web-gl/user-interaction-handlers/#disable_7","title":"disable()","text":"<p>Disables the \"drag to pitch\" interaction.</p> <p>Example</p> <pre><code>map.touchPitch.disable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#enable_6","title":"enable()","text":"<p>Enables the \"drag to pitch\" interaction.</p> <p>Example</p> <pre><code>map.touchPitch.enable();\n</code></pre>"},{"location":"sdk-web-gl/user-interaction-handlers/#isactive_6","title":"isActive()","text":"<p>Returns a Boolean indicating whether the \"drag to pitch\" interaction is active, i.e. currently being used.</p> <p>Returns</p> <p>boolean: true if the \"drag to pitch\" interaction is active.</p>"},{"location":"sdk-web-gl/user-interaction-handlers/#isenable_1","title":"isEnable()","text":"<p>Returns a Boolean indicating whether the \"drag to pitch\" interaction is enabled.</p> <p>Returns</p> <p>boolean: true if the \"drag to pitch\" interaction is enabled.</p>"}]}